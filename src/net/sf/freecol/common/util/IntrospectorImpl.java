// generated by Introspector::main
package net.sf.freecol.common.util;
import net.sf.freecol.common.util.Introspector.Meta;
class IntrospectorImpl {
static final java.util.Map<String,Class<?>> names = new java.util.HashMap<>();
static final java.util.Map<Class<?>,Meta> metas = new java.util.HashMap<>();
static {
// net.sf.freecol.common.networking.Message
final Meta common_networking_Message = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getPriority": return ((net.sf.freecol.common.networking.Message)object).getPriority();
  case "getType": return ((net.sf.freecol.common.networking.Message)object).getType();
  case "currentPlayerMessage": return ((net.sf.freecol.common.networking.Message)object).currentPlayerMessage();
  case "canMerge": return ((net.sf.freecol.common.networking.Message)object).canMerge();
  case "getPriorityLevel": return ((net.sf.freecol.common.networking.Message)object).getPriorityLevel();
  }
  return super.invokeMethod(object, method, params);
}
};
names.put("common.networking.Message", net.sf.freecol.common.networking.Message.class);
metas.put(net.sf.freecol.common.networking.Message.class, common_networking_Message);
// net.sf.freecol.common.networking.TrivialMessage
final Meta common_networking_TrivialMessage = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_Message.invokeMethod(object, method, params);
}
};
names.put("common.networking.TrivialMessage", net.sf.freecol.common.networking.TrivialMessage.class);
metas.put(net.sf.freecol.common.networking.TrivialMessage.class, common_networking_TrivialMessage);
// net.sf.freecol.common.networking.AttributeMessage
final Meta common_networking_AttributeMessage = new Meta() {
net.sf.freecol.common.networking.AttributeMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, java.lang.String[].class))
    return new net.sf.freecol.common.networking.AttributeMessage((java.lang.String)params[0], (java.lang.String[])params[1]);
  if (areSame(types, java.lang.String.class))
    return new net.sf.freecol.common.networking.AttributeMessage((java.lang.String)params[0]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "setMergeable": return ((net.sf.freecol.common.networking.AttributeMessage)object).setMergeable((boolean)params[0]);
  }
  return common_networking_TrivialMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.AttributeMessage", net.sf.freecol.common.networking.AttributeMessage.class);
metas.put(net.sf.freecol.common.networking.AttributeMessage.class, common_networking_AttributeMessage);
// net.sf.freecol.common.networking.ObjectMessage
final Meta common_networking_ObjectMessage = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.ObjectMessage", net.sf.freecol.common.networking.ObjectMessage.class);
metas.put(net.sf.freecol.common.networking.ObjectMessage.class, common_networking_ObjectMessage);
// net.sf.freecol.common.networking.SetGoodsLevelsMessage
final Meta common_networking_SetGoodsLevelsMessage = new Meta() {
net.sf.freecol.common.networking.SetGoodsLevelsMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Colony.class, net.sf.freecol.common.model.ExportData.class))
    return new net.sf.freecol.common.networking.SetGoodsLevelsMessage((net.sf.freecol.common.model.Colony)params[0], (net.sf.freecol.common.model.ExportData)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.SetGoodsLevelsMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ObjectMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.SetGoodsLevelsMessage", net.sf.freecol.common.networking.SetGoodsLevelsMessage.class);
metas.put(net.sf.freecol.common.networking.SetGoodsLevelsMessage.class, common_networking_SetGoodsLevelsMessage);
// net.sf.freecol.common.networking.HighScoresMessage
final Meta common_networking_HighScoresMessage = new Meta() {
net.sf.freecol.common.networking.HighScoresMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, java.util.List.class))
    return new net.sf.freecol.common.networking.HighScoresMessage((java.lang.String)params[0], (java.util.List)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.HighScoresMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ObjectMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.HighScoresMessage", net.sf.freecol.common.networking.HighScoresMessage.class);
metas.put(net.sf.freecol.common.networking.HighScoresMessage.class, common_networking_HighScoresMessage);
// net.sf.freecol.common.networking.UpdateMapGeneratorOptionsMessage
final Meta common_networking_UpdateMapGeneratorOptionsMessage = new Meta() {
net.sf.freecol.common.networking.UpdateMapGeneratorOptionsMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.option.OptionGroup.class))
    return new net.sf.freecol.common.networking.UpdateMapGeneratorOptionsMessage((net.sf.freecol.common.option.OptionGroup)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.UpdateMapGeneratorOptionsMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ObjectMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.UpdateMapGeneratorOptionsMessage", net.sf.freecol.common.networking.UpdateMapGeneratorOptionsMessage.class);
metas.put(net.sf.freecol.common.networking.UpdateMapGeneratorOptionsMessage.class, common_networking_UpdateMapGeneratorOptionsMessage);
// net.sf.freecol.common.networking.EmigrateUnitMessage
final Meta common_networking_EmigrateUnitMessage = new Meta() {
net.sf.freecol.common.networking.EmigrateUnitMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, int.class))
    return new net.sf.freecol.common.networking.EmigrateUnitMessage((int)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.EmigrateUnitMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.EmigrateUnitMessage", net.sf.freecol.common.networking.EmigrateUnitMessage.class);
metas.put(net.sf.freecol.common.networking.EmigrateUnitMessage.class, common_networking_EmigrateUnitMessage);
// net.sf.freecol.common.networking.MissionaryMessage
final Meta common_networking_MissionaryMessage = new Meta() {
net.sf.freecol.common.networking.MissionaryMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Direction.class, boolean.class))
    return new net.sf.freecol.common.networking.MissionaryMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Direction)params[1], (boolean)params[2]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.MissionaryMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.MissionaryMessage", net.sf.freecol.common.networking.MissionaryMessage.class);
metas.put(net.sf.freecol.common.networking.MissionaryMessage.class, common_networking_MissionaryMessage);
// net.sf.freecol.common.networking.FirstContactMessage
final Meta common_networking_FirstContactMessage = new Meta() {
net.sf.freecol.common.networking.FirstContactMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.Tile.class))
    return new net.sf.freecol.common.networking.FirstContactMessage((net.sf.freecol.common.model.Player)params[0], (net.sf.freecol.common.model.Player)params[0], (net.sf.freecol.common.model.Tile)params[2]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.FirstContactMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "setResult": return ((net.sf.freecol.common.networking.FirstContactMessage)object).setResult((boolean)params[0]);
  case "getResult": return ((net.sf.freecol.common.networking.FirstContactMessage)object).getResult();
  case "getSettlementCount": return ((net.sf.freecol.common.networking.FirstContactMessage)object).getSettlementCount();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.FirstContactMessage", net.sf.freecol.common.networking.FirstContactMessage.class);
metas.put(net.sf.freecol.common.networking.FirstContactMessage.class, common_networking_FirstContactMessage);
// net.sf.freecol.common.networking.NationSummaryMessage
final Meta common_networking_NationSummaryMessage = new Meta() {
net.sf.freecol.common.networking.NationSummaryMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.NationSummary.class))
    return new net.sf.freecol.common.networking.NationSummaryMessage((net.sf.freecol.common.model.Player)params[0], (net.sf.freecol.common.model.NationSummary)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.NationSummaryMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ObjectMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.NationSummaryMessage", net.sf.freecol.common.networking.NationSummaryMessage.class);
metas.put(net.sf.freecol.common.networking.NationSummaryMessage.class, common_networking_NationSummaryMessage);
// net.sf.freecol.common.networking.RenameMessage
final Meta common_networking_RenameMessage = new Meta() {
net.sf.freecol.common.networking.RenameMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.FreeColGameObject.class, java.lang.String.class))
    return new net.sf.freecol.common.networking.RenameMessage((net.sf.freecol.common.model.FreeColGameObject)params[0], (java.lang.String)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.RenameMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.RenameMessage", net.sf.freecol.common.networking.RenameMessage.class);
metas.put(net.sf.freecol.common.networking.RenameMessage.class, common_networking_RenameMessage);
// net.sf.freecol.common.networking.FeatureChangeMessage
final Meta common_networking_FeatureChangeMessage = new Meta() {
net.sf.freecol.common.networking.FeatureChangeMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.FreeColGameObject.class, net.sf.freecol.common.model.FreeColObject.class, boolean.class))
    return new net.sf.freecol.common.networking.FeatureChangeMessage((net.sf.freecol.common.model.FreeColGameObject)params[0], (net.sf.freecol.common.model.FreeColObject)params[1], (boolean)params[2]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.FeatureChangeMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ObjectMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.FeatureChangeMessage", net.sf.freecol.common.networking.FeatureChangeMessage.class);
metas.put(net.sf.freecol.common.networking.FeatureChangeMessage.class, common_networking_FeatureChangeMessage);
// net.sf.freecol.common.networking.LogoutMessage
final Meta common_networking_LogoutMessage = new Meta() {
net.sf.freecol.common.networking.LogoutMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.Game.LogoutReason.class))
    return new net.sf.freecol.common.networking.LogoutMessage((net.sf.freecol.common.model.Player)params[0], (net.sf.freecol.common.model.Game.LogoutReason)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.LogoutMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getReason": return ((net.sf.freecol.common.networking.LogoutMessage)object).getReason();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.LogoutMessage", net.sf.freecol.common.networking.LogoutMessage.class);
metas.put(net.sf.freecol.common.networking.LogoutMessage.class, common_networking_LogoutMessage);
// net.sf.freecol.common.networking.ContinueMessage
final Meta common_networking_ContinueMessage = new Meta() {
net.sf.freecol.common.networking.ContinueMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (types.length == 0)
    return new net.sf.freecol.common.networking.ContinueMessage();
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.ContinueMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_TrivialMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.ContinueMessage", net.sf.freecol.common.networking.ContinueMessage.class);
metas.put(net.sf.freecol.common.networking.ContinueMessage.class, common_networking_ContinueMessage);
// net.sf.freecol.common.networking.EnterRevengeModeMessage
final Meta common_networking_EnterRevengeModeMessage = new Meta() {
net.sf.freecol.common.networking.EnterRevengeModeMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (types.length == 0)
    return new net.sf.freecol.common.networking.EnterRevengeModeMessage();
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.EnterRevengeModeMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_TrivialMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.EnterRevengeModeMessage", net.sf.freecol.common.networking.EnterRevengeModeMessage.class);
metas.put(net.sf.freecol.common.networking.EnterRevengeModeMessage.class, common_networking_EnterRevengeModeMessage);
// net.sf.freecol.common.networking.RearrangeColonyMessage
final Meta common_networking_RearrangeColonyMessage = new Meta() {
net.sf.freecol.common.networking.RearrangeColonyMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Colony.class, java.util.List.class, net.sf.freecol.common.model.Colony.class))
    return new net.sf.freecol.common.networking.RearrangeColonyMessage((net.sf.freecol.common.model.Colony)params[0], (java.util.List)params[1], (net.sf.freecol.common.model.Colony)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.RearrangeColonyMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "isEmpty": return ((net.sf.freecol.common.networking.RearrangeColonyMessage)object).isEmpty();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.RearrangeColonyMessage", net.sf.freecol.common.networking.RearrangeColonyMessage.class);
metas.put(net.sf.freecol.common.networking.RearrangeColonyMessage.class, common_networking_RearrangeColonyMessage);
// net.sf.freecol.common.networking.SetCurrentPlayerMessage
final Meta common_networking_SetCurrentPlayerMessage = new Meta() {
net.sf.freecol.common.networking.SetCurrentPlayerMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Player.class))
    return new net.sf.freecol.common.networking.SetCurrentPlayerMessage((net.sf.freecol.common.model.Player)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.SetCurrentPlayerMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.SetCurrentPlayerMessage", net.sf.freecol.common.networking.SetCurrentPlayerMessage.class);
metas.put(net.sf.freecol.common.networking.SetCurrentPlayerMessage.class, common_networking_SetCurrentPlayerMessage);
// net.sf.freecol.common.networking.DeclareIndependenceMessage
final Meta common_networking_DeclareIndependenceMessage = new Meta() {
net.sf.freecol.common.networking.DeclareIndependenceMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, java.lang.String.class))
    return new net.sf.freecol.common.networking.DeclareIndependenceMessage((java.lang.String)params[0], (java.lang.String)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.DeclareIndependenceMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.DeclareIndependenceMessage", net.sf.freecol.common.networking.DeclareIndependenceMessage.class);
metas.put(net.sf.freecol.common.networking.DeclareIndependenceMessage.class, common_networking_DeclareIndependenceMessage);
// net.sf.freecol.common.networking.RemoveMessage
final Meta common_networking_RemoveMessage = new Meta() {
net.sf.freecol.common.networking.RemoveMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, java.util.List.class))
    return new net.sf.freecol.common.networking.RemoveMessage((java.lang.String)params[0], (java.util.List)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.RemoveMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.RemoveMessage", net.sf.freecol.common.networking.RemoveMessage.class);
metas.put(net.sf.freecol.common.networking.RemoveMessage.class, common_networking_RemoveMessage);
// net.sf.freecol.common.networking.ChangeStateMessage
final Meta common_networking_ChangeStateMessage = new Meta() {
net.sf.freecol.common.networking.ChangeStateMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Unit.UnitState.class))
    return new net.sf.freecol.common.networking.ChangeStateMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Unit.UnitState)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.ChangeStateMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.ChangeStateMessage", net.sf.freecol.common.networking.ChangeStateMessage.class);
metas.put(net.sf.freecol.common.networking.ChangeStateMessage.class, common_networking_ChangeStateMessage);
// net.sf.freecol.common.networking.ServerInfoMessage
final Meta common_networking_ServerInfoMessage = new Meta() {
net.sf.freecol.common.networking.ServerInfoMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.ServerInfoMessage((java.lang.String)params[0], (net.sf.freecol.common.model.Game)params[1], (net.sf.freecol.common.io.FreeColXMLReader)params[2]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getAddress": return ((net.sf.freecol.common.networking.ServerInfoMessage)object).getAddress();
  case "getPort": return ((net.sf.freecol.common.networking.ServerInfoMessage)object).getPort();
  case "getServerInfo": return ((net.sf.freecol.common.networking.ServerInfoMessage)object).getServerInfo();
  case "setAddress": ((net.sf.freecol.common.networking.ServerInfoMessage)object).setAddress((java.lang.String)params[0]); return null;
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.ServerInfoMessage", net.sf.freecol.common.networking.ServerInfoMessage.class);
metas.put(net.sf.freecol.common.networking.ServerInfoMessage.class, common_networking_ServerInfoMessage);
// net.sf.freecol.common.networking.UpdateServerMessage
final Meta common_networking_UpdateServerMessage = new Meta() {
net.sf.freecol.common.networking.UpdateServerMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.metaserver.ServerInfo.class))
    return new net.sf.freecol.common.networking.UpdateServerMessage((net.sf.freecol.common.metaserver.ServerInfo)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.UpdateServerMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ServerInfoMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.UpdateServerMessage", net.sf.freecol.common.networking.UpdateServerMessage.class);
metas.put(net.sf.freecol.common.networking.UpdateServerMessage.class, common_networking_UpdateServerMessage);
// net.sf.freecol.common.networking.ChooseFoundingFatherMessage
final Meta common_networking_ChooseFoundingFatherMessage = new Meta() {
net.sf.freecol.common.networking.ChooseFoundingFatherMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.ChooseFoundingFatherMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, java.util.List.class, net.sf.freecol.common.model.FoundingFather.class))
    return new net.sf.freecol.common.networking.ChooseFoundingFatherMessage((java.util.List)params[0], (net.sf.freecol.common.model.FoundingFather)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "setFather": return ((net.sf.freecol.common.networking.ChooseFoundingFatherMessage)object).setFather((net.sf.freecol.common.model.FoundingFather)params[0]);
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.ChooseFoundingFatherMessage", net.sf.freecol.common.networking.ChooseFoundingFatherMessage.class);
metas.put(net.sf.freecol.common.networking.ChooseFoundingFatherMessage.class, common_networking_ChooseFoundingFatherMessage);
// net.sf.freecol.common.networking.SetDestinationMessage
final Meta common_networking_SetDestinationMessage = new Meta() {
net.sf.freecol.common.networking.SetDestinationMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Location.class))
    return new net.sf.freecol.common.networking.SetDestinationMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Location)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.SetDestinationMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.SetDestinationMessage", net.sf.freecol.common.networking.SetDestinationMessage.class);
metas.put(net.sf.freecol.common.networking.SetDestinationMessage.class, common_networking_SetDestinationMessage);
// net.sf.freecol.common.networking.MoveToMessage
final Meta common_networking_MoveToMessage = new Meta() {
net.sf.freecol.common.networking.MoveToMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Location.class))
    return new net.sf.freecol.common.networking.MoveToMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Location)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.MoveToMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.MoveToMessage", net.sf.freecol.common.networking.MoveToMessage.class);
metas.put(net.sf.freecol.common.networking.MoveToMessage.class, common_networking_MoveToMessage);
// net.sf.freecol.common.networking.NewTradeRouteMessage
final Meta common_networking_NewTradeRouteMessage = new Meta() {
net.sf.freecol.common.networking.NewTradeRouteMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.TradeRoute.class))
    return new net.sf.freecol.common.networking.NewTradeRouteMessage((net.sf.freecol.common.model.TradeRoute)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.NewTradeRouteMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ObjectMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.NewTradeRouteMessage", net.sf.freecol.common.networking.NewTradeRouteMessage.class);
metas.put(net.sf.freecol.common.networking.NewTradeRouteMessage.class, common_networking_NewTradeRouteMessage);
// net.sf.freecol.common.networking.SetDeadMessage
final Meta common_networking_SetDeadMessage = new Meta() {
net.sf.freecol.common.networking.SetDeadMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Player.class))
    return new net.sf.freecol.common.networking.SetDeadMessage((net.sf.freecol.common.model.Player)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.SetDeadMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.SetDeadMessage", net.sf.freecol.common.networking.SetDeadMessage.class);
metas.put(net.sf.freecol.common.networking.SetDeadMessage.class, common_networking_SetDeadMessage);
// net.sf.freecol.common.networking.MonarchActionMessage
final Meta common_networking_MonarchActionMessage = new Meta() {
net.sf.freecol.common.networking.MonarchActionMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Monarch.MonarchAction.class, net.sf.freecol.common.model.StringTemplate.class, java.lang.String.class))
    return new net.sf.freecol.common.networking.MonarchActionMessage((net.sf.freecol.common.model.Monarch.MonarchAction)params[0], (net.sf.freecol.common.model.StringTemplate)params[1], (java.lang.String)params[2]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.MonarchActionMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "setResult": return ((net.sf.freecol.common.networking.MonarchActionMessage)object).setResult((boolean)params[0]);
  case "setTax": return ((net.sf.freecol.common.networking.MonarchActionMessage)object).setTax((int)params[0]);
  }
  return common_networking_ObjectMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.MonarchActionMessage", net.sf.freecol.common.networking.MonarchActionMessage.class);
metas.put(net.sf.freecol.common.networking.MonarchActionMessage.class, common_networking_MonarchActionMessage);
// net.sf.freecol.common.networking.ServerListMessage
final Meta common_networking_ServerListMessage = new Meta() {
net.sf.freecol.common.networking.ServerListMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (types.length == 0)
    return new net.sf.freecol.common.networking.ServerListMessage();
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.ServerListMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getServers": return ((net.sf.freecol.common.networking.ServerListMessage)object).getServers();
  }
  return common_networking_ObjectMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.ServerListMessage", net.sf.freecol.common.networking.ServerListMessage.class);
metas.put(net.sf.freecol.common.networking.ServerListMessage.class, common_networking_ServerListMessage);
// net.sf.freecol.common.networking.AttackMessage
final Meta common_networking_AttackMessage = new Meta() {
net.sf.freecol.common.networking.AttackMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Direction.class))
    return new net.sf.freecol.common.networking.AttackMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Direction)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.AttackMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.AttackMessage", net.sf.freecol.common.networking.AttackMessage.class);
metas.put(net.sf.freecol.common.networking.AttackMessage.class, common_networking_AttackMessage);
// net.sf.freecol.common.networking.AskSkillMessage
final Meta common_networking_AskSkillMessage = new Meta() {
net.sf.freecol.common.networking.AskSkillMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Direction.class))
    return new net.sf.freecol.common.networking.AskSkillMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Direction)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.AskSkillMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.AskSkillMessage", net.sf.freecol.common.networking.AskSkillMessage.class);
metas.put(net.sf.freecol.common.networking.AskSkillMessage.class, common_networking_AskSkillMessage);
// net.sf.freecol.common.networking.InciteMessage
final Meta common_networking_InciteMessage = new Meta() {
net.sf.freecol.common.networking.InciteMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.IndianSettlement.class, net.sf.freecol.common.model.Player.class, int.class))
    return new net.sf.freecol.common.networking.InciteMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.IndianSettlement)params[1], (net.sf.freecol.common.model.Player)params[2], (int)params[3]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.InciteMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getGold": return ((net.sf.freecol.common.networking.InciteMessage)object).getGold();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.InciteMessage", net.sf.freecol.common.networking.InciteMessage.class);
metas.put(net.sf.freecol.common.networking.InciteMessage.class, common_networking_InciteMessage);
// net.sf.freecol.common.networking.NativeGiftMessage
final Meta common_networking_NativeGiftMessage = new Meta() {
net.sf.freecol.common.networking.NativeGiftMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Colony.class))
    return new net.sf.freecol.common.networking.NativeGiftMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Colony)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.NativeGiftMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.NativeGiftMessage", net.sf.freecol.common.networking.NativeGiftMessage.class);
metas.put(net.sf.freecol.common.networking.NativeGiftMessage.class, common_networking_NativeGiftMessage);
// net.sf.freecol.common.networking.DemandTributeMessage
final Meta common_networking_DemandTributeMessage = new Meta() {
net.sf.freecol.common.networking.DemandTributeMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Direction.class))
    return new net.sf.freecol.common.networking.DemandTributeMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Direction)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.DemandTributeMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.DemandTributeMessage", net.sf.freecol.common.networking.DemandTributeMessage.class);
metas.put(net.sf.freecol.common.networking.DemandTributeMessage.class, common_networking_DemandTributeMessage);
// net.sf.freecol.common.networking.IndianDemandMessage
final Meta common_networking_IndianDemandMessage = new Meta() {
net.sf.freecol.common.networking.IndianDemandMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Colony.class, net.sf.freecol.common.model.GoodsType.class, int.class))
    return new net.sf.freecol.common.networking.IndianDemandMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Colony)params[1], (net.sf.freecol.common.model.GoodsType)params[2], (int)params[3]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.IndianDemandMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "setResult": return ((net.sf.freecol.common.networking.IndianDemandMessage)object).setResult((net.sf.freecol.common.model.Constants.IndianDemandAction)params[0]);
  case "getResult": return ((net.sf.freecol.common.networking.IndianDemandMessage)object).getResult();
  case "getAmount": return ((net.sf.freecol.common.networking.IndianDemandMessage)object).getAmount();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.IndianDemandMessage", net.sf.freecol.common.networking.IndianDemandMessage.class);
metas.put(net.sf.freecol.common.networking.IndianDemandMessage.class, common_networking_IndianDemandMessage);
// net.sf.freecol.common.networking.SetColorMessage
final Meta common_networking_SetColorMessage = new Meta() {
net.sf.freecol.common.networking.SetColorMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Nation.class, java.awt.Color.class))
    return new net.sf.freecol.common.networking.SetColorMessage((net.sf.freecol.common.model.Nation)params[0], (java.awt.Color)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.SetColorMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getColor": return ((net.sf.freecol.common.networking.SetColorMessage)object).getColor();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.SetColorMessage", net.sf.freecol.common.networking.SetColorMessage.class);
metas.put(net.sf.freecol.common.networking.SetColorMessage.class, common_networking_SetColorMessage);
// net.sf.freecol.common.networking.SetNationTypeMessage
final Meta common_networking_SetNationTypeMessage = new Meta() {
net.sf.freecol.common.networking.SetNationTypeMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.NationType.class))
    return new net.sf.freecol.common.networking.SetNationTypeMessage((net.sf.freecol.common.model.Player)params[0], (net.sf.freecol.common.model.NationType)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.SetNationTypeMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.SetNationTypeMessage", net.sf.freecol.common.networking.SetNationTypeMessage.class);
metas.put(net.sf.freecol.common.networking.SetNationTypeMessage.class, common_networking_SetNationTypeMessage);
// net.sf.freecol.common.networking.UpdateTradeRouteMessage
final Meta common_networking_UpdateTradeRouteMessage = new Meta() {
net.sf.freecol.common.networking.UpdateTradeRouteMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.TradeRoute.class))
    return new net.sf.freecol.common.networking.UpdateTradeRouteMessage((net.sf.freecol.common.model.TradeRoute)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.UpdateTradeRouteMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ObjectMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.UpdateTradeRouteMessage", net.sf.freecol.common.networking.UpdateTradeRouteMessage.class);
metas.put(net.sf.freecol.common.networking.UpdateTradeRouteMessage.class, common_networking_UpdateTradeRouteMessage);
// net.sf.freecol.common.networking.BuildColonyMessage
final Meta common_networking_BuildColonyMessage = new Meta() {
net.sf.freecol.common.networking.BuildColonyMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.Unit.class))
    return new net.sf.freecol.common.networking.BuildColonyMessage((java.lang.String)params[0], (net.sf.freecol.common.model.Unit)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.BuildColonyMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.BuildColonyMessage", net.sf.freecol.common.networking.BuildColonyMessage.class);
metas.put(net.sf.freecol.common.networking.BuildColonyMessage.class, common_networking_BuildColonyMessage);
// net.sf.freecol.common.networking.PutOutsideColonyMessage
final Meta common_networking_PutOutsideColonyMessage = new Meta() {
net.sf.freecol.common.networking.PutOutsideColonyMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class))
    return new net.sf.freecol.common.networking.PutOutsideColonyMessage((net.sf.freecol.common.model.Unit)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.PutOutsideColonyMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.PutOutsideColonyMessage", net.sf.freecol.common.networking.PutOutsideColonyMessage.class);
metas.put(net.sf.freecol.common.networking.PutOutsideColonyMessage.class, common_networking_PutOutsideColonyMessage);
// net.sf.freecol.common.networking.JoinColonyMessage
final Meta common_networking_JoinColonyMessage = new Meta() {
net.sf.freecol.common.networking.JoinColonyMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Colony.class, net.sf.freecol.common.model.Unit.class))
    return new net.sf.freecol.common.networking.JoinColonyMessage((net.sf.freecol.common.model.Colony)params[0], (net.sf.freecol.common.model.Unit)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.JoinColonyMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.JoinColonyMessage", net.sf.freecol.common.networking.JoinColonyMessage.class);
metas.put(net.sf.freecol.common.networking.JoinColonyMessage.class, common_networking_JoinColonyMessage);
// net.sf.freecol.common.networking.LearnSkillMessage
final Meta common_networking_LearnSkillMessage = new Meta() {
net.sf.freecol.common.networking.LearnSkillMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Direction.class))
    return new net.sf.freecol.common.networking.LearnSkillMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Direction)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.LearnSkillMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.LearnSkillMessage", net.sf.freecol.common.networking.LearnSkillMessage.class);
metas.put(net.sf.freecol.common.networking.LearnSkillMessage.class, common_networking_LearnSkillMessage);
// net.sf.freecol.common.networking.SetNationMessage
final Meta common_networking_SetNationMessage = new Meta() {
net.sf.freecol.common.networking.SetNationMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.Nation.class))
    return new net.sf.freecol.common.networking.SetNationMessage((net.sf.freecol.common.model.Player)params[0], (net.sf.freecol.common.model.Nation)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.SetNationMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.SetNationMessage", net.sf.freecol.common.networking.SetNationMessage.class);
metas.put(net.sf.freecol.common.networking.SetNationMessage.class, common_networking_SetNationMessage);
// net.sf.freecol.common.networking.WrapperMessage
final Meta common_networking_WrapperMessage = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "isEmpty": return ((net.sf.freecol.common.networking.WrapperMessage)object).isEmpty();
  case "getMessage": return ((net.sf.freecol.common.networking.WrapperMessage)object).getMessage();
  case "getSubType": return ((net.sf.freecol.common.networking.WrapperMessage)object).getSubType();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.WrapperMessage", net.sf.freecol.common.networking.WrapperMessage.class);
metas.put(net.sf.freecol.common.networking.WrapperMessage.class, common_networking_WrapperMessage);
// net.sf.freecol.common.networking.ReplyMessage
final Meta common_networking_ReplyMessage = new Meta() {
net.sf.freecol.common.networking.ReplyMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, int.class, net.sf.freecol.common.networking.Message.class))
    return new net.sf.freecol.common.networking.ReplyMessage((int)params[0], (net.sf.freecol.common.networking.Message)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.ReplyMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_WrapperMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.ReplyMessage", net.sf.freecol.common.networking.ReplyMessage.class);
metas.put(net.sf.freecol.common.networking.ReplyMessage.class, common_networking_ReplyMessage);
// net.sf.freecol.common.networking.AnimateAttackMessage
final Meta common_networking_AnimateAttackMessage = new Meta() {
net.sf.freecol.common.networking.AnimateAttackMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Unit.class, boolean.class, boolean.class, boolean.class))
    return new net.sf.freecol.common.networking.AnimateAttackMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Unit)params[0], (boolean)params[2], (boolean)params[2], (boolean)params[2]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.AnimateAttackMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ObjectMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.AnimateAttackMessage", net.sf.freecol.common.networking.AnimateAttackMessage.class);
metas.put(net.sf.freecol.common.networking.AnimateAttackMessage.class, common_networking_AnimateAttackMessage);
// net.sf.freecol.common.networking.SetCurrentStopMessage
final Meta common_networking_SetCurrentStopMessage = new Meta() {
net.sf.freecol.common.networking.SetCurrentStopMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, int.class))
    return new net.sf.freecol.common.networking.SetCurrentStopMessage((net.sf.freecol.common.model.Unit)params[0], (int)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.SetCurrentStopMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.SetCurrentStopMessage", net.sf.freecol.common.networking.SetCurrentStopMessage.class);
metas.put(net.sf.freecol.common.networking.SetCurrentStopMessage.class, common_networking_SetCurrentStopMessage);
// net.sf.freecol.common.networking.NativeTradeMessage
final Meta common_networking_NativeTradeMessage = new Meta() {
net.sf.freecol.common.networking.NativeTradeMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.NativeTradeMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, net.sf.freecol.common.model.NativeTrade.NativeTradeAction.class, net.sf.freecol.common.model.NativeTrade.class))
    return new net.sf.freecol.common.networking.NativeTradeMessage((net.sf.freecol.common.model.NativeTrade.NativeTradeAction)params[0], (net.sf.freecol.common.model.NativeTrade)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.IndianSettlement.class))
    return new net.sf.freecol.common.networking.NativeTradeMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.IndianSettlement)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ObjectMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.NativeTradeMessage", net.sf.freecol.common.networking.NativeTradeMessage.class);
metas.put(net.sf.freecol.common.networking.NativeTradeMessage.class, common_networking_NativeTradeMessage);
// net.sf.freecol.common.networking.ErrorMessage
final Meta common_networking_ErrorMessage = new Meta() {
net.sf.freecol.common.networking.ErrorMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.ErrorMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, java.lang.String.class, java.lang.Exception.class))
    return new net.sf.freecol.common.networking.ErrorMessage((java.lang.String)params[0], (java.lang.Exception)params[1]);
  if (areSame(types, java.lang.Exception.class))
    return new net.sf.freecol.common.networking.ErrorMessage((java.lang.Exception)params[0]);
  if (areSame(types, net.sf.freecol.common.model.StringTemplate.class, java.lang.String.class))
    return new net.sf.freecol.common.networking.ErrorMessage((net.sf.freecol.common.model.StringTemplate)params[0], (java.lang.String)params[1]);
  if (areSame(types, net.sf.freecol.common.model.StringTemplate.class))
    return new net.sf.freecol.common.networking.ErrorMessage((net.sf.freecol.common.model.StringTemplate)params[0]);
  if (areSame(types, java.lang.String.class))
    return new net.sf.freecol.common.networking.ErrorMessage((java.lang.String)params[0]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ObjectMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.ErrorMessage", net.sf.freecol.common.networking.ErrorMessage.class);
metas.put(net.sf.freecol.common.networking.ErrorMessage.class, common_networking_ErrorMessage);
// net.sf.freecol.common.networking.NewTurnMessage
final Meta common_networking_NewTurnMessage = new Meta() {
net.sf.freecol.common.networking.NewTurnMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Turn.class))
    return new net.sf.freecol.common.networking.NewTurnMessage((net.sf.freecol.common.model.Turn)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.NewTurnMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getTurnNumber": return ((net.sf.freecol.common.networking.NewTurnMessage)object).getTurnNumber();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.NewTurnMessage", net.sf.freecol.common.networking.NewTurnMessage.class);
metas.put(net.sf.freecol.common.networking.NewTurnMessage.class, common_networking_NewTurnMessage);
// net.sf.freecol.common.networking.ClaimLandMessage
final Meta common_networking_ClaimLandMessage = new Meta() {
net.sf.freecol.common.networking.ClaimLandMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Tile.class, net.sf.freecol.common.model.FreeColGameObject.class, int.class))
    return new net.sf.freecol.common.networking.ClaimLandMessage((net.sf.freecol.common.model.Tile)params[0], (net.sf.freecol.common.model.FreeColGameObject)params[1], (int)params[2]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.ClaimLandMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.ClaimLandMessage", net.sf.freecol.common.networking.ClaimLandMessage.class);
metas.put(net.sf.freecol.common.networking.ClaimLandMessage.class, common_networking_ClaimLandMessage);
// net.sf.freecol.common.networking.PayArrearsMessage
final Meta common_networking_PayArrearsMessage = new Meta() {
net.sf.freecol.common.networking.PayArrearsMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.GoodsType.class))
    return new net.sf.freecol.common.networking.PayArrearsMessage((net.sf.freecol.common.model.GoodsType)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.PayArrearsMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.PayArrearsMessage", net.sf.freecol.common.networking.PayArrearsMessage.class);
metas.put(net.sf.freecol.common.networking.PayArrearsMessage.class, common_networking_PayArrearsMessage);
// net.sf.freecol.common.networking.DeliverGiftMessage
final Meta common_networking_DeliverGiftMessage = new Meta() {
net.sf.freecol.common.networking.DeliverGiftMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.IndianSettlement.class, net.sf.freecol.common.model.Goods.class))
    return new net.sf.freecol.common.networking.DeliverGiftMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.IndianSettlement)params[1], (net.sf.freecol.common.model.Goods)params[2]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.DeliverGiftMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ObjectMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.DeliverGiftMessage", net.sf.freecol.common.networking.DeliverGiftMessage.class);
metas.put(net.sf.freecol.common.networking.DeliverGiftMessage.class, common_networking_DeliverGiftMessage);
// net.sf.freecol.common.networking.VacantPlayersMessage
final Meta common_networking_VacantPlayersMessage = new Meta() {
net.sf.freecol.common.networking.VacantPlayersMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (types.length == 0)
    return new net.sf.freecol.common.networking.VacantPlayersMessage();
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.VacantPlayersMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "setVacantPlayers": return ((net.sf.freecol.common.networking.VacantPlayersMessage)object).setVacantPlayers((net.sf.freecol.common.model.Game)params[0]);
  case "getVacantPlayers": return ((net.sf.freecol.common.networking.VacantPlayersMessage)object).getVacantPlayers();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.VacantPlayersMessage", net.sf.freecol.common.networking.VacantPlayersMessage.class);
metas.put(net.sf.freecol.common.networking.VacantPlayersMessage.class, common_networking_VacantPlayersMessage);
// net.sf.freecol.common.networking.AssignTradeRouteMessage
final Meta common_networking_AssignTradeRouteMessage = new Meta() {
net.sf.freecol.common.networking.AssignTradeRouteMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.TradeRoute.class))
    return new net.sf.freecol.common.networking.AssignTradeRouteMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.TradeRoute)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.AssignTradeRouteMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.AssignTradeRouteMessage", net.sf.freecol.common.networking.AssignTradeRouteMessage.class);
metas.put(net.sf.freecol.common.networking.AssignTradeRouteMessage.class, common_networking_AssignTradeRouteMessage);
// net.sf.freecol.common.networking.ReconnectMessage
final Meta common_networking_ReconnectMessage = new Meta() {
net.sf.freecol.common.networking.ReconnectMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (types.length == 0)
    return new net.sf.freecol.common.networking.ReconnectMessage();
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.ReconnectMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_TrivialMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.ReconnectMessage", net.sf.freecol.common.networking.ReconnectMessage.class);
metas.put(net.sf.freecol.common.networking.ReconnectMessage.class, common_networking_ReconnectMessage);
// net.sf.freecol.common.networking.PayForBuildingMessage
final Meta common_networking_PayForBuildingMessage = new Meta() {
net.sf.freecol.common.networking.PayForBuildingMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Colony.class))
    return new net.sf.freecol.common.networking.PayForBuildingMessage((net.sf.freecol.common.model.Colony)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.PayForBuildingMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.PayForBuildingMessage", net.sf.freecol.common.networking.PayForBuildingMessage.class);
metas.put(net.sf.freecol.common.networking.PayForBuildingMessage.class, common_networking_PayForBuildingMessage);
// net.sf.freecol.common.networking.ClearSpecialityMessage
final Meta common_networking_ClearSpecialityMessage = new Meta() {
net.sf.freecol.common.networking.ClearSpecialityMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class))
    return new net.sf.freecol.common.networking.ClearSpecialityMessage((net.sf.freecol.common.model.Unit)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.ClearSpecialityMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.ClearSpecialityMessage", net.sf.freecol.common.networking.ClearSpecialityMessage.class);
metas.put(net.sf.freecol.common.networking.ClearSpecialityMessage.class, common_networking_ClearSpecialityMessage);
// net.sf.freecol.common.networking.LootCargoMessage
final Meta common_networking_LootCargoMessage = new Meta() {
net.sf.freecol.common.networking.LootCargoMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, java.lang.String.class, java.util.List.class))
    return new net.sf.freecol.common.networking.LootCargoMessage((net.sf.freecol.common.model.Unit)params[0], (java.lang.String)params[1], (java.util.List)params[2]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.LootCargoMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ObjectMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.LootCargoMessage", net.sf.freecol.common.networking.LootCargoMessage.class);
metas.put(net.sf.freecol.common.networking.LootCargoMessage.class, common_networking_LootCargoMessage);
// net.sf.freecol.common.networking.ScoutIndianSettlementMessage
final Meta common_networking_ScoutIndianSettlementMessage = new Meta() {
net.sf.freecol.common.networking.ScoutIndianSettlementMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Direction.class))
    return new net.sf.freecol.common.networking.ScoutIndianSettlementMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Direction)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.ScoutIndianSettlementMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.ScoutIndianSettlementMessage", net.sf.freecol.common.networking.ScoutIndianSettlementMessage.class);
metas.put(net.sf.freecol.common.networking.ScoutIndianSettlementMessage.class, common_networking_ScoutIndianSettlementMessage);
// net.sf.freecol.common.networking.RegisterServerMessage
final Meta common_networking_RegisterServerMessage = new Meta() {
net.sf.freecol.common.networking.RegisterServerMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.metaserver.ServerInfo.class))
    return new net.sf.freecol.common.networking.RegisterServerMessage((net.sf.freecol.common.metaserver.ServerInfo)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.RegisterServerMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ServerInfoMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.RegisterServerMessage", net.sf.freecol.common.networking.RegisterServerMessage.class);
metas.put(net.sf.freecol.common.networking.RegisterServerMessage.class, common_networking_RegisterServerMessage);
// net.sf.freecol.common.networking.SetAIMessage
final Meta common_networking_SetAIMessage = new Meta() {
net.sf.freecol.common.networking.SetAIMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Player.class, boolean.class))
    return new net.sf.freecol.common.networking.SetAIMessage((net.sf.freecol.common.model.Player)params[0], (boolean)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.SetAIMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getAI": return ((net.sf.freecol.common.networking.SetAIMessage)object).getAI();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.SetAIMessage", net.sf.freecol.common.networking.SetAIMessage.class);
metas.put(net.sf.freecol.common.networking.SetAIMessage.class, common_networking_SetAIMessage);
// net.sf.freecol.common.networking.CashInTreasureTrainMessage
final Meta common_networking_CashInTreasureTrainMessage = new Meta() {
net.sf.freecol.common.networking.CashInTreasureTrainMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class))
    return new net.sf.freecol.common.networking.CashInTreasureTrainMessage((net.sf.freecol.common.model.Unit)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.CashInTreasureTrainMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.CashInTreasureTrainMessage", net.sf.freecol.common.networking.CashInTreasureTrainMessage.class);
metas.put(net.sf.freecol.common.networking.CashInTreasureTrainMessage.class, common_networking_CashInTreasureTrainMessage);
// net.sf.freecol.common.networking.AddPlayerMessage
final Meta common_networking_AddPlayerMessage = new Meta() {
net.sf.freecol.common.networking.AddPlayerMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Player.class, java.util.List.class))
    return new net.sf.freecol.common.networking.AddPlayerMessage((net.sf.freecol.common.model.Player)params[0], (java.util.List)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.AddPlayerMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ObjectMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.AddPlayerMessage", net.sf.freecol.common.networking.AddPlayerMessage.class);
metas.put(net.sf.freecol.common.networking.AddPlayerMessage.class, common_networking_AddPlayerMessage);
// net.sf.freecol.common.networking.DiplomacyMessage
final Meta common_networking_DiplomacyMessage = new Meta() {
net.sf.freecol.common.networking.DiplomacyMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.DiplomacyMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Colony.class, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.DiplomaticTrade.class))
    return new net.sf.freecol.common.networking.DiplomacyMessage((net.sf.freecol.common.model.Colony)params[0], (net.sf.freecol.common.model.Unit)params[1], (net.sf.freecol.common.model.DiplomaticTrade)params[2]);
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Colony.class, net.sf.freecol.common.model.DiplomaticTrade.class))
    return new net.sf.freecol.common.networking.DiplomacyMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Colony)params[1], (net.sf.freecol.common.model.DiplomaticTrade)params[2]);
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.DiplomaticTrade.class))
    return new net.sf.freecol.common.networking.DiplomacyMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.DiplomaticTrade)params[2]);
  if (areSame(types, net.sf.freecol.common.model.FreeColGameObject.class, net.sf.freecol.common.model.FreeColGameObject.class, net.sf.freecol.common.model.DiplomaticTrade.class))
    return new net.sf.freecol.common.networking.DiplomacyMessage((net.sf.freecol.common.model.FreeColGameObject)params[0], (net.sf.freecol.common.model.FreeColGameObject)params[0], (net.sf.freecol.common.model.DiplomaticTrade)params[2]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ObjectMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.DiplomacyMessage", net.sf.freecol.common.networking.DiplomacyMessage.class);
metas.put(net.sf.freecol.common.networking.DiplomacyMessage.class, common_networking_DiplomacyMessage);
// net.sf.freecol.common.networking.DeleteTradeRouteMessage
final Meta common_networking_DeleteTradeRouteMessage = new Meta() {
net.sf.freecol.common.networking.DeleteTradeRouteMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.TradeRoute.class))
    return new net.sf.freecol.common.networking.DeleteTradeRouteMessage((net.sf.freecol.common.model.TradeRoute)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.DeleteTradeRouteMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.DeleteTradeRouteMessage", net.sf.freecol.common.networking.DeleteTradeRouteMessage.class);
metas.put(net.sf.freecol.common.networking.DeleteTradeRouteMessage.class, common_networking_DeleteTradeRouteMessage);
// net.sf.freecol.common.networking.RetireMessage
final Meta common_networking_RetireMessage = new Meta() {
net.sf.freecol.common.networking.RetireMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (types.length == 0)
    return new net.sf.freecol.common.networking.RetireMessage();
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.RetireMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_TrivialMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.RetireMessage", net.sf.freecol.common.networking.RetireMessage.class);
metas.put(net.sf.freecol.common.networking.RetireMessage.class, common_networking_RetireMessage);
// net.sf.freecol.common.networking.StartGameMessage
final Meta common_networking_StartGameMessage = new Meta() {
net.sf.freecol.common.networking.StartGameMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (types.length == 0)
    return new net.sf.freecol.common.networking.StartGameMessage();
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.StartGameMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_TrivialMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.StartGameMessage", net.sf.freecol.common.networking.StartGameMessage.class);
metas.put(net.sf.freecol.common.networking.StartGameMessage.class, common_networking_StartGameMessage);
// net.sf.freecol.common.networking.AnimateMoveMessage
final Meta common_networking_AnimateMoveMessage = new Meta() {
net.sf.freecol.common.networking.AnimateMoveMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Tile.class, net.sf.freecol.common.model.Tile.class, boolean.class))
    return new net.sf.freecol.common.networking.AnimateMoveMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Tile)params[1], (net.sf.freecol.common.model.Tile)params[1], (boolean)params[3]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.AnimateMoveMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ObjectMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.AnimateMoveMessage", net.sf.freecol.common.networking.AnimateMoveMessage.class);
metas.put(net.sf.freecol.common.networking.AnimateMoveMessage.class, common_networking_AnimateMoveMessage);
// net.sf.freecol.common.networking.SpySettlementMessage
final Meta common_networking_SpySettlementMessage = new Meta() {
net.sf.freecol.common.networking.SpySettlementMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Settlement.class))
    return new net.sf.freecol.common.networking.SpySettlementMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Settlement)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.SpySettlementMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ObjectMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.SpySettlementMessage", net.sf.freecol.common.networking.SpySettlementMessage.class);
metas.put(net.sf.freecol.common.networking.SpySettlementMessage.class, common_networking_SpySettlementMessage);
// net.sf.freecol.common.networking.DisembarkMessage
final Meta common_networking_DisembarkMessage = new Meta() {
net.sf.freecol.common.networking.DisembarkMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class))
    return new net.sf.freecol.common.networking.DisembarkMessage((net.sf.freecol.common.model.Unit)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.DisembarkMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.DisembarkMessage", net.sf.freecol.common.networking.DisembarkMessage.class);
metas.put(net.sf.freecol.common.networking.DisembarkMessage.class, common_networking_DisembarkMessage);
// net.sf.freecol.common.networking.LoadGoodsMessage
final Meta common_networking_LoadGoodsMessage = new Meta() {
net.sf.freecol.common.networking.LoadGoodsMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Location.class, net.sf.freecol.common.model.GoodsType.class, int.class, net.sf.freecol.common.model.Unit.class))
    return new net.sf.freecol.common.networking.LoadGoodsMessage((net.sf.freecol.common.model.Location)params[0], (net.sf.freecol.common.model.GoodsType)params[1], (int)params[2], (net.sf.freecol.common.model.Unit)params[3]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.LoadGoodsMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.LoadGoodsMessage", net.sf.freecol.common.networking.LoadGoodsMessage.class);
metas.put(net.sf.freecol.common.networking.LoadGoodsMessage.class, common_networking_LoadGoodsMessage);
// net.sf.freecol.common.networking.RemoveServerMessage
final Meta common_networking_RemoveServerMessage = new Meta() {
net.sf.freecol.common.networking.RemoveServerMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.metaserver.ServerInfo.class))
    return new net.sf.freecol.common.networking.RemoveServerMessage((net.sf.freecol.common.metaserver.ServerInfo)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.RemoveServerMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ServerInfoMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.RemoveServerMessage", net.sf.freecol.common.networking.RemoveServerMessage.class);
metas.put(net.sf.freecol.common.networking.RemoveServerMessage.class, common_networking_RemoveServerMessage);
// net.sf.freecol.common.networking.NewRegionNameMessage
final Meta common_networking_NewRegionNameMessage = new Meta() {
net.sf.freecol.common.networking.NewRegionNameMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Region.class, net.sf.freecol.common.model.Tile.class, net.sf.freecol.common.model.Unit.class, java.lang.String.class))
    return new net.sf.freecol.common.networking.NewRegionNameMessage((net.sf.freecol.common.model.Region)params[0], (net.sf.freecol.common.model.Tile)params[1], (net.sf.freecol.common.model.Unit)params[2], (java.lang.String)params[3]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.NewRegionNameMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getNewRegionName": return ((net.sf.freecol.common.networking.NewRegionNameMessage)object).getNewRegionName();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.NewRegionNameMessage", net.sf.freecol.common.networking.NewRegionNameMessage.class);
metas.put(net.sf.freecol.common.networking.NewRegionNameMessage.class, common_networking_NewRegionNameMessage);
// net.sf.freecol.common.networking.WorkMessage
final Meta common_networking_WorkMessage = new Meta() {
net.sf.freecol.common.networking.WorkMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.WorkLocation.class))
    return new net.sf.freecol.common.networking.WorkMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.WorkLocation)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.WorkMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.WorkMessage", net.sf.freecol.common.networking.WorkMessage.class);
metas.put(net.sf.freecol.common.networking.WorkMessage.class, common_networking_WorkMessage);
// net.sf.freecol.common.networking.UnloadGoodsMessage
final Meta common_networking_UnloadGoodsMessage = new Meta() {
net.sf.freecol.common.networking.UnloadGoodsMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.GoodsType.class, int.class, net.sf.freecol.common.model.Unit.class))
    return new net.sf.freecol.common.networking.UnloadGoodsMessage((net.sf.freecol.common.model.GoodsType)params[0], (int)params[1], (net.sf.freecol.common.model.Unit)params[2]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.UnloadGoodsMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.UnloadGoodsMessage", net.sf.freecol.common.networking.UnloadGoodsMessage.class);
metas.put(net.sf.freecol.common.networking.UnloadGoodsMessage.class, common_networking_UnloadGoodsMessage);
// net.sf.freecol.common.networking.ScoutSpeakToChiefMessage
final Meta common_networking_ScoutSpeakToChiefMessage = new Meta() {
net.sf.freecol.common.networking.ScoutSpeakToChiefMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.IndianSettlement.class, java.lang.String.class))
    return new net.sf.freecol.common.networking.ScoutSpeakToChiefMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.IndianSettlement)params[1], (java.lang.String)params[2]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.ScoutSpeakToChiefMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getResult": return ((net.sf.freecol.common.networking.ScoutSpeakToChiefMessage)object).getResult();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.ScoutSpeakToChiefMessage", net.sf.freecol.common.networking.ScoutSpeakToChiefMessage.class);
metas.put(net.sf.freecol.common.networking.ScoutSpeakToChiefMessage.class, common_networking_ScoutSpeakToChiefMessage);
// net.sf.freecol.common.networking.DeclineMoundsMessage
final Meta common_networking_DeclineMoundsMessage = new Meta() {
net.sf.freecol.common.networking.DeclineMoundsMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Direction.class))
    return new net.sf.freecol.common.networking.DeclineMoundsMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Direction)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.DeclineMoundsMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.DeclineMoundsMessage", net.sf.freecol.common.networking.DeclineMoundsMessage.class);
metas.put(net.sf.freecol.common.networking.DeclineMoundsMessage.class, common_networking_DeclineMoundsMessage);
// net.sf.freecol.common.networking.SetBuildQueueMessage
final Meta common_networking_SetBuildQueueMessage = new Meta() {
net.sf.freecol.common.networking.SetBuildQueueMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Colony.class, java.util.List.class))
    return new net.sf.freecol.common.networking.SetBuildQueueMessage((net.sf.freecol.common.model.Colony)params[0], (java.util.List)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.SetBuildQueueMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.SetBuildQueueMessage", net.sf.freecol.common.networking.SetBuildQueueMessage.class);
metas.put(net.sf.freecol.common.networking.SetBuildQueueMessage.class, common_networking_SetBuildQueueMessage);
// net.sf.freecol.common.networking.EmbarkMessage
final Meta common_networking_EmbarkMessage = new Meta() {
net.sf.freecol.common.networking.EmbarkMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Direction.class))
    return new net.sf.freecol.common.networking.EmbarkMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Direction)params[2]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.EmbarkMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.EmbarkMessage", net.sf.freecol.common.networking.EmbarkMessage.class);
metas.put(net.sf.freecol.common.networking.EmbarkMessage.class, common_networking_EmbarkMessage);
// net.sf.freecol.common.networking.CloseMessage
final Meta common_networking_CloseMessage = new Meta() {
net.sf.freecol.common.networking.CloseMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class))
    return new net.sf.freecol.common.networking.CloseMessage((java.lang.String)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.CloseMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getPanel": return ((net.sf.freecol.common.networking.CloseMessage)object).getPanel();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.CloseMessage", net.sf.freecol.common.networking.CloseMessage.class);
metas.put(net.sf.freecol.common.networking.CloseMessage.class, common_networking_CloseMessage);
// net.sf.freecol.common.networking.AssignTeacherMessage
final Meta common_networking_AssignTeacherMessage = new Meta() {
net.sf.freecol.common.networking.AssignTeacherMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Unit.class))
    return new net.sf.freecol.common.networking.AssignTeacherMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Unit)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.AssignTeacherMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.AssignTeacherMessage", net.sf.freecol.common.networking.AssignTeacherMessage.class);
metas.put(net.sf.freecol.common.networking.AssignTeacherMessage.class, common_networking_AssignTeacherMessage);
// net.sf.freecol.common.networking.AbandonColonyMessage
final Meta common_networking_AbandonColonyMessage = new Meta() {
net.sf.freecol.common.networking.AbandonColonyMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Colony.class))
    return new net.sf.freecol.common.networking.AbandonColonyMessage((net.sf.freecol.common.model.Colony)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.AbandonColonyMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.AbandonColonyMessage", net.sf.freecol.common.networking.AbandonColonyMessage.class);
metas.put(net.sf.freecol.common.networking.AbandonColonyMessage.class, common_networking_AbandonColonyMessage);
// net.sf.freecol.common.networking.UpdateMessage
final Meta common_networking_UpdateMessage = new Meta() {
net.sf.freecol.common.networking.UpdateMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.UpdateMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Player.class, java.util.List.class))
    return new net.sf.freecol.common.networking.UpdateMessage((net.sf.freecol.common.model.Player)params[0], (java.util.List)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.FreeColGameObject.class))
    return new net.sf.freecol.common.networking.UpdateMessage((net.sf.freecol.common.model.Player)params[0], (net.sf.freecol.common.model.FreeColGameObject)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ObjectMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.UpdateMessage", net.sf.freecol.common.networking.UpdateMessage.class);
metas.put(net.sf.freecol.common.networking.UpdateMessage.class, common_networking_UpdateMessage);
// net.sf.freecol.common.networking.DisconnectMessage
final Meta common_networking_DisconnectMessage = new Meta() {
net.sf.freecol.common.networking.DisconnectMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (types.length == 0)
    return new net.sf.freecol.common.networking.DisconnectMessage();
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.DisconnectMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_TrivialMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.DisconnectMessage", net.sf.freecol.common.networking.DisconnectMessage.class);
metas.put(net.sf.freecol.common.networking.DisconnectMessage.class, common_networking_DisconnectMessage);
// net.sf.freecol.common.networking.MultipleMessage
final Meta common_networking_MultipleMessage = new Meta() {
net.sf.freecol.common.networking.MultipleMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.util.List.class))
    return new net.sf.freecol.common.networking.MultipleMessage((java.util.List)params[0]);
  if (types.length == 0)
    return new net.sf.freecol.common.networking.MultipleMessage();
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.MultipleMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "isEmpty": return ((net.sf.freecol.common.networking.MultipleMessage)object).isEmpty();
  case "simplify": return ((net.sf.freecol.common.networking.MultipleMessage)object).simplify();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.MultipleMessage", net.sf.freecol.common.networking.MultipleMessage.class);
metas.put(net.sf.freecol.common.networking.MultipleMessage.class, common_networking_MultipleMessage);
// net.sf.freecol.common.networking.ChatMessage
final Meta common_networking_ChatMessage = new Meta() {
net.sf.freecol.common.networking.ChatMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Player.class, java.lang.String.class, boolean.class))
    return new net.sf.freecol.common.networking.ChatMessage((net.sf.freecol.common.model.Player)params[0], (java.lang.String)params[1], (boolean)params[2]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.ChatMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getMessage": return ((net.sf.freecol.common.networking.ChatMessage)object).getMessage();
  case "isPrivate": return ((net.sf.freecol.common.networking.ChatMessage)object).isPrivate();
  case "getColor": return ((net.sf.freecol.common.networking.ChatMessage)object).getColor();
  case "getSender": return ((net.sf.freecol.common.networking.ChatMessage)object).getSender();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.ChatMessage", net.sf.freecol.common.networking.ChatMessage.class);
metas.put(net.sf.freecol.common.networking.ChatMessage.class, common_networking_ChatMessage);
// net.sf.freecol.common.networking.GameEndedMessage
final Meta common_networking_GameEndedMessage = new Meta() {
net.sf.freecol.common.networking.GameEndedMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Player.class, boolean.class))
    return new net.sf.freecol.common.networking.GameEndedMessage((net.sf.freecol.common.model.Player)params[0], (boolean)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.GameEndedMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getScore": return ((net.sf.freecol.common.networking.GameEndedMessage)object).getScore();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.GameEndedMessage", net.sf.freecol.common.networking.GameEndedMessage.class);
metas.put(net.sf.freecol.common.networking.GameEndedMessage.class, common_networking_GameEndedMessage);
// net.sf.freecol.common.networking.GameStateMessage
final Meta common_networking_GameStateMessage = new Meta() {
net.sf.freecol.common.networking.GameStateMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.GameStateMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, net.sf.freecol.server.FreeColServer.ServerState.class))
    return new net.sf.freecol.common.networking.GameStateMessage((net.sf.freecol.server.FreeColServer.ServerState)params[0]);
  if (types.length == 0)
    return new net.sf.freecol.common.networking.GameStateMessage();
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.GameStateMessage", net.sf.freecol.common.networking.GameStateMessage.class);
metas.put(net.sf.freecol.common.networking.GameStateMessage.class, common_networking_GameStateMessage);
// net.sf.freecol.common.networking.MoveMessage
final Meta common_networking_MoveMessage = new Meta() {
net.sf.freecol.common.networking.MoveMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Direction.class))
    return new net.sf.freecol.common.networking.MoveMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Direction)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.MoveMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.MoveMessage", net.sf.freecol.common.networking.MoveMessage.class);
metas.put(net.sf.freecol.common.networking.MoveMessage.class, common_networking_MoveMessage);
// net.sf.freecol.common.networking.LoginMessage
final Meta common_networking_LoginMessage = new Meta() {
net.sf.freecol.common.networking.LoginMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Player.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, net.sf.freecol.server.FreeColServer.ServerState.class, boolean.class, boolean.class, net.sf.freecol.common.model.Game.class))
    return new net.sf.freecol.common.networking.LoginMessage((net.sf.freecol.common.model.Player)params[0], (java.lang.String)params[1], (java.lang.String)params[1], (java.lang.String)params[1], (net.sf.freecol.server.FreeColServer.ServerState)params[4], (boolean)params[5], (boolean)params[5], (net.sf.freecol.common.model.Game)params[7]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.LoginMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ObjectMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.LoginMessage", net.sf.freecol.common.networking.LoginMessage.class);
metas.put(net.sf.freecol.common.networking.LoginMessage.class, common_networking_LoginMessage);
// net.sf.freecol.common.networking.DisbandUnitMessage
final Meta common_networking_DisbandUnitMessage = new Meta() {
net.sf.freecol.common.networking.DisbandUnitMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class))
    return new net.sf.freecol.common.networking.DisbandUnitMessage((net.sf.freecol.common.model.Unit)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.DisbandUnitMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.DisbandUnitMessage", net.sf.freecol.common.networking.DisbandUnitMessage.class);
metas.put(net.sf.freecol.common.networking.DisbandUnitMessage.class, common_networking_DisbandUnitMessage);
// net.sf.freecol.common.networking.SetAvailableMessage
final Meta common_networking_SetAvailableMessage = new Meta() {
net.sf.freecol.common.networking.SetAvailableMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Nation.class, net.sf.freecol.common.model.NationOptions.NationState.class))
    return new net.sf.freecol.common.networking.SetAvailableMessage((net.sf.freecol.common.model.Nation)params[0], (net.sf.freecol.common.model.NationOptions.NationState)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.SetAvailableMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getNationState": return ((net.sf.freecol.common.networking.SetAvailableMessage)object).getNationState();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.SetAvailableMessage", net.sf.freecol.common.networking.SetAvailableMessage.class);
metas.put(net.sf.freecol.common.networking.SetAvailableMessage.class, common_networking_SetAvailableMessage);
// net.sf.freecol.common.networking.ConnectionVerificationMessage
final Meta common_networking_ConnectionVerificationMessage = new Meta() {
net.sf.freecol.common.networking.ConnectionVerificationMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, boolean.class))
    return new net.sf.freecol.common.networking.ConnectionVerificationMessage((boolean)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.ConnectionVerificationMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "isConnectable": return ((net.sf.freecol.common.networking.ConnectionVerificationMessage)object).isConnectable();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.ConnectionVerificationMessage", net.sf.freecol.common.networking.ConnectionVerificationMessage.class);
metas.put(net.sf.freecol.common.networking.ConnectionVerificationMessage.class, common_networking_ConnectionVerificationMessage);
// net.sf.freecol.common.networking.ChangeWorkImprovementTypeMessage
final Meta common_networking_ChangeWorkImprovementTypeMessage = new Meta() {
net.sf.freecol.common.networking.ChangeWorkImprovementTypeMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.TileImprovementType.class))
    return new net.sf.freecol.common.networking.ChangeWorkImprovementTypeMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.TileImprovementType)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.ChangeWorkImprovementTypeMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.ChangeWorkImprovementTypeMessage", net.sf.freecol.common.networking.ChangeWorkImprovementTypeMessage.class);
metas.put(net.sf.freecol.common.networking.ChangeWorkImprovementTypeMessage.class, common_networking_ChangeWorkImprovementTypeMessage);
// net.sf.freecol.common.networking.PartialMessage
final Meta common_networking_PartialMessage = new Meta() {
net.sf.freecol.common.networking.PartialMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.util.Map.class))
    return new net.sf.freecol.common.networking.PartialMessage((java.util.Map)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.PartialMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.PartialMessage", net.sf.freecol.common.networking.PartialMessage.class);
metas.put(net.sf.freecol.common.networking.PartialMessage.class, common_networking_PartialMessage);
// net.sf.freecol.common.networking.QuestionMessage
final Meta common_networking_QuestionMessage = new Meta() {
net.sf.freecol.common.networking.QuestionMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, int.class, net.sf.freecol.common.networking.Message.class))
    return new net.sf.freecol.common.networking.QuestionMessage((int)params[0], (net.sf.freecol.common.networking.Message)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.QuestionMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_WrapperMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.QuestionMessage", net.sf.freecol.common.networking.QuestionMessage.class);
metas.put(net.sf.freecol.common.networking.QuestionMessage.class, common_networking_QuestionMessage);
// net.sf.freecol.common.networking.SetStanceMessage
final Meta common_networking_SetStanceMessage = new Meta() {
net.sf.freecol.common.networking.SetStanceMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Stance.class, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.Player.class))
    return new net.sf.freecol.common.networking.SetStanceMessage((net.sf.freecol.common.model.Stance)params[0], (net.sf.freecol.common.model.Player)params[1], (net.sf.freecol.common.model.Player)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.SetStanceMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getStance": return ((net.sf.freecol.common.networking.SetStanceMessage)object).getStance();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.SetStanceMessage", net.sf.freecol.common.networking.SetStanceMessage.class);
metas.put(net.sf.freecol.common.networking.SetStanceMessage.class, common_networking_SetStanceMessage);
// net.sf.freecol.common.networking.EndTurnMessage
final Meta common_networking_EndTurnMessage = new Meta() {
net.sf.freecol.common.networking.EndTurnMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (types.length == 0)
    return new net.sf.freecol.common.networking.EndTurnMessage();
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.EndTurnMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_TrivialMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.EndTurnMessage", net.sf.freecol.common.networking.EndTurnMessage.class);
metas.put(net.sf.freecol.common.networking.EndTurnMessage.class, common_networking_EndTurnMessage);
// net.sf.freecol.common.networking.RequestLaunchMessage
final Meta common_networking_RequestLaunchMessage = new Meta() {
net.sf.freecol.common.networking.RequestLaunchMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (types.length == 0)
    return new net.sf.freecol.common.networking.RequestLaunchMessage();
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.RequestLaunchMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_TrivialMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.RequestLaunchMessage", net.sf.freecol.common.networking.RequestLaunchMessage.class);
metas.put(net.sf.freecol.common.networking.RequestLaunchMessage.class, common_networking_RequestLaunchMessage);
// net.sf.freecol.common.networking.ChangeWorkTypeMessage
final Meta common_networking_ChangeWorkTypeMessage = new Meta() {
net.sf.freecol.common.networking.ChangeWorkTypeMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.GoodsType.class))
    return new net.sf.freecol.common.networking.ChangeWorkTypeMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.GoodsType)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.ChangeWorkTypeMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.ChangeWorkTypeMessage", net.sf.freecol.common.networking.ChangeWorkTypeMessage.class);
metas.put(net.sf.freecol.common.networking.ChangeWorkTypeMessage.class, common_networking_ChangeWorkTypeMessage);
// net.sf.freecol.common.networking.TrainUnitInEuropeMessage
final Meta common_networking_TrainUnitInEuropeMessage = new Meta() {
net.sf.freecol.common.networking.TrainUnitInEuropeMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.UnitType.class))
    return new net.sf.freecol.common.networking.TrainUnitInEuropeMessage((net.sf.freecol.common.model.UnitType)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.TrainUnitInEuropeMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.TrainUnitInEuropeMessage", net.sf.freecol.common.networking.TrainUnitInEuropeMessage.class);
metas.put(net.sf.freecol.common.networking.TrainUnitInEuropeMessage.class, common_networking_TrainUnitInEuropeMessage);
// net.sf.freecol.common.networking.ReadyMessage
final Meta common_networking_ReadyMessage = new Meta() {
net.sf.freecol.common.networking.ReadyMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Player.class, boolean.class))
    return new net.sf.freecol.common.networking.ReadyMessage((net.sf.freecol.common.model.Player)params[0], (boolean)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.ReadyMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getValue": return ((net.sf.freecol.common.networking.ReadyMessage)object).getValue();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.ReadyMessage", net.sf.freecol.common.networking.ReadyMessage.class);
metas.put(net.sf.freecol.common.networking.ReadyMessage.class, common_networking_ReadyMessage);
// net.sf.freecol.common.networking.EquipForRoleMessage
final Meta common_networking_EquipForRoleMessage = new Meta() {
net.sf.freecol.common.networking.EquipForRoleMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.Role.class, int.class))
    return new net.sf.freecol.common.networking.EquipForRoleMessage((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.Role)params[1], (int)params[2]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.EquipForRoleMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.EquipForRoleMessage", net.sf.freecol.common.networking.EquipForRoleMessage.class);
metas.put(net.sf.freecol.common.networking.EquipForRoleMessage.class, common_networking_EquipForRoleMessage);
// net.sf.freecol.common.networking.UpdateGameOptionsMessage
final Meta common_networking_UpdateGameOptionsMessage = new Meta() {
net.sf.freecol.common.networking.UpdateGameOptionsMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.option.OptionGroup.class))
    return new net.sf.freecol.common.networking.UpdateGameOptionsMessage((net.sf.freecol.common.option.OptionGroup)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.UpdateGameOptionsMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_networking_ObjectMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.UpdateGameOptionsMessage", net.sf.freecol.common.networking.UpdateGameOptionsMessage.class);
metas.put(net.sf.freecol.common.networking.UpdateGameOptionsMessage.class, common_networking_UpdateGameOptionsMessage);
// net.sf.freecol.common.networking.FountainOfYouthMessage
final Meta common_networking_FountainOfYouthMessage = new Meta() {
net.sf.freecol.common.networking.FountainOfYouthMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, int.class))
    return new net.sf.freecol.common.networking.FountainOfYouthMessage((int)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.FountainOfYouthMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getMigrants": return ((net.sf.freecol.common.networking.FountainOfYouthMessage)object).getMigrants();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.FountainOfYouthMessage", net.sf.freecol.common.networking.FountainOfYouthMessage.class);
metas.put(net.sf.freecol.common.networking.FountainOfYouthMessage.class, common_networking_FountainOfYouthMessage);
// net.sf.freecol.common.networking.NewLandNameMessage
final Meta common_networking_NewLandNameMessage = new Meta() {
net.sf.freecol.common.networking.NewLandNameMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, java.lang.String.class))
    return new net.sf.freecol.common.networking.NewLandNameMessage((net.sf.freecol.common.model.Unit)params[0], (java.lang.String)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.networking.NewLandNameMessage((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getNewLandName": return ((net.sf.freecol.common.networking.NewLandNameMessage)object).getNewLandName();
  }
  return common_networking_AttributeMessage.invokeMethod(object, method, params);
}
};
names.put("common.networking.NewLandNameMessage", net.sf.freecol.common.networking.NewLandNameMessage.class);
metas.put(net.sf.freecol.common.networking.NewLandNameMessage.class, common_networking_NewLandNameMessage);
// net.sf.freecol.common.model.FreeColObject
final Meta common_model_FreeColObject = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getModifiers": return ((net.sf.freecol.common.model.FreeColObject)object).getModifiers();
  case "getId": return ((net.sf.freecol.common.model.FreeColObject)object).getId();
  case "getAbilities": return ((net.sf.freecol.common.model.FreeColObject)object).getAbilities();
  case "getSortedAbilities": return ((net.sf.freecol.common.model.FreeColObject)object).getSortedAbilities();
  case "getSortedModifiers": return ((net.sf.freecol.common.model.FreeColObject)object).getSortedModifiers();
  case "getDefenceModifiers": return ((net.sf.freecol.common.model.FreeColObject)object).getDefenceModifiers();
  case "getFreeColObjectClass": return ((net.sf.freecol.common.model.FreeColObject)object).getFreeColObjectClass();
  case "setId": ((net.sf.freecol.common.model.FreeColObject)object).setId((java.lang.String)params[0]); return null;
  case "getSuffix": return ((net.sf.freecol.common.model.FreeColObject)object).getSuffix();
  case "getIdType": return ((net.sf.freecol.common.model.FreeColObject)object).getIdType();
  case "getIdNumber": return ((net.sf.freecol.common.model.FreeColObject)object).getIdNumber();
  case "getClassIndex": return ((net.sf.freecol.common.model.FreeColObject)object).getClassIndex();
  case "getSpecification": return ((net.sf.freecol.common.model.FreeColObject)object).getSpecification();
  case "getGame": return ((net.sf.freecol.common.model.FreeColObject)object).getGame();
  case "setGame": ((net.sf.freecol.common.model.FreeColObject)object).setGame((net.sf.freecol.common.model.Game)params[0]); return null;
  case "getPropertyChangeListeners": return ((net.sf.freecol.common.model.FreeColObject)object).getPropertyChangeListeners();
  case "getFeatureContainer": return ((net.sf.freecol.common.model.FreeColObject)object).getFeatureContainer();
  case "getDisplayObject": return ((net.sf.freecol.common.model.FreeColObject)object).getDisplayObject();
  case "dumpObject": ((net.sf.freecol.common.model.FreeColObject)object).dumpObject(); return null;
  case "serialize": return ((net.sf.freecol.common.model.FreeColObject)object).serialize();
  case "getXMLTagName": return ((net.sf.freecol.common.model.FreeColObject)object).getXMLTagName();
  }
  return super.invokeMethod(object, method, params);
}
};
names.put("common.model.FreeColObject", net.sf.freecol.common.model.FreeColObject.class);
metas.put(net.sf.freecol.common.model.FreeColObject.class, common_model_FreeColObject);
// net.sf.freecol.common.model.StringTemplate
final Meta common_model_StringTemplate = new Meta() {
net.sf.freecol.common.model.StringTemplate newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.model.StringTemplate((net.sf.freecol.common.io.FreeColXMLReader)params[0]);
  if (types.length == 0)
    return new net.sf.freecol.common.model.StringTemplate();
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "isEmpty": return ((net.sf.freecol.common.model.StringTemplate)object).isEmpty();
  case "getTemplateType": return ((net.sf.freecol.common.model.StringTemplate)object).getTemplateType();
  case "getDefaultId": return ((net.sf.freecol.common.model.StringTemplate)object).getDefaultId();
  case "setDefaultId": ((net.sf.freecol.common.model.StringTemplate)object).setDefaultId((java.lang.String)params[0]); return null;
  case "entryList": return ((net.sf.freecol.common.model.StringTemplate)object).entryList();
  }
  return common_model_FreeColObject.invokeMethod(object, method, params);
}
};
names.put("common.model.StringTemplate", net.sf.freecol.common.model.StringTemplate.class);
metas.put(net.sf.freecol.common.model.StringTemplate.class, common_model_StringTemplate);
// net.sf.freecol.common.model.ModelMessage
final Meta common_model_ModelMessage = new Meta() {
net.sf.freecol.common.model.ModelMessage newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.ModelMessage.MessageType.class, java.lang.String.class, net.sf.freecol.common.model.FreeColGameObject.class, net.sf.freecol.common.model.FreeColObject.class))
    return new net.sf.freecol.common.model.ModelMessage((net.sf.freecol.common.model.ModelMessage.MessageType)params[0], (java.lang.String)params[1], (net.sf.freecol.common.model.FreeColGameObject)params[2], (net.sf.freecol.common.model.FreeColObject)params[3]);
  if (areSame(types, net.sf.freecol.common.model.ModelMessage.MessageType.class, java.lang.String.class, net.sf.freecol.common.model.FreeColGameObject.class))
    return new net.sf.freecol.common.model.ModelMessage((net.sf.freecol.common.model.ModelMessage.MessageType)params[0], (java.lang.String)params[1], (net.sf.freecol.common.model.FreeColGameObject)params[2]);
  if (areSame(types, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.model.ModelMessage((net.sf.freecol.common.io.FreeColXMLReader)params[0]);
  if (areSame(types, net.sf.freecol.common.model.ModelMessage.MessageType.class, java.lang.String.class, java.lang.String.class, net.sf.freecol.common.model.FreeColGameObject.class, net.sf.freecol.common.model.FreeColObject.class))
    return new net.sf.freecol.common.model.ModelMessage((net.sf.freecol.common.model.ModelMessage.MessageType)params[0], (java.lang.String)params[1], (java.lang.String)params[1], (net.sf.freecol.common.model.FreeColGameObject)params[3], (net.sf.freecol.common.model.FreeColObject)params[4]);
  if (types.length == 0)
    return new net.sf.freecol.common.model.ModelMessage();
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getSourceId": return ((net.sf.freecol.common.model.ModelMessage)object).getSourceId();
  case "getDisplayId": return ((net.sf.freecol.common.model.ModelMessage)object).getDisplayId();
  case "getIgnoredMessageKey": return ((net.sf.freecol.common.model.ModelMessage)object).getIgnoredMessageKey();
  case "setDisplayed": ((net.sf.freecol.common.model.ModelMessage)object).setDisplayed((boolean)params[0]); return null;
  case "getDisplayed": return ((net.sf.freecol.common.model.ModelMessage)object).getDisplayed();
  case "getMessageType": return ((net.sf.freecol.common.model.ModelMessage)object).getMessageType();
  case "getOptionName": return ((net.sf.freecol.common.model.ModelMessage)object).getOptionName();
  case "setSourceId": ((net.sf.freecol.common.model.ModelMessage)object).setSourceId((java.lang.String)params[0]); return null;
  case "setDisplayId": ((net.sf.freecol.common.model.ModelMessage)object).setDisplayId((java.lang.String)params[0]); return null;
  case "setMessageType": ((net.sf.freecol.common.model.ModelMessage)object).setMessageType((net.sf.freecol.common.model.ModelMessage.MessageType)params[0]); return null;
  }
  return common_model_StringTemplate.invokeMethod(object, method, params);
}
};
names.put("common.model.ModelMessage", net.sf.freecol.common.model.ModelMessage.class);
metas.put(net.sf.freecol.common.model.ModelMessage.class, common_model_ModelMessage);
// net.sf.freecol.common.model.FreeColGameObject
final Meta common_model_FreeColGameObject = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "dispose": ((net.sf.freecol.common.model.FreeColGameObject)object).dispose(); return null;
  case "intern": ((net.sf.freecol.common.model.FreeColGameObject)object).intern(); return null;
  case "setSpecification": ((net.sf.freecol.common.model.FreeColGameObject)object).setSpecification((net.sf.freecol.common.model.Specification)params[0]); return null;
  case "isDisposed": return ((net.sf.freecol.common.model.FreeColGameObject)object).isDisposed();
  case "isInitialized": return ((net.sf.freecol.common.model.FreeColGameObject)object).isInitialized();
  case "isInternable": return ((net.sf.freecol.common.model.FreeColGameObject)object).isInternable();
  case "getDisposables": return ((net.sf.freecol.common.model.FreeColGameObject)object).getDisposables();
  case "disposeResources": ((net.sf.freecol.common.model.FreeColGameObject)object).disposeResources(); return null;
  case "fundamentalDispose": ((net.sf.freecol.common.model.FreeColGameObject)object).fundamentalDispose(); return null;
  }
  return common_model_FreeColObject.invokeMethod(object, method, params);
}
};
names.put("common.model.FreeColGameObject", net.sf.freecol.common.model.FreeColGameObject.class);
metas.put(net.sf.freecol.common.model.FreeColGameObject.class, common_model_FreeColGameObject);
// net.sf.freecol.common.model.UnitLocation
final Meta common_model_UnitLocation = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getUnits": return ((net.sf.freecol.common.model.UnitLocation)object).getUnits();
  case "isEmpty": return ((net.sf.freecol.common.model.UnitLocation)object).isEmpty();
  case "getUnitCount": return ((net.sf.freecol.common.model.UnitLocation)object).getUnitCount();
  case "getSpaceTaken": return ((net.sf.freecol.common.model.UnitLocation)object).getSpaceTaken();
  case "getTile": return ((net.sf.freecol.common.model.UnitLocation)object).getTile();
  case "getFirstUnit": return ((net.sf.freecol.common.model.UnitLocation)object).getFirstUnit();
  case "getColony": return ((net.sf.freecol.common.model.UnitLocation)object).getColony();
  case "getUnitList": return ((net.sf.freecol.common.model.UnitLocation)object).getUnitList();
  case "getSettlement": return ((net.sf.freecol.common.model.UnitLocation)object).getSettlement();
  case "getGoodsContainer": return ((net.sf.freecol.common.model.UnitLocation)object).getGoodsContainer();
  case "getLocationLabel": return ((net.sf.freecol.common.model.UnitLocation)object).getLocationLabel();
  case "getNavalUnits": return ((net.sf.freecol.common.model.UnitLocation)object).getNavalUnits();
  case "getIndianSettlement": return ((net.sf.freecol.common.model.UnitLocation)object).getIndianSettlement();
  case "isFull": return ((net.sf.freecol.common.model.UnitLocation)object).isFull();
  case "getUnitCapacity": return ((net.sf.freecol.common.model.UnitLocation)object).getUnitCapacity();
  case "getLastUnit": return ((net.sf.freecol.common.model.UnitLocation)object).getLastUnit();
  case "getTotalUnitCount": return ((net.sf.freecol.common.model.UnitLocation)object).getTotalUnitCount();
  }
  return common_model_FreeColGameObject.invokeMethod(object, method, params);
}
};
names.put("common.model.UnitLocation", net.sf.freecol.common.model.UnitLocation.class);
metas.put(net.sf.freecol.common.model.UnitLocation.class, common_model_UnitLocation);
// net.sf.freecol.common.model.Tile
final Meta common_model_Tile = new Meta() {
net.sf.freecol.common.model.Tile newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.Tile((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.TileType.class, int.class, int.class))
    return new net.sf.freecol.common.model.Tile((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.TileType)params[1], (int)params[2], (int)params[2]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "setOwner": ((net.sf.freecol.common.model.Tile)object).setOwner((net.sf.freecol.common.model.Player)params[0]); return null;
  case "getRegion": return ((net.sf.freecol.common.model.Tile)object).getRegion();
  case "setRegion": ((net.sf.freecol.common.model.Tile)object).setRegion((net.sf.freecol.common.model.Region)params[0]); return null;
  case "getResource": return ((net.sf.freecol.common.model.Tile)object).getResource();
  case "getType": return ((net.sf.freecol.common.model.Tile)object).getType();
  case "getOwner": return ((net.sf.freecol.common.model.Tile)object).getOwner();
  case "getMap": return ((net.sf.freecol.common.model.Tile)object).getMap();
  case "setType": ((net.sf.freecol.common.model.Tile)object).setType((net.sf.freecol.common.model.TileType)params[0]); return null;
  case "cacheUnseen": ((net.sf.freecol.common.model.Tile)object).cacheUnseen(); return null;
  case "getOwningSettlement": return ((net.sf.freecol.common.model.Tile)object).getOwningSettlement();
  case "getDisasterChoices": return ((net.sf.freecol.common.model.Tile)object).getDisasterChoices();
  case "getLabel": return ((net.sf.freecol.common.model.Tile)object).getLabel();
  case "hasSettlement": return ((net.sf.freecol.common.model.Tile)object).hasSettlement();
  case "seeTile": ((net.sf.freecol.common.model.Tile)object).seeTile(); return null;
  case "getTileToCache": return ((net.sf.freecol.common.model.Tile)object).getTileToCache();
  case "isLandLocked": return ((net.sf.freecol.common.model.Tile)object).isLandLocked();
  case "isLand": return ((net.sf.freecol.common.model.Tile)object).isLand();
  case "getHighSeasCount": return ((net.sf.freecol.common.model.Tile)object).getHighSeasCount();
  case "isDirectlyHighSeasConnected": return ((net.sf.freecol.common.model.Tile)object).isDirectlyHighSeasConnected();
  case "getLostCityRumour": return ((net.sf.freecol.common.model.Tile)object).getLostCityRumour();
  case "getDiscoverableRegion": return ((net.sf.freecol.common.model.Tile)object).getDiscoverableRegion();
  case "getX": return ((net.sf.freecol.common.model.Tile)object).getX();
  case "isExplored": return ((net.sf.freecol.common.model.Tile)object).isExplored();
  case "getY": return ((net.sf.freecol.common.model.Tile)object).getY();
  case "hasLostCityRumour": return ((net.sf.freecol.common.model.Tile)object).hasLostCityRumour();
  case "isInUse": return ((net.sf.freecol.common.model.Tile)object).isInUse();
  case "getAdjacentColonies": return ((net.sf.freecol.common.model.Tile)object).getAdjacentColonies();
  case "isPolar": return ((net.sf.freecol.common.model.Tile)object).isPolar();
  case "getBestFoodProduction": return ((net.sf.freecol.common.model.Tile)object).getBestFoodProduction();
  case "hasResource": return ((net.sf.freecol.common.model.Tile)object).hasResource();
  case "getSortedPotential": return ((net.sf.freecol.common.model.Tile)object).getSortedPotential();
  case "isOnRiver": return ((net.sf.freecol.common.model.Tile)object).isOnRiver();
  case "isRiverCorner": return ((net.sf.freecol.common.model.Tile)object).isRiverCorner();
  case "getContiguity": return ((net.sf.freecol.common.model.Tile)object).getContiguity();
  case "getNameKey": return ((net.sf.freecol.common.model.Tile)object).getNameKey();
  case "getSortedAutoPotential": return ((net.sf.freecol.common.model.Tile)object).getSortedAutoPotential();
  case "getMaximumPotentialFoodProductionWithExpert": return ((net.sf.freecol.common.model.Tile)object).getMaximumPotentialFoodProductionWithExpert();
  case "getOccupyingUnit": return ((net.sf.freecol.common.model.Tile)object).getOccupyingUnit();
  case "isOccupied": return ((net.sf.freecol.common.model.Tile)object).isOccupied();
  case "isForested": return ((net.sf.freecol.common.model.Tile)object).isForested();
  case "setTileItemContainer": ((net.sf.freecol.common.model.Tile)object).setTileItemContainer((net.sf.freecol.common.model.TileItemContainer)params[0]); return null;
  case "getCompleteItems": return ((net.sf.freecol.common.model.Tile)object).getCompleteItems();
  case "setHighSeasCount": ((net.sf.freecol.common.model.Tile)object).setHighSeasCount((int)params[0]); return null;
  case "getMoveToEurope": return ((net.sf.freecol.common.model.Tile)object).getMoveToEurope();
  case "setMoveToEurope": ((net.sf.freecol.common.model.Tile)object).setMoveToEurope((java.lang.Boolean)params[0]); return null;
  case "getStyle": return ((net.sf.freecol.common.model.Tile)object).getStyle();
  case "setStyle": ((net.sf.freecol.common.model.Tile)object).setStyle((int)params[0]); return null;
  case "setContiguity": ((net.sf.freecol.common.model.Tile)object).setContiguity((int)params[0]); return null;
  case "getTileImprovements": return ((net.sf.freecol.common.model.Tile)object).getTileImprovements();
  case "getCompleteTileImprovements": return ((net.sf.freecol.common.model.Tile)object).getCompleteTileImprovements();
  case "hasRiver": return ((net.sf.freecol.common.model.Tile)object).hasRiver();
  case "getRiver": return ((net.sf.freecol.common.model.Tile)object).getRiver();
  case "getRiverStyle": return ((net.sf.freecol.common.model.Tile)object).getRiverStyle();
  case "removeRiver": ((net.sf.freecol.common.model.Tile)object).removeRiver(); return null;
  case "removeResource": return ((net.sf.freecol.common.model.Tile)object).removeResource();
  case "getSimpleLabel": return ((net.sf.freecol.common.model.Tile)object).getSimpleLabel();
  case "isGoodHillTile": return ((net.sf.freecol.common.model.Tile)object).isGoodHillTile();
  case "hasUnexploredAdjacent": return ((net.sf.freecol.common.model.Tile)object).hasUnexploredAdjacent();
  case "getAvailableAdjacentCount": return ((net.sf.freecol.common.model.Tile)object).getAvailableAdjacentCount();
  case "getDefenceValue": return ((net.sf.freecol.common.model.Tile)object).getDefenceValue();
  case "getDefenceBonusPercentage": return ((net.sf.freecol.common.model.Tile)object).getDefenceBonusPercentage();
  case "removeLostCityRumour": return ((net.sf.freecol.common.model.Tile)object).removeLostCityRumour();
  case "isCoastland": return ((net.sf.freecol.common.model.Tile)object).isCoastland();
  case "isShore": return ((net.sf.freecol.common.model.Tile)object).isShore();
  case "setOwningSettlement": ((net.sf.freecol.common.model.Tile)object).setOwningSettlement((net.sf.freecol.common.model.Settlement)params[0]); return null;
  case "getTileItemContainer": return ((net.sf.freecol.common.model.Tile)object).getTileItemContainer();
  case "setSettlement": ((net.sf.freecol.common.model.Tile)object).setSettlement((net.sf.freecol.common.model.Settlement)params[0]); return null;
  case "hasRoad": return ((net.sf.freecol.common.model.Tile)object).hasRoad();
  case "addRoad": return ((net.sf.freecol.common.model.Tile)object).addRoad();
  case "getRoad": return ((net.sf.freecol.common.model.Tile)object).getRoad();
  case "removeRoad": return ((net.sf.freecol.common.model.Tile)object).removeRoad();
  case "isHighSeasConnected": return ((net.sf.freecol.common.model.Tile)object).isHighSeasConnected();
  }
  return common_model_UnitLocation.invokeMethod(object, method, params);
}
};
names.put("common.model.Tile", net.sf.freecol.common.model.Tile.class);
metas.put(net.sf.freecol.common.model.Tile.class, common_model_Tile);
// net.sf.freecol.common.model.FreeColSpecObject
final Meta common_model_FreeColSpecObject = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_model_FreeColObject.invokeMethod(object, method, params);
}
};
names.put("common.model.FreeColSpecObject", net.sf.freecol.common.model.FreeColSpecObject.class);
metas.put(net.sf.freecol.common.model.FreeColSpecObject.class, common_model_FreeColSpecObject);
// net.sf.freecol.common.model.FreeColSpecObjectType
final Meta common_model_FreeColSpecObjectType = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getIndex": return ((net.sf.freecol.common.model.FreeColSpecObjectType)object).getIndex();
  case "getDescriptionKey": return ((net.sf.freecol.common.model.FreeColSpecObjectType)object).getDescriptionKey();
  case "getScopes": return ((net.sf.freecol.common.model.FreeColSpecObjectType)object).getScopes();
  case "getNameKey": return ((net.sf.freecol.common.model.FreeColSpecObjectType)object).getNameKey();
  case "getScopeList": return ((net.sf.freecol.common.model.FreeColSpecObjectType)object).getScopeList();
  case "isAbstractType": return ((net.sf.freecol.common.model.FreeColSpecObjectType)object).isAbstractType();
  }
  return common_model_FreeColSpecObject.invokeMethod(object, method, params);
}
};
names.put("common.model.FreeColSpecObjectType", net.sf.freecol.common.model.FreeColSpecObjectType.class);
metas.put(net.sf.freecol.common.model.FreeColSpecObjectType.class, common_model_FreeColSpecObjectType);
// net.sf.freecol.common.model.SettlementType
final Meta common_model_SettlementType = new Meta() {
net.sf.freecol.common.model.SettlementType newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.SettlementType((java.lang.String)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  if (areSame(types, net.sf.freecol.common.io.FreeColXMLReader.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.SettlementType((net.sf.freecol.common.io.FreeColXMLReader)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "isCapital": return ((net.sf.freecol.common.model.SettlementType)object).isCapital();
  case "getWarehouseCapacity": return ((net.sf.freecol.common.model.SettlementType)object).getWarehouseCapacity();
  case "getGifts": return ((net.sf.freecol.common.model.SettlementType)object).getGifts();
  case "getClaimableRadius": return ((net.sf.freecol.common.model.SettlementType)object).getClaimableRadius();
  case "getVisibleRadius": return ((net.sf.freecol.common.model.SettlementType)object).getVisibleRadius();
  case "getTradeBonus": return ((net.sf.freecol.common.model.SettlementType)object).getTradeBonus();
  case "getMinimumSize": return ((net.sf.freecol.common.model.SettlementType)object).getMinimumSize();
  case "getMaximumSize": return ((net.sf.freecol.common.model.SettlementType)object).getMaximumSize();
  case "getPlunderTypes": return ((net.sf.freecol.common.model.SettlementType)object).getPlunderTypes();
  case "getExtraClaimableRadius": return ((net.sf.freecol.common.model.SettlementType)object).getExtraClaimableRadius();
  case "getWanderingRadius": return ((net.sf.freecol.common.model.SettlementType)object).getWanderingRadius();
  case "getMinimumGrowth": return ((net.sf.freecol.common.model.SettlementType)object).getMinimumGrowth();
  case "getMaximumGrowth": return ((net.sf.freecol.common.model.SettlementType)object).getMaximumGrowth();
  case "getConvertThreshold": return ((net.sf.freecol.common.model.SettlementType)object).getConvertThreshold();
  }
  return common_model_FreeColSpecObjectType.invokeMethod(object, method, params);
}
};
names.put("common.model.SettlementType", net.sf.freecol.common.model.SettlementType.class);
metas.put(net.sf.freecol.common.model.SettlementType.class, common_model_SettlementType);
// net.sf.freecol.common.model.BuildableType
final Meta common_model_BuildableType = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getRequiredGoodsList": return ((net.sf.freecol.common.model.BuildableType)object).getRequiredGoodsList();
  case "getRequiredGoods": return ((net.sf.freecol.common.model.BuildableType)object).getRequiredGoods();
  case "needsGoodsToBuild": return ((net.sf.freecol.common.model.BuildableType)object).needsGoodsToBuild();
  case "getRequiredPopulation": return ((net.sf.freecol.common.model.BuildableType)object).getRequiredPopulation();
  case "getRequiredAbilities": return ((net.sf.freecol.common.model.BuildableType)object).getRequiredAbilities();
  case "getLimits": return ((net.sf.freecol.common.model.BuildableType)object).getLimits();
  case "setRequiredPopulation": ((net.sf.freecol.common.model.BuildableType)object).setRequiredPopulation((int)params[0]); return null;
  case "setRequiredAbilities": ((net.sf.freecol.common.model.BuildableType)object).setRequiredAbilities((java.util.Map)params[0]); return null;
  case "setRequiredGoods": ((net.sf.freecol.common.model.BuildableType)object).setRequiredGoods((java.util.List)params[0]); return null;
  case "setLimits": ((net.sf.freecol.common.model.BuildableType)object).setLimits((java.util.List)params[0]); return null;
  case "getCurrentlyBuildingLabel": return ((net.sf.freecol.common.model.BuildableType)object).getCurrentlyBuildingLabel();
  }
  return common_model_FreeColSpecObjectType.invokeMethod(object, method, params);
}
};
names.put("common.model.BuildableType", net.sf.freecol.common.model.BuildableType.class);
metas.put(net.sf.freecol.common.model.BuildableType.class, common_model_BuildableType);
// net.sf.freecol.common.model.Role
final Meta common_model_Role = new Meta() {
net.sf.freecol.common.model.Role newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.Role((java.lang.String)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getDowngrade": return ((net.sf.freecol.common.model.Role)object).getDowngrade();
  case "getOffence": return ((net.sf.freecol.common.model.Role)object).getOffence();
  case "getMaximumCount": return ((net.sf.freecol.common.model.Role)object).getMaximumCount();
  case "isDefensive": return ((net.sf.freecol.common.model.Role)object).isDefensive();
  case "isOffensive": return ((net.sf.freecol.common.model.Role)object).isOffensive();
  case "getRoleIndex": return ((net.sf.freecol.common.model.Role)object).getRoleIndex();
  case "getRoleChanges": return ((net.sf.freecol.common.model.Role)object).getRoleChanges();
  case "isDefaultRole": return ((net.sf.freecol.common.model.Role)object).isDefaultRole();
  case "getRoleSuffix": return ((net.sf.freecol.common.model.Role)object).getRoleSuffix();
  case "setDowngrade": ((net.sf.freecol.common.model.Role)object).setDowngrade((net.sf.freecol.common.model.Role)params[0]); return null;
  case "setMaximumCount": ((net.sf.freecol.common.model.Role)object).setMaximumCount((int)params[0]); return null;
  case "getExpertUnit": return ((net.sf.freecol.common.model.Role)object).getExpertUnit();
  case "setExpertUnit": ((net.sf.freecol.common.model.Role)object).setExpertUnit((net.sf.freecol.common.model.UnitType)params[0]); return null;
  case "toFullString": return ((net.sf.freecol.common.model.Role)object).toFullString();
  }
  return common_model_BuildableType.invokeMethod(object, method, params);
}
};
names.put("common.model.Role", net.sf.freecol.common.model.Role.class);
metas.put(net.sf.freecol.common.model.Role.class, common_model_Role);
// net.sf.freecol.common.model.PlunderType
final Meta common_model_PlunderType = new Meta() {
net.sf.freecol.common.model.PlunderType newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.PlunderType((java.lang.String)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  if (areSame(types, net.sf.freecol.common.io.FreeColXMLReader.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.PlunderType((net.sf.freecol.common.io.FreeColXMLReader)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getPlunder": return ((net.sf.freecol.common.model.PlunderType)object).getPlunder();
  }
  return common_model_FreeColSpecObjectType.invokeMethod(object, method, params);
}
};
names.put("common.model.PlunderType", net.sf.freecol.common.model.PlunderType.class);
metas.put(net.sf.freecol.common.model.PlunderType.class, common_model_PlunderType);
// net.sf.freecol.common.model.TileItem
final Meta common_model_TileItem = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getLocation": return ((net.sf.freecol.common.model.TileItem)object).getLocation();
  case "getLayer": return ((net.sf.freecol.common.model.TileItem)object).getLayer();
  case "getSpaceTaken": return ((net.sf.freecol.common.model.TileItem)object).getSpaceTaken();
  case "getTile": return ((net.sf.freecol.common.model.TileItem)object).getTile();
  case "setLocation": return ((net.sf.freecol.common.model.TileItem)object).setLocation((net.sf.freecol.common.model.Location)params[0]);
  case "isInEurope": return ((net.sf.freecol.common.model.TileItem)object).isInEurope();
  case "isNatural": return ((net.sf.freecol.common.model.TileItem)object).isNatural();
  case "getNameKey": return ((net.sf.freecol.common.model.TileItem)object).getNameKey();
  case "isComplete": return ((net.sf.freecol.common.model.TileItem)object).isComplete();
  case "getZIndex": return ((net.sf.freecol.common.model.TileItem)object).getZIndex();
  }
  return common_model_FreeColGameObject.invokeMethod(object, method, params);
}
};
names.put("common.model.TileItem", net.sf.freecol.common.model.TileItem.class);
metas.put(net.sf.freecol.common.model.TileItem.class, common_model_TileItem);
// net.sf.freecol.common.model.TradeItem
final Meta common_model_TradeItem = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "isValid": return ((net.sf.freecol.common.model.TradeItem)object).isValid();
  case "getGold": return ((net.sf.freecol.common.model.TradeItem)object).getGold();
  case "getUnit": return ((net.sf.freecol.common.model.TradeItem)object).getUnit();
  case "getStance": return ((net.sf.freecol.common.model.TradeItem)object).getStance();
  case "setStance": ((net.sf.freecol.common.model.TradeItem)object).setStance((net.sf.freecol.common.model.Stance)params[0]); return null;
  case "getLabel": return ((net.sf.freecol.common.model.TradeItem)object).getLabel();
  case "getSource": return ((net.sf.freecol.common.model.TradeItem)object).getSource();
  case "getDestination": return ((net.sf.freecol.common.model.TradeItem)object).getDestination();
  case "setDestination": ((net.sf.freecol.common.model.TradeItem)object).setDestination((net.sf.freecol.common.model.Player)params[0]); return null;
  case "getGoods": return ((net.sf.freecol.common.model.TradeItem)object).getGoods();
  case "setGold": ((net.sf.freecol.common.model.TradeItem)object).setGold((int)params[0]); return null;
  case "getVictim": return ((net.sf.freecol.common.model.TradeItem)object).getVictim();
  case "setSource": ((net.sf.freecol.common.model.TradeItem)object).setSource((net.sf.freecol.common.model.Player)params[0]); return null;
  case "isUnique": return ((net.sf.freecol.common.model.TradeItem)object).isUnique();
  case "setGoods": ((net.sf.freecol.common.model.TradeItem)object).setGoods((net.sf.freecol.common.model.Goods)params[0]); return null;
  case "setUnit": ((net.sf.freecol.common.model.TradeItem)object).setUnit((net.sf.freecol.common.model.Unit)params[0]); return null;
  }
  return common_model_FreeColGameObject.invokeMethod(object, method, params);
}
};
names.put("common.model.TradeItem", net.sf.freecol.common.model.TradeItem.class);
metas.put(net.sf.freecol.common.model.TradeItem.class, common_model_TradeItem);
// net.sf.freecol.common.model.GoodsTradeItem
final Meta common_model_GoodsTradeItem = new Meta() {
net.sf.freecol.common.model.GoodsTradeItem newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.Goods.class))
    return new net.sf.freecol.common.model.GoodsTradeItem((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Player)params[1], (net.sf.freecol.common.model.Player)params[1], (net.sf.freecol.common.model.Goods)params[3]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.model.GoodsTradeItem((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_model_TradeItem.invokeMethod(object, method, params);
}
};
names.put("common.model.GoodsTradeItem", net.sf.freecol.common.model.GoodsTradeItem.class);
metas.put(net.sf.freecol.common.model.GoodsTradeItem.class, common_model_GoodsTradeItem);
// net.sf.freecol.common.model.AbstractGoods
final Meta common_model_AbstractGoods = new Meta() {
net.sf.freecol.common.model.AbstractGoods newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (types.length == 0)
    return new net.sf.freecol.common.model.AbstractGoods();
  if (areSame(types, net.sf.freecol.common.model.AbstractGoods.class))
    return new net.sf.freecol.common.model.AbstractGoods((net.sf.freecol.common.model.AbstractGoods)params[0]);
  if (areSame(types, net.sf.freecol.common.model.GoodsType.class, int.class))
    return new net.sf.freecol.common.model.AbstractGoods((net.sf.freecol.common.model.GoodsType)params[0], (int)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "isPositive": return ((net.sf.freecol.common.model.AbstractGoods)object).isPositive();
  case "getType": return ((net.sf.freecol.common.model.AbstractGoods)object).getType();
  case "setType": ((net.sf.freecol.common.model.AbstractGoods)object).setType((net.sf.freecol.common.model.GoodsType)params[0]); return null;
  case "getAmount": return ((net.sf.freecol.common.model.AbstractGoods)object).getAmount();
  case "setAmount": ((net.sf.freecol.common.model.AbstractGoods)object).setAmount((int)params[0]); return null;
  case "getLabel": return ((net.sf.freecol.common.model.AbstractGoods)object).getLabel();
  case "isStorable": return ((net.sf.freecol.common.model.AbstractGoods)object).isStorable();
  case "isFoodType": return ((net.sf.freecol.common.model.AbstractGoods)object).isFoodType();
  case "getNameKey": return ((net.sf.freecol.common.model.AbstractGoods)object).getNameKey();
  }
  return common_model_FreeColObject.invokeMethod(object, method, params);
}
};
names.put("common.model.AbstractGoods", net.sf.freecol.common.model.AbstractGoods.class);
metas.put(net.sf.freecol.common.model.AbstractGoods.class, common_model_AbstractGoods);
// net.sf.freecol.common.model.Goods
final Meta common_model_Goods = new Meta() {
net.sf.freecol.common.model.Goods newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Location.class, net.sf.freecol.common.model.GoodsType.class, int.class))
    return new net.sf.freecol.common.model.Goods((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Location)params[1], (net.sf.freecol.common.model.GoodsType)params[2], (int)params[3]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.model.Goods((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.Goods((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "setOwner": ((net.sf.freecol.common.model.Goods)object).setOwner((net.sf.freecol.common.model.Player)params[0]); return null;
  case "getLocation": return ((net.sf.freecol.common.model.Goods)object).getLocation();
  case "getOwner": return ((net.sf.freecol.common.model.Goods)object).getOwner();
  case "setSpecification": ((net.sf.freecol.common.model.Goods)object).setSpecification((net.sf.freecol.common.model.Specification)params[0]); return null;
  case "getSpaceTaken": return ((net.sf.freecol.common.model.Goods)object).getSpaceTaken();
  case "getTile": return ((net.sf.freecol.common.model.Goods)object).getTile();
  case "setLocation": return ((net.sf.freecol.common.model.Goods)object).setLocation((net.sf.freecol.common.model.Location)params[0]);
  case "isInEurope": return ((net.sf.freecol.common.model.Goods)object).isInEurope();
  case "adjustAmount": ((net.sf.freecol.common.model.Goods)object).adjustAmount(); return null;
  }
  return common_model_AbstractGoods.invokeMethod(object, method, params);
}
};
names.put("common.model.Goods", net.sf.freecol.common.model.Goods.class);
metas.put(net.sf.freecol.common.model.Goods.class, common_model_Goods);
// net.sf.freecol.common.model.WorkLocation
final Meta common_model_WorkLocation = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "setOwner": ((net.sf.freecol.common.model.WorkLocation)object).setOwner((net.sf.freecol.common.model.Player)params[0]); return null;
  case "getLevel": return ((net.sf.freecol.common.model.WorkLocation)object).getLevel();
  case "getOwner": return ((net.sf.freecol.common.model.WorkLocation)object).getOwner();
  case "getLabel": return ((net.sf.freecol.common.model.WorkLocation)object).getLabel();
  case "canBeWorked": return ((net.sf.freecol.common.model.WorkLocation)object).canBeWorked();
  case "getWorkTile": return ((net.sf.freecol.common.model.WorkLocation)object).getWorkTile();
  case "getProductionInfo": return ((net.sf.freecol.common.model.WorkLocation)object).getProductionInfo();
  case "canTeach": return ((net.sf.freecol.common.model.WorkLocation)object).canTeach();
  case "getRebelFactor": return ((net.sf.freecol.common.model.WorkLocation)object).getRebelFactor();
  case "getProduction": return ((net.sf.freecol.common.model.WorkLocation)object).getProduction();
  case "updateProductionType": ((net.sf.freecol.common.model.WorkLocation)object).updateProductionType(); return null;
  case "setColony": ((net.sf.freecol.common.model.WorkLocation)object).setColony((net.sf.freecol.common.model.Colony)params[0]); return null;
  case "getInputs": return ((net.sf.freecol.common.model.WorkLocation)object).getInputs();
  case "getOutputs": return ((net.sf.freecol.common.model.WorkLocation)object).getOutputs();
  case "isAvailable": return ((net.sf.freecol.common.model.WorkLocation)object).isAvailable();
  case "isCurrent": return ((net.sf.freecol.common.model.WorkLocation)object).isCurrent();
  case "getProductionType": return ((net.sf.freecol.common.model.WorkLocation)object).getProductionType();
  case "setProductionType": ((net.sf.freecol.common.model.WorkLocation)object).setProductionType((net.sf.freecol.common.model.ProductionType)params[0]); return null;
  case "getCurrentWorkType": return ((net.sf.freecol.common.model.WorkLocation)object).getCurrentWorkType();
  case "setWorkFor": return ((net.sf.freecol.common.model.WorkLocation)object).setWorkFor((net.sf.freecol.common.model.Unit)params[0]);
  case "getSuggestions": return ((net.sf.freecol.common.model.WorkLocation)object).getSuggestions();
  case "hasInputs": return ((net.sf.freecol.common.model.WorkLocation)object).hasInputs();
  case "hasOutputs": return ((net.sf.freecol.common.model.WorkLocation)object).hasOutputs();
  case "getNoWorkReason": return ((net.sf.freecol.common.model.WorkLocation)object).getNoWorkReason();
  case "getExpertUnitType": return ((net.sf.freecol.common.model.WorkLocation)object).getExpertUnitType();
  case "canAutoProduce": return ((net.sf.freecol.common.model.WorkLocation)object).canAutoProduce();
  case "getCompetenceFactor": return ((net.sf.freecol.common.model.WorkLocation)object).getCompetenceFactor();
  case "getClaimTemplate": return ((net.sf.freecol.common.model.WorkLocation)object).getClaimTemplate();
  }
  return common_model_UnitLocation.invokeMethod(object, method, params);
}
};
names.put("common.model.WorkLocation", net.sf.freecol.common.model.WorkLocation.class);
metas.put(net.sf.freecol.common.model.WorkLocation.class, common_model_WorkLocation);
// net.sf.freecol.common.model.ProductionType
final Meta common_model_ProductionType = new Meta() {
net.sf.freecol.common.model.ProductionType newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.util.List.class, java.util.List.class))
    return new net.sf.freecol.common.model.ProductionType((java.util.List)params[0], (java.util.List)params[0]);
  if (areSame(types, net.sf.freecol.common.model.AbstractGoods.class, boolean.class, java.lang.String.class))
    return new net.sf.freecol.common.model.ProductionType((net.sf.freecol.common.model.AbstractGoods)params[0], (boolean)params[1], (java.lang.String)params[2]);
  if (areSame(types, net.sf.freecol.common.io.FreeColXMLReader.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.ProductionType((net.sf.freecol.common.io.FreeColXMLReader)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.ProductionType((net.sf.freecol.common.model.Specification)params[0]);
  if (areSame(types, net.sf.freecol.common.model.GoodsType.class, net.sf.freecol.common.model.GoodsType.class, int.class))
    return new net.sf.freecol.common.model.ProductionType((net.sf.freecol.common.model.GoodsType)params[0], (net.sf.freecol.common.model.GoodsType)params[0], (int)params[2]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getOutputList": return ((net.sf.freecol.common.model.ProductionType)object).getOutputList();
  case "getInputs": return ((net.sf.freecol.common.model.ProductionType)object).getInputs();
  case "getOutputs": return ((net.sf.freecol.common.model.ProductionType)object).getOutputs();
  case "setUnattended": ((net.sf.freecol.common.model.ProductionType)object).setUnattended((boolean)params[0]); return null;
  case "getUnattended": return ((net.sf.freecol.common.model.ProductionType)object).getUnattended();
  case "getProductionLevel": return ((net.sf.freecol.common.model.ProductionType)object).getProductionLevel();
  case "getInputList": return ((net.sf.freecol.common.model.ProductionType)object).getInputList();
  case "setInputs": ((net.sf.freecol.common.model.ProductionType)object).setInputs((java.util.List)params[0]); return null;
  case "setOutputs": ((net.sf.freecol.common.model.ProductionType)object).setOutputs((java.util.List)params[0]); return null;
  case "getBestOutputType": return ((net.sf.freecol.common.model.ProductionType)object).getBestOutputType();
  }
  return common_model_FreeColSpecObject.invokeMethod(object, method, params);
}
};
names.put("common.model.ProductionType", net.sf.freecol.common.model.ProductionType.class);
metas.put(net.sf.freecol.common.model.ProductionType.class, common_model_ProductionType);
// net.sf.freecol.common.model.GoodsLocation
final Meta common_model_GoodsLocation = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "removeAll": ((net.sf.freecol.common.model.GoodsLocation)object).removeAll(); return null;
  case "invalidateCache": ((net.sf.freecol.common.model.GoodsLocation)object).invalidateCache(); return null;
  case "getCompactGoodsList": return ((net.sf.freecol.common.model.GoodsLocation)object).getCompactGoodsList();
  case "getGoodsList": return ((net.sf.freecol.common.model.GoodsLocation)object).getGoodsList();
  case "getGoodsCapacity": return ((net.sf.freecol.common.model.GoodsLocation)object).getGoodsCapacity();
  case "setGoodsContainer": ((net.sf.freecol.common.model.GoodsLocation)object).setGoodsContainer((net.sf.freecol.common.model.GoodsContainer)params[0]); return null;
  }
  return common_model_UnitLocation.invokeMethod(object, method, params);
}
};
names.put("common.model.GoodsLocation", net.sf.freecol.common.model.GoodsLocation.class);
metas.put(net.sf.freecol.common.model.GoodsLocation.class, common_model_GoodsLocation);
// net.sf.freecol.common.model.Settlement
final Meta common_model_Settlement = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "setOwner": ((net.sf.freecol.common.model.Settlement)object).setOwner((net.sf.freecol.common.model.Player)params[0]); return null;
  case "getName": return ((net.sf.freecol.common.model.Settlement)object).getName();
  case "setName": ((net.sf.freecol.common.model.Settlement)object).setName((java.lang.String)params[0]); return null;
  case "getType": return ((net.sf.freecol.common.model.Settlement)object).getType();
  case "getOwner": return ((net.sf.freecol.common.model.Settlement)object).getOwner();
  case "setType": ((net.sf.freecol.common.model.Settlement)object).setType((net.sf.freecol.common.model.SettlementType)params[0]); return null;
  case "getOwnedTiles": return ((net.sf.freecol.common.model.Settlement)object).getOwnedTiles();
  case "getVisibleTileSet": return ((net.sf.freecol.common.model.Settlement)object).getVisibleTileSet();
  case "getRadius": return ((net.sf.freecol.common.model.Settlement)object).getRadius();
  case "getAllUnitsList": return ((net.sf.freecol.common.model.Settlement)object).getAllUnitsList();
  case "getLineOfSight": return ((net.sf.freecol.common.model.Settlement)object).getLineOfSight();
  case "getImmigration": return ((net.sf.freecol.common.model.Settlement)object).getImmigration();
  case "isCapital": return ((net.sf.freecol.common.model.Settlement)object).isCapital();
  case "exciseSettlement": ((net.sf.freecol.common.model.Settlement)object).exciseSettlement(); return null;
  case "isLandLocked": return ((net.sf.freecol.common.model.Settlement)object).isLandLocked();
  case "getLiberty": return ((net.sf.freecol.common.model.Settlement)object).getLiberty();
  case "getSonsOfLiberty": return ((net.sf.freecol.common.model.Settlement)object).getSonsOfLiberty();
  case "getHighSeasCount": return ((net.sf.freecol.common.model.Settlement)object).getHighSeasCount();
  case "getUpkeep": return ((net.sf.freecol.common.model.Settlement)object).getUpkeep();
  case "canBombardEnemyShip": return ((net.sf.freecol.common.model.Settlement)object).canBombardEnemyShip();
  case "isConnectedPort": return ((net.sf.freecol.common.model.Settlement)object).isConnectedPort();
  case "getWarehouseCapacity": return ((net.sf.freecol.common.model.Settlement)object).getWarehouseCapacity();
  case "getDefenceRatio": return ((net.sf.freecol.common.model.Settlement)object).getDefenceRatio();
  case "isBadlyDefended": return ((net.sf.freecol.common.model.Settlement)object).isBadlyDefended();
  case "setCapital": ((net.sf.freecol.common.model.Settlement)object).setCapital((boolean)params[0]); return null;
  case "getFoodConsumption": return ((net.sf.freecol.common.model.Settlement)object).getFoodConsumption();
  }
  return common_model_GoodsLocation.invokeMethod(object, method, params);
}
};
names.put("common.model.Settlement", net.sf.freecol.common.model.Settlement.class);
metas.put(net.sf.freecol.common.model.Settlement.class, common_model_Settlement);
// net.sf.freecol.common.model.IndianSettlement
final Meta common_model_IndianSettlement = new Meta() {
net.sf.freecol.common.model.IndianSettlement newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.IndianSettlement((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "hasMissionary": return ((net.sf.freecol.common.model.IndianSettlement)object).hasMissionary();
  case "getMissionary": return ((net.sf.freecol.common.model.IndianSettlement)object).getMissionary();
  case "getOwnedUnitList": return ((net.sf.freecol.common.model.IndianSettlement)object).getOwnedUnitList();
  case "getMissionaryLineOfSight": return ((net.sf.freecol.common.model.IndianSettlement)object).getMissionaryLineOfSight();
  case "getLearnableSkill": return ((net.sf.freecol.common.model.IndianSettlement)object).getLearnableSkill();
  case "getWantedGoods": return ((net.sf.freecol.common.model.IndianSettlement)object).getWantedGoods();
  case "setContacted": return ((net.sf.freecol.common.model.IndianSettlement)object).setContacted((net.sf.freecol.common.model.Player)params[0]);
  case "updateWantedGoods": ((net.sf.freecol.common.model.IndianSettlement)object).updateWantedGoods(); return null;
  case "getLastTribute": return ((net.sf.freecol.common.model.IndianSettlement)object).getLastTribute();
  case "setLastTribute": ((net.sf.freecol.common.model.IndianSettlement)object).setLastTribute((int)params[0]); return null;
  case "setLearnableSkill": ((net.sf.freecol.common.model.IndianSettlement)object).setLearnableSkill((net.sf.freecol.common.model.UnitType)params[0]); return null;
  case "setVisited": return ((net.sf.freecol.common.model.IndianSettlement)object).setVisited((net.sf.freecol.common.model.Player)params[0]);
  case "hasAnyScouted": return ((net.sf.freecol.common.model.IndianSettlement)object).hasAnyScouted();
  case "setMissionary": ((net.sf.freecol.common.model.IndianSettlement)object).setMissionary((net.sf.freecol.common.model.Unit)params[0]); return null;
  case "getMissionaryVisibleTiles": return ((net.sf.freecol.common.model.IndianSettlement)object).getMissionaryVisibleTiles();
  case "getConvertProgress": return ((net.sf.freecol.common.model.IndianSettlement)object).getConvertProgress();
  case "setConvertProgress": ((net.sf.freecol.common.model.IndianSettlement)object).setConvertProgress((int)params[0]); return null;
  case "setWantedGoods": ((net.sf.freecol.common.model.IndianSettlement)object).setWantedGoods((java.util.List)params[0]); return null;
  case "getWantedGoodsCount": return ((net.sf.freecol.common.model.IndianSettlement)object).getWantedGoodsCount();
  case "getMostHated": return ((net.sf.freecol.common.model.IndianSettlement)object).getMostHated();
  case "setMostHated": ((net.sf.freecol.common.model.IndianSettlement)object).setMostHated((net.sf.freecol.common.model.Player)params[0]); return null;
  case "setScouted": return ((net.sf.freecol.common.model.IndianSettlement)object).setScouted((net.sf.freecol.common.model.Player)params[0]);
  case "getGoodsForSale": return ((net.sf.freecol.common.model.IndianSettlement)object).getGoodsForSale();
  case "setGoodsForSale": ((net.sf.freecol.common.model.IndianSettlement)object).setGoodsForSale((java.util.List)params[0]); return null;
  case "getRequiredDefenders": return ((net.sf.freecol.common.model.IndianSettlement)object).getRequiredDefenders();
  }
  return common_model_Settlement.invokeMethod(object, method, params);
}
};
names.put("common.model.IndianSettlement", net.sf.freecol.common.model.IndianSettlement.class);
metas.put(net.sf.freecol.common.model.IndianSettlement.class, common_model_IndianSettlement);
// net.sf.freecol.common.model.Scope
final Meta common_model_Scope = new Meta() {
net.sf.freecol.common.model.Scope newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.model.Scope((net.sf.freecol.common.io.FreeColXMLReader)params[0]);
  if (types.length == 0)
    return new net.sf.freecol.common.model.Scope();
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getKey": return ((net.sf.freecol.common.model.Scope)object).getKey();
  case "getType": return ((net.sf.freecol.common.model.Scope)object).getType();
  case "getMethodName": return ((net.sf.freecol.common.model.Scope)object).getMethodName();
  case "setType": ((net.sf.freecol.common.model.Scope)object).setType((java.lang.String)params[0]); return null;
  case "getAbilityId": return ((net.sf.freecol.common.model.Scope)object).getAbilityId();
  case "getFeatureString": return ((net.sf.freecol.common.model.Scope)object).getFeatureString();
  case "getMatchNegated": return ((net.sf.freecol.common.model.Scope)object).getMatchNegated();
  case "setMatchesNull": ((net.sf.freecol.common.model.Scope)object).setMatchesNull((boolean)params[0]); return null;
  case "setMatchNegated": ((net.sf.freecol.common.model.Scope)object).setMatchNegated((boolean)params[0]); return null;
  case "setAbilityId": ((net.sf.freecol.common.model.Scope)object).setAbilityId((java.lang.String)params[0]); return null;
  case "getAbilityValue": return ((net.sf.freecol.common.model.Scope)object).getAbilityValue();
  case "setAbilityValue": ((net.sf.freecol.common.model.Scope)object).setAbilityValue((boolean)params[0]); return null;
  case "setMethodName": ((net.sf.freecol.common.model.Scope)object).setMethodName((java.lang.String)params[0]); return null;
  case "getMethodValue": return ((net.sf.freecol.common.model.Scope)object).getMethodValue();
  case "setMethodValue": ((net.sf.freecol.common.model.Scope)object).setMethodValue((java.lang.String)params[0]); return null;
  }
  return common_model_FreeColObject.invokeMethod(object, method, params);
}
};
names.put("common.model.Scope", net.sf.freecol.common.model.Scope.class);
metas.put(net.sf.freecol.common.model.Scope.class, common_model_Scope);
// net.sf.freecol.common.model.Market
final Meta common_model_Market = new Meta() {
net.sf.freecol.common.model.Market newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.Market((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Player.class))
    return new net.sf.freecol.common.model.Market((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Player)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "setOwner": ((net.sf.freecol.common.model.Market)object).setOwner((net.sf.freecol.common.model.Player)params[0]); return null;
  case "getOwner": return ((net.sf.freecol.common.model.Market)object).getOwner();
  case "getSalePriceComparator": return ((net.sf.freecol.common.model.Market)object).getSalePriceComparator();
  case "getMarketDataValues": return ((net.sf.freecol.common.model.Market)object).getMarketDataValues();
  case "getTransactionListener": return ((net.sf.freecol.common.model.Market)object).getTransactionListener();
  }
  return common_model_FreeColGameObject.invokeMethod(object, method, params);
}
};
names.put("common.model.Market", net.sf.freecol.common.model.Market.class);
metas.put(net.sf.freecol.common.model.Market.class, common_model_Market);
// net.sf.freecol.common.model.Limit
final Meta common_model_Limit = new Meta() {
net.sf.freecol.common.model.Limit newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.Limit((net.sf.freecol.common.model.Specification)params[0]);
  if (areSame(types, net.sf.freecol.common.io.FreeColXMLReader.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.Limit((net.sf.freecol.common.io.FreeColXMLReader)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.Operand.class, net.sf.freecol.common.model.Limit.Operator.class, net.sf.freecol.common.model.Operand.class))
    return new net.sf.freecol.common.model.Limit((java.lang.String)params[0], (net.sf.freecol.common.model.Operand)params[1], (net.sf.freecol.common.model.Limit.Operator)params[2], (net.sf.freecol.common.model.Operand)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getRightHandSide": return ((net.sf.freecol.common.model.Limit)object).getRightHandSide();
  case "getLeftHandSide": return ((net.sf.freecol.common.model.Limit)object).getLeftHandSide();
  case "setOperator": ((net.sf.freecol.common.model.Limit)object).setOperator((net.sf.freecol.common.model.Limit.Operator)params[0]); return null;
  case "getOperator": return ((net.sf.freecol.common.model.Limit)object).getOperator();
  case "setLeftHandSide": ((net.sf.freecol.common.model.Limit)object).setLeftHandSide((net.sf.freecol.common.model.Operand)params[0]); return null;
  case "setRightHandSide": ((net.sf.freecol.common.model.Limit)object).setRightHandSide((net.sf.freecol.common.model.Operand)params[0]); return null;
  }
  return common_model_FreeColSpecObjectType.invokeMethod(object, method, params);
}
};
names.put("common.model.Limit", net.sf.freecol.common.model.Limit.class);
metas.put(net.sf.freecol.common.model.Limit.class, common_model_Limit);
// net.sf.freecol.common.model.Disaster
final Meta common_model_Disaster = new Meta() {
net.sf.freecol.common.model.Disaster newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.Disaster((java.lang.String)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getEffects": return ((net.sf.freecol.common.model.Disaster)object).getEffects();
  case "getNumberOfEffects": return ((net.sf.freecol.common.model.Disaster)object).getNumberOfEffects();
  case "isNatural": return ((net.sf.freecol.common.model.Disaster)object).isNatural();
  }
  return common_model_FreeColSpecObjectType.invokeMethod(object, method, params);
}
};
names.put("common.model.Disaster", net.sf.freecol.common.model.Disaster.class);
metas.put(net.sf.freecol.common.model.Disaster.class, common_model_Disaster);
// net.sf.freecol.common.model.Building
final Meta common_model_Building = new Meta() {
net.sf.freecol.common.model.Building newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.Building((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getPriority": return ((net.sf.freecol.common.model.Building)object).getPriority();
  case "getType": return ((net.sf.freecol.common.model.Building)object).getType();
  case "downgrade": return ((net.sf.freecol.common.model.Building)object).downgrade();
  case "canBeDamaged": return ((net.sf.freecol.common.model.Building)object).canBeDamaged();
  case "getNameKey": return ((net.sf.freecol.common.model.Building)object).getNameKey();
  case "getConsumedGoods": return ((net.sf.freecol.common.model.Building)object).getConsumedGoods();
  case "upgrade": return ((net.sf.freecol.common.model.Building)object).upgrade();
  case "canBuildNext": return ((net.sf.freecol.common.model.Building)object).canBuildNext();
  }
  return common_model_WorkLocation.invokeMethod(object, method, params);
}
};
names.put("common.model.Building", net.sf.freecol.common.model.Building.class);
metas.put(net.sf.freecol.common.model.Building.class, common_model_Building);
// net.sf.freecol.common.model.Feature
final Meta common_model_Feature = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getDuration": return ((net.sf.freecol.common.model.Feature)object).getDuration();
  case "getSource": return ((net.sf.freecol.common.model.Feature)object).getSource();
  case "isIndependent": return ((net.sf.freecol.common.model.Feature)object).isIndependent();
  case "isTemporary": return ((net.sf.freecol.common.model.Feature)object).isTemporary();
  case "getScopes": return ((net.sf.freecol.common.model.Feature)object).getScopes();
  case "getNameKey": return ((net.sf.freecol.common.model.Feature)object).getNameKey();
  case "setSource": ((net.sf.freecol.common.model.Feature)object).setSource((net.sf.freecol.common.model.FreeColObject)params[0]); return null;
  case "hasTimeLimit": return ((net.sf.freecol.common.model.Feature)object).hasTimeLimit();
  case "getFirstTurn": return ((net.sf.freecol.common.model.Feature)object).getFirstTurn();
  case "setFirstTurn": ((net.sf.freecol.common.model.Feature)object).setFirstTurn((net.sf.freecol.common.model.Turn)params[0]); return null;
  case "getLastTurn": return ((net.sf.freecol.common.model.Feature)object).getLastTurn();
  case "setLastTurn": ((net.sf.freecol.common.model.Feature)object).setLastTurn((net.sf.freecol.common.model.Turn)params[0]); return null;
  case "setDuration": ((net.sf.freecol.common.model.Feature)object).setDuration((int)params[0]); return null;
  case "setTemporary": ((net.sf.freecol.common.model.Feature)object).setTemporary((boolean)params[0]); return null;
  case "hasScope": return ((net.sf.freecol.common.model.Feature)object).hasScope();
  case "getScopeList": return ((net.sf.freecol.common.model.Feature)object).getScopeList();
  }
  return common_model_FreeColSpecObject.invokeMethod(object, method, params);
}
};
names.put("common.model.Feature", net.sf.freecol.common.model.Feature.class);
metas.put(net.sf.freecol.common.model.Feature.class, common_model_Feature);
// net.sf.freecol.common.model.Modifier
final Meta common_model_Modifier = new Meta() {
net.sf.freecol.common.model.Modifier newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, float.class, net.sf.freecol.common.model.Modifier.ModifierType.class))
    return new net.sf.freecol.common.model.Modifier((java.lang.String)params[0], (float)params[1], (net.sf.freecol.common.model.Modifier.ModifierType)params[2]);
  if (areSame(types, net.sf.freecol.common.io.FreeColXMLReader.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.Modifier((net.sf.freecol.common.io.FreeColXMLReader)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.Modifier((net.sf.freecol.common.model.Specification)params[0]);
  if (areSame(types, java.lang.String.class, float.class, net.sf.freecol.common.model.Modifier.ModifierType.class, net.sf.freecol.common.model.FreeColObject.class, int.class))
    return new net.sf.freecol.common.model.Modifier((java.lang.String)params[0], (float)params[1], (net.sf.freecol.common.model.Modifier.ModifierType)params[2], (net.sf.freecol.common.model.FreeColObject)params[3], (int)params[4]);
  if (areSame(types, java.lang.String.class, float.class, net.sf.freecol.common.model.Modifier.ModifierType.class, net.sf.freecol.common.model.FreeColObject.class))
    return new net.sf.freecol.common.model.Modifier((java.lang.String)params[0], (float)params[1], (net.sf.freecol.common.model.Modifier.ModifierType)params[2], (net.sf.freecol.common.model.FreeColObject)params[3]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "isKnown": return ((net.sf.freecol.common.model.Modifier)object).isKnown();
  case "getValue": return ((net.sf.freecol.common.model.Modifier)object).getValue();
  case "setValue": return ((net.sf.freecol.common.model.Modifier)object).setValue((float)params[0]);
  case "getType": return ((net.sf.freecol.common.model.Modifier)object).getType();
  case "setType": return ((net.sf.freecol.common.model.Modifier)object).setType((net.sf.freecol.common.model.Modifier.ModifierType)params[0]);
  case "setModifierIndex": return ((net.sf.freecol.common.model.Modifier)object).setModifierIndex((int)params[0]);
  case "hasIncrement": return ((net.sf.freecol.common.model.Modifier)object).hasIncrement();
  case "getIncrement": return ((net.sf.freecol.common.model.Modifier)object).getIncrement();
  case "getIncrementType": return ((net.sf.freecol.common.model.Modifier)object).getIncrementType();
  case "setIncrement": return ((net.sf.freecol.common.model.Modifier)object).setIncrement((float)params[0]);
  case "setIncrementType": return ((net.sf.freecol.common.model.Modifier)object).setIncrementType((net.sf.freecol.common.model.Modifier.ModifierType)params[0]);
  case "getModifierIndex": return ((net.sf.freecol.common.model.Modifier)object).getModifierIndex();
  }
  return common_model_Feature.invokeMethod(object, method, params);
}
};
names.put("common.model.Modifier", net.sf.freecol.common.model.Modifier.class);
metas.put(net.sf.freecol.common.model.Modifier.class, common_model_Modifier);
// net.sf.freecol.common.model.UnitChangeType
final Meta common_model_UnitChangeType = new Meta() {
net.sf.freecol.common.model.UnitChangeType newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.UnitChangeType((java.lang.String)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getOwnerChange": return ((net.sf.freecol.common.model.UnitChangeType)object).getOwnerChange();
  }
  return common_model_FreeColSpecObjectType.invokeMethod(object, method, params);
}
};
names.put("common.model.UnitChangeType", net.sf.freecol.common.model.UnitChangeType.class);
metas.put(net.sf.freecol.common.model.UnitChangeType.class, common_model_UnitChangeType);
// net.sf.freecol.common.model.NativeTradeItem
final Meta common_model_NativeTradeItem = new Meta() {
net.sf.freecol.common.model.NativeTradeItem newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.model.NativeTradeItem((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, net.sf.freecol.common.model.NativeTradeItem.class))
    return new net.sf.freecol.common.model.NativeTradeItem((net.sf.freecol.common.model.NativeTradeItem)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.Goods.class))
    return new net.sf.freecol.common.model.NativeTradeItem((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Player)params[1], (net.sf.freecol.common.model.Player)params[1], (net.sf.freecol.common.model.Goods)params[3]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "setPrice": ((net.sf.freecol.common.model.NativeTradeItem)object).setPrice((int)params[0]); return null;
  case "getPrice": return ((net.sf.freecol.common.model.NativeTradeItem)object).getPrice();
  case "priceIsValid": return ((net.sf.freecol.common.model.NativeTradeItem)object).priceIsValid();
  case "goodsMatcher": return ((net.sf.freecol.common.model.NativeTradeItem)object).goodsMatcher();
  case "priceIsSet": return ((net.sf.freecol.common.model.NativeTradeItem)object).priceIsSet();
  case "getHaggleCount": return ((net.sf.freecol.common.model.NativeTradeItem)object).getHaggleCount();
  case "setHaggleCount": ((net.sf.freecol.common.model.NativeTradeItem)object).setHaggleCount((int)params[0]); return null;
  }
  return common_model_GoodsTradeItem.invokeMethod(object, method, params);
}
};
names.put("common.model.NativeTradeItem", net.sf.freecol.common.model.NativeTradeItem.class);
metas.put(net.sf.freecol.common.model.NativeTradeItem.class, common_model_NativeTradeItem);
// net.sf.freecol.common.model.MarketData
final Meta common_model_MarketData = new Meta() {
net.sf.freecol.common.model.MarketData newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.GoodsType.class))
    return new net.sf.freecol.common.model.MarketData((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.GoodsType)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.MarketData((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "update": ((net.sf.freecol.common.model.MarketData)object).update(); return null;
  case "setInitialPrice": ((net.sf.freecol.common.model.MarketData)object).setInitialPrice((int)params[0]); return null;
  case "price": return ((net.sf.freecol.common.model.MarketData)object).price();
  case "getAmountInMarket": return ((net.sf.freecol.common.model.MarketData)object).getAmountInMarket();
  case "getArrears": return ((net.sf.freecol.common.model.MarketData)object).getArrears();
  case "setArrears": ((net.sf.freecol.common.model.MarketData)object).setArrears((int)params[0]); return null;
  case "getPaidForSale": return ((net.sf.freecol.common.model.MarketData)object).getPaidForSale();
  case "getSales": return ((net.sf.freecol.common.model.MarketData)object).getSales();
  case "getIncomeBeforeTaxes": return ((net.sf.freecol.common.model.MarketData)object).getIncomeBeforeTaxes();
  case "getIncomeAfterTaxes": return ((net.sf.freecol.common.model.MarketData)object).getIncomeAfterTaxes();
  case "getGoodsType": return ((net.sf.freecol.common.model.MarketData)object).getGoodsType();
  case "getInitialPrice": return ((net.sf.freecol.common.model.MarketData)object).getInitialPrice();
  case "getTraded": return ((net.sf.freecol.common.model.MarketData)object).getTraded();
  case "getCostToBuy": return ((net.sf.freecol.common.model.MarketData)object).getCostToBuy();
  case "setAmountInMarket": ((net.sf.freecol.common.model.MarketData)object).setAmountInMarket((int)params[0]); return null;
  case "setTraded": ((net.sf.freecol.common.model.MarketData)object).setTraded((boolean)params[0]); return null;
  case "setSales": ((net.sf.freecol.common.model.MarketData)object).setSales((int)params[0]); return null;
  case "setIncomeBeforeTaxes": ((net.sf.freecol.common.model.MarketData)object).setIncomeBeforeTaxes((int)params[0]); return null;
  case "setIncomeAfterTaxes": ((net.sf.freecol.common.model.MarketData)object).setIncomeAfterTaxes((int)params[0]); return null;
  case "getOldPrice": return ((net.sf.freecol.common.model.MarketData)object).getOldPrice();
  case "setOldPrice": ((net.sf.freecol.common.model.MarketData)object).setOldPrice((int)params[0]); return null;
  case "setCostToBuy": ((net.sf.freecol.common.model.MarketData)object).setCostToBuy((int)params[0]); return null;
  case "setPaidForSale": ((net.sf.freecol.common.model.MarketData)object).setPaidForSale((int)params[0]); return null;
  }
  return common_model_FreeColGameObject.invokeMethod(object, method, params);
}
};
names.put("common.model.MarketData", net.sf.freecol.common.model.MarketData.class);
metas.put(net.sf.freecol.common.model.MarketData.class, common_model_MarketData);
// net.sf.freecol.common.model.Operand
final Meta common_model_Operand = new Meta() {
net.sf.freecol.common.model.Operand newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Operand.OperandType.class, net.sf.freecol.common.model.Operand.ScopeLevel.class))
    return new net.sf.freecol.common.model.Operand((net.sf.freecol.common.model.Operand.OperandType)params[0], (net.sf.freecol.common.model.Operand.ScopeLevel)params[1]);
  if (areSame(types, int.class))
    return new net.sf.freecol.common.model.Operand((int)params[0]);
  if (types.length == 0)
    return new net.sf.freecol.common.model.Operand();
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getValue": return ((net.sf.freecol.common.model.Operand)object).getValue();
  case "setValue": ((net.sf.freecol.common.model.Operand)object).setValue((java.lang.Integer)params[0]); return null;
  case "getScopeLevel": return ((net.sf.freecol.common.model.Operand)object).getScopeLevel();
  case "getOperandType": return ((net.sf.freecol.common.model.Operand)object).getOperandType();
  case "setOperandType": ((net.sf.freecol.common.model.Operand)object).setOperandType((net.sf.freecol.common.model.Operand.OperandType)params[0]); return null;
  case "setScopeLevel": ((net.sf.freecol.common.model.Operand)object).setScopeLevel((net.sf.freecol.common.model.Operand.ScopeLevel)params[0]); return null;
  }
  return common_model_Scope.invokeMethod(object, method, params);
}
};
names.put("common.model.Operand", net.sf.freecol.common.model.Operand.class);
metas.put(net.sf.freecol.common.model.Operand.class, common_model_Operand);
// net.sf.freecol.common.model.TileImprovementType
final Meta common_model_TileImprovementType = new Meta() {
net.sf.freecol.common.model.TileImprovementType newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.TileImprovementType((java.lang.String)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getDisasterChoices": return ((net.sf.freecol.common.model.TileImprovementType)object).getDisasterChoices();
  case "getMoveCost": return ((net.sf.freecol.common.model.TileImprovementType)object).getMoveCost();
  case "isNatural": return ((net.sf.freecol.common.model.TileImprovementType)object).isNatural();
  case "isChangeType": return ((net.sf.freecol.common.model.TileImprovementType)object).isChangeType();
  case "getAddWorkTurns": return ((net.sf.freecol.common.model.TileImprovementType)object).getAddWorkTurns();
  case "getRequiredImprovementType": return ((net.sf.freecol.common.model.TileImprovementType)object).getRequiredImprovementType();
  case "getExposeResourcePercent": return ((net.sf.freecol.common.model.TileImprovementType)object).getExposeResourcePercent();
  case "getExpendedAmount": return ((net.sf.freecol.common.model.TileImprovementType)object).getExpendedAmount();
  case "getMagnitude": return ((net.sf.freecol.common.model.TileImprovementType)object).getMagnitude();
  case "getRequiredRole": return ((net.sf.freecol.common.model.TileImprovementType)object).getRequiredRole();
  case "getZIndex": return ((net.sf.freecol.common.model.TileImprovementType)object).getZIndex();
  case "setZIndex": ((net.sf.freecol.common.model.TileImprovementType)object).setZIndex((int)params[0]); return null;
  }
  return common_model_FreeColSpecObjectType.invokeMethod(object, method, params);
}
};
names.put("common.model.TileImprovementType", net.sf.freecol.common.model.TileImprovementType.class);
metas.put(net.sf.freecol.common.model.TileImprovementType.class, common_model_TileImprovementType);
// net.sf.freecol.common.model.Region
final Meta common_model_Region = new Meta() {
net.sf.freecol.common.model.Region newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class))
    return new net.sf.freecol.common.model.Region((net.sf.freecol.common.model.Game)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.Region((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "isLeaf": return ((net.sf.freecol.common.model.Region)object).isLeaf();
  case "getChildren": return ((net.sf.freecol.common.model.Region)object).getChildren();
  case "getName": return ((net.sf.freecol.common.model.Region)object).getName();
  case "getKey": return ((net.sf.freecol.common.model.Region)object).getKey();
  case "getParent": return ((net.sf.freecol.common.model.Region)object).getParent();
  case "setName": ((net.sf.freecol.common.model.Region)object).setName((java.lang.String)params[0]); return null;
  case "getType": return ((net.sf.freecol.common.model.Region)object).getType();
  case "setParent": ((net.sf.freecol.common.model.Region)object).setParent((net.sf.freecol.common.model.Region)params[0]); return null;
  case "hasName": return ((net.sf.freecol.common.model.Region)object).hasName();
  case "setChildren": ((net.sf.freecol.common.model.Region)object).setChildren((java.util.List)params[0]); return null;
  case "getLabel": return ((net.sf.freecol.common.model.Region)object).getLabel();
  case "getScoreValue": return ((net.sf.freecol.common.model.Region)object).getScoreValue();
  case "getDiscoverableRegion": return ((net.sf.freecol.common.model.Region)object).getDiscoverableRegion();
  case "isPacific": return ((net.sf.freecol.common.model.Region)object).isPacific();
  case "getDiscoverer": return ((net.sf.freecol.common.model.Region)object).getDiscoverer();
  case "getClaimable": return ((net.sf.freecol.common.model.Region)object).getClaimable();
  case "setClaimable": ((net.sf.freecol.common.model.Region)object).setClaimable((boolean)params[0]); return null;
  case "getDiscoverable": return ((net.sf.freecol.common.model.Region)object).getDiscoverable();
  case "setDiscoverable": ((net.sf.freecol.common.model.Region)object).setDiscoverable((boolean)params[0]); return null;
  case "getDiscoveredIn": return ((net.sf.freecol.common.model.Region)object).getDiscoveredIn();
  case "setDiscoveredIn": ((net.sf.freecol.common.model.Region)object).setDiscoveredIn((net.sf.freecol.common.model.Turn)params[0]); return null;
  case "getDiscoveredBy": return ((net.sf.freecol.common.model.Region)object).getDiscoveredBy();
  case "setDiscoveredBy": ((net.sf.freecol.common.model.Region)object).setDiscoveredBy((net.sf.freecol.common.model.Player)params[0]); return null;
  case "setScoreValue": ((net.sf.freecol.common.model.Region)object).setScoreValue((int)params[0]); return null;
  }
  return common_model_FreeColGameObject.invokeMethod(object, method, params);
}
};
names.put("common.model.Region", net.sf.freecol.common.model.Region.class);
metas.put(net.sf.freecol.common.model.Region.class, common_model_Region);
// net.sf.freecol.common.model.Unit
final Meta common_model_Unit = new Meta() {
net.sf.freecol.common.model.Unit newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.Unit((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "setOwner": ((net.sf.freecol.common.model.Unit)object).setOwner((net.sf.freecol.common.model.Player)params[0]); return null;
  case "setState": ((net.sf.freecol.common.model.Unit)object).setState((net.sf.freecol.common.model.Unit.UnitState)params[0]); return null;
  case "getName": return ((net.sf.freecol.common.model.Unit)object).getName();
  case "getLocation": return ((net.sf.freecol.common.model.Unit)object).getLocation();
  case "getPriority": return ((net.sf.freecol.common.model.Unit)object).getPriority();
  case "setName": ((net.sf.freecol.common.model.Unit)object).setName((java.lang.String)params[0]); return null;
  case "getState": return ((net.sf.freecol.common.model.Unit)object).getState();
  case "getType": return ((net.sf.freecol.common.model.Unit)object).getType();
  case "getOwner": return ((net.sf.freecol.common.model.Unit)object).getOwner();
  case "setType": ((net.sf.freecol.common.model.Unit)object).setType((net.sf.freecol.common.model.UnitType)params[0]); return null;
  case "isUndead": return ((net.sf.freecol.common.model.Unit)object).isUndead();
  case "isCarrier": return ((net.sf.freecol.common.model.Unit)object).isCarrier();
  case "hasGoodsCargo": return ((net.sf.freecol.common.model.Unit)object).hasGoodsCargo();
  case "isColonist": return ((net.sf.freecol.common.model.Unit)object).isColonist();
  case "isOffensiveUnit": return ((net.sf.freecol.common.model.Unit)object).isOffensiveUnit();
  case "getCarrier": return ((net.sf.freecol.common.model.Unit)object).getCarrier();
  case "hasTile": return ((net.sf.freecol.common.model.Unit)object).hasTile();
  case "isInMission": return ((net.sf.freecol.common.model.Unit)object).isInMission();
  case "isNaval": return ((net.sf.freecol.common.model.Unit)object).isNaval();
  case "isOnTile": return ((net.sf.freecol.common.model.Unit)object).isOnTile();
  case "getVisibleTileSet": return ((net.sf.freecol.common.model.Unit)object).getVisibleTileSet();
  case "getSpaceLeft": return ((net.sf.freecol.common.model.Unit)object).getSpaceLeft();
  case "getRole": return ((net.sf.freecol.common.model.Unit)object).getRole();
  case "setLocation": return ((net.sf.freecol.common.model.Unit)object).setLocation((net.sf.freecol.common.model.Location)params[0]);
  case "getLabel": return ((net.sf.freecol.common.model.Unit)object).getLabel();
  case "getRepairLocation": return ((net.sf.freecol.common.model.Unit)object).getRepairLocation();
  case "getLineOfSight": return ((net.sf.freecol.common.model.Unit)object).getLineOfSight();
  case "getInitialMovesLeft": return ((net.sf.freecol.common.model.Unit)object).getInitialMovesLeft();
  case "setMovesLeft": ((net.sf.freecol.common.model.Unit)object).setMovesLeft((int)params[0]); return null;
  case "getMovesLeft": return ((net.sf.freecol.common.model.Unit)object).getMovesLeft();
  case "isMounted": return ((net.sf.freecol.common.model.Unit)object).isMounted();
  case "getApparentOwnerName": return ((net.sf.freecol.common.model.Unit)object).getApparentOwnerName();
  case "getHomeIndianSettlement": return ((net.sf.freecol.common.model.Unit)object).getHomeIndianSettlement();
  case "getAutomaticRole": return ((net.sf.freecol.common.model.Unit)object).getAutomaticRole();
  case "setTreasureAmount": ((net.sf.freecol.common.model.Unit)object).setTreasureAmount((int)params[0]); return null;
  case "hasSpaceLeft": return ((net.sf.freecol.common.model.Unit)object).hasSpaceLeft();
  case "isArmed": return ((net.sf.freecol.common.model.Unit)object).isArmed();
  case "setTradeRoute": ((net.sf.freecol.common.model.Unit)object).setTradeRoute((net.sf.freecol.common.model.TradeRoute)params[0]); return null;
  case "isInColony": return ((net.sf.freecol.common.model.Unit)object).isInColony();
  case "setLocationNoUpdate": ((net.sf.freecol.common.model.Unit)object).setLocationNoUpdate((net.sf.freecol.common.model.Location)params[0]); return null;
  case "isDamaged": return ((net.sf.freecol.common.model.Unit)object).isDamaged();
  case "getScoreValue": return ((net.sf.freecol.common.model.Unit)object).getScoreValue();
  case "isInEurope": return ((net.sf.freecol.common.model.Unit)object).isInEurope();
  case "getTradeRoute": return ((net.sf.freecol.common.model.Unit)object).getTradeRoute();
  case "getTradeLocation": return ((net.sf.freecol.common.model.Unit)object).getTradeLocation();
  case "getDestination": return ((net.sf.freecol.common.model.Unit)object).getDestination();
  case "setDestination": ((net.sf.freecol.common.model.Unit)object).setDestination((net.sf.freecol.common.model.Location)params[0]); return null;
  case "isAtSea": return ((net.sf.freecol.common.model.Unit)object).isAtSea();
  case "getStop": return ((net.sf.freecol.common.model.Unit)object).getStop();
  case "getSailTurns": return ((net.sf.freecol.common.model.Unit)object).getSailTurns();
  case "canCarryUnits": return ((net.sf.freecol.common.model.Unit)object).canCarryUnits();
  case "getCurrentStops": return ((net.sf.freecol.common.model.Unit)object).getCurrentStops();
  case "setCurrentStop": ((net.sf.freecol.common.model.Unit)object).setCurrentStop((int)params[0]); return null;
  case "getTeacher": return ((net.sf.freecol.common.model.Unit)object).getTeacher();
  case "canBuildColony": return ((net.sf.freecol.common.model.Unit)object).canBuildColony();
  case "isOwnerHidden": return ((net.sf.freecol.common.model.Unit)object).isOwnerHidden();
  case "getWorkImprovement": return ((net.sf.freecol.common.model.Unit)object).getWorkImprovement();
  case "getWorkType": return ((net.sf.freecol.common.model.Unit)object).getWorkType();
  case "canCarryTreasure": return ((net.sf.freecol.common.model.Unit)object).canCarryTreasure();
  case "canCashInTreasureTrain": return ((net.sf.freecol.common.model.Unit)object).canCashInTreasureTrain();
  case "getTransportFee": return ((net.sf.freecol.common.model.Unit)object).getTransportFee();
  case "getWorkTurnsLeft": return ((net.sf.freecol.common.model.Unit)object).getWorkTurnsLeft();
  case "getRoleCount": return ((net.sf.freecol.common.model.Unit)object).getRoleCount();
  case "getStudent": return ((net.sf.freecol.common.model.Unit)object).getStudent();
  case "getWorkTile": return ((net.sf.freecol.common.model.Unit)object).getWorkTile();
  case "isReadyToTrade": return ((net.sf.freecol.common.model.Unit)object).isReadyToTrade();
  case "getDescription": return ((net.sf.freecol.common.model.Unit)object).getDescription();
  case "isOnCarrier": return ((net.sf.freecol.common.model.Unit)object).isOnCarrier();
  case "couldMove": return ((net.sf.freecol.common.model.Unit)object).couldMove();
  case "goingToDestination": return ((net.sf.freecol.common.model.Unit)object).goingToDestination();
  case "setAttrition": ((net.sf.freecol.common.model.Unit)object).setAttrition((int)params[0]); return null;
  case "getVisibleGoodsCount": return ((net.sf.freecol.common.model.Unit)object).getVisibleGoodsCount();
  case "getGoodsSpaceTaken": return ((net.sf.freecol.common.model.Unit)object).getGoodsSpaceTaken();
  case "losingEquipmentKillsUnit": return ((net.sf.freecol.common.model.Unit)object).losingEquipmentKillsUnit();
  case "losingEquipmentDemotesUnit": return ((net.sf.freecol.common.model.Unit)object).losingEquipmentDemotesUnit();
  case "isBeached": return ((net.sf.freecol.common.model.Unit)object).isBeached();
  case "getMovesAsString": return ((net.sf.freecol.common.model.Unit)object).getMovesAsString();
  case "resolveDestination": return ((net.sf.freecol.common.model.Unit)object).resolveDestination();
  case "followingTradeRoute": return ((net.sf.freecol.common.model.Unit)object).followingTradeRoute();
  case "getPathStartLocation": return ((net.sf.freecol.common.model.Unit)object).getPathStartLocation();
  case "getTrivialPath": return ((net.sf.freecol.common.model.Unit)object).getTrivialPath();
  case "findOurNearestSettlement": return ((net.sf.freecol.common.model.Unit)object).findOurNearestSettlement();
  case "findOurNearestPort": return ((net.sf.freecol.common.model.Unit)object).findOurNearestPort();
  case "findOurNearestOtherSettlement": return ((net.sf.freecol.common.model.Unit)object).findOurNearestOtherSettlement();
  case "getCargoCapacity": return ((net.sf.freecol.common.model.Unit)object).getCargoCapacity();
  case "getCargoSpaceTaken": return ((net.sf.freecol.common.model.Unit)object).getCargoSpaceTaken();
  case "getUnitSpaceTaken": return ((net.sf.freecol.common.model.Unit)object).getUnitSpaceTaken();
  case "hasCargo": return ((net.sf.freecol.common.model.Unit)object).hasCargo();
  case "getConvertProbability": return ((net.sf.freecol.common.model.Unit)object).getConvertProbability();
  case "getBurnProbability": return ((net.sf.freecol.common.model.Unit)object).getBurnProbability();
  case "getPioneerScore": return ((net.sf.freecol.common.model.Unit)object).getPioneerScore();
  case "getScoutScore": return ((net.sf.freecol.common.model.Unit)object).getScoutScore();
  case "getConsumedGoods": return ((net.sf.freecol.common.model.Unit)object).getConsumedGoods();
  case "getExperienceType": return ((net.sf.freecol.common.model.Unit)object).getExperienceType();
  case "getFullEntryLocation": return ((net.sf.freecol.common.model.Unit)object).getFullEntryLocation();
  case "setWorkLeft": ((net.sf.freecol.common.model.Unit)object).setWorkLeft((int)params[0]); return null;
  case "setStudent": ((net.sf.freecol.common.model.Unit)object).setStudent((net.sf.freecol.common.model.Unit)params[0]); return null;
  case "setTeacher": ((net.sf.freecol.common.model.Unit)object).setTeacher((net.sf.freecol.common.model.Unit)params[0]); return null;
  case "getTreasureAmount": return ((net.sf.freecol.common.model.Unit)object).getTreasureAmount();
  case "setWorkImprovement": ((net.sf.freecol.common.model.Unit)object).setWorkImprovement((net.sf.freecol.common.model.TileImprovement)params[0]); return null;
  case "setExperience": ((net.sf.freecol.common.model.Unit)object).setExperience((int)params[0]); return null;
  case "canMoveToHighSeas": return ((net.sf.freecol.common.model.Unit)object).canMoveToHighSeas();
  case "getWorkLeft": return ((net.sf.freecol.common.model.Unit)object).getWorkLeft();
  case "setEntryLocation": ((net.sf.freecol.common.model.Unit)object).setEntryLocation((net.sf.freecol.common.model.Location)params[0]); return null;
  case "hasDefaultRole": return ((net.sf.freecol.common.model.Unit)object).hasDefaultRole();
  case "getWorkLocation": return ((net.sf.freecol.common.model.Unit)object).getWorkLocation();
  case "setTurnsOfTraining": ((net.sf.freecol.common.model.Unit)object).setTurnsOfTraining((int)params[0]); return null;
  case "canCarryGoods": return ((net.sf.freecol.common.model.Unit)object).canCarryGoods();
  case "isDefensiveUnit": return ((net.sf.freecol.common.model.Unit)object).isDefensiveUnit();
  case "getSkillLevel": return ((net.sf.freecol.common.model.Unit)object).getSkillLevel();
  case "isPerson": return ((net.sf.freecol.common.model.Unit)object).isPerson();
  case "setNationality": ((net.sf.freecol.common.model.Unit)object).setNationality((java.lang.String)params[0]); return null;
  case "setEthnicity": ((net.sf.freecol.common.model.Unit)object).setEthnicity((java.lang.String)params[0]); return null;
  case "getDestinationLabel": return ((net.sf.freecol.common.model.Unit)object).getDestinationLabel();
  case "getRepairLabel": return ((net.sf.freecol.common.model.Unit)object).getRepairLabel();
  case "getTurnsForRepair": return ((net.sf.freecol.common.model.Unit)object).getTurnsForRepair();
  case "getHitPoints": return ((net.sf.freecol.common.model.Unit)object).getHitPoints();
  case "canCaptureGoods": return ((net.sf.freecol.common.model.Unit)object).canCaptureGoods();
  case "isTradingUnit": return ((net.sf.freecol.common.model.Unit)object).isTradingUnit();
  case "setStateToAllChildren": ((net.sf.freecol.common.model.Unit)object).setStateToAllChildren((net.sf.freecol.common.model.Unit.UnitState)params[0]); return null;
  case "setRole": ((net.sf.freecol.common.model.Unit)object).setRole((net.sf.freecol.common.model.Role)params[0]); return null;
  case "setRoleCount": ((net.sf.freecol.common.model.Unit)object).setRoleCount((int)params[0]); return null;
  case "getRoleSuffix": return ((net.sf.freecol.common.model.Unit)object).getRoleSuffix();
  case "getMilitaryRole": return ((net.sf.freecol.common.model.Unit)object).getMilitaryRole();
  case "getEntryLocation": return ((net.sf.freecol.common.model.Unit)object).getEntryLocation();
  case "setWorkType": ((net.sf.freecol.common.model.Unit)object).setWorkType((net.sf.freecol.common.model.GoodsType)params[0]); return null;
  case "getExperience": return ((net.sf.freecol.common.model.Unit)object).getExperience();
  case "getTurnsOfTraining": return ((net.sf.freecol.common.model.Unit)object).getTurnsOfTraining();
  case "getNeededTurnsOfTraining": return ((net.sf.freecol.common.model.Unit)object).getNeededTurnsOfTraining();
  case "getNationality": return ((net.sf.freecol.common.model.Unit)object).getNationality();
  case "getEthnicity": return ((net.sf.freecol.common.model.Unit)object).getEthnicity();
  case "hasNativeEthnicity": return ((net.sf.freecol.common.model.Unit)object).hasNativeEthnicity();
  case "setHomeIndianSettlement": ((net.sf.freecol.common.model.Unit)object).setHomeIndianSettlement((net.sf.freecol.common.model.IndianSettlement)params[0]); return null;
  case "setHitPoints": ((net.sf.freecol.common.model.Unit)object).setHitPoints((int)params[0]); return null;
  case "getCurrentStop": return ((net.sf.freecol.common.model.Unit)object).getCurrentStop();
  case "getAttrition": return ((net.sf.freecol.common.model.Unit)object).getAttrition();
  }
  return common_model_GoodsLocation.invokeMethod(object, method, params);
}
};
names.put("common.model.Unit", net.sf.freecol.common.model.Unit.class);
metas.put(net.sf.freecol.common.model.Unit.class, common_model_Unit);
// net.sf.freecol.common.model.DiplomaticTrade
final Meta common_model_DiplomaticTrade = new Meta() {
net.sf.freecol.common.model.DiplomaticTrade newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.DiplomaticTrade((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.DiplomaticTrade.TradeContext.class, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.Player.class, java.util.List.class, int.class))
    return new net.sf.freecol.common.model.DiplomaticTrade((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.DiplomaticTrade.TradeContext)params[1], (net.sf.freecol.common.model.Player)params[2], (net.sf.freecol.common.model.Player)params[2], (java.util.List)params[4], (int)params[5]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getVersion": return ((net.sf.freecol.common.model.DiplomaticTrade)object).getVersion();
  case "clear": ((net.sf.freecol.common.model.DiplomaticTrade)object).clear(); return null;
  case "isEmpty": return ((net.sf.freecol.common.model.DiplomaticTrade)object).isEmpty();
  case "getContext": return ((net.sf.freecol.common.model.DiplomaticTrade)object).getContext();
  case "getStance": return ((net.sf.freecol.common.model.DiplomaticTrade)object).getStance();
  case "getStatus": return ((net.sf.freecol.common.model.DiplomaticTrade)object).getStatus();
  case "setStatus": ((net.sf.freecol.common.model.DiplomaticTrade)object).setStatus((net.sf.freecol.common.model.DiplomaticTrade.TradeStatus)params[0]); return null;
  case "incrementVersion": ((net.sf.freecol.common.model.DiplomaticTrade)object).incrementVersion(); return null;
  case "getSender": return ((net.sf.freecol.common.model.DiplomaticTrade)object).getSender();
  case "getRecipient": return ((net.sf.freecol.common.model.DiplomaticTrade)object).getRecipient();
  case "getItems": return ((net.sf.freecol.common.model.DiplomaticTrade)object).getItems();
  case "getVictim": return ((net.sf.freecol.common.model.DiplomaticTrade)object).getVictim();
  case "setSender": ((net.sf.freecol.common.model.DiplomaticTrade)object).setSender((net.sf.freecol.common.model.Player)params[0]); return null;
  case "setRecipient": ((net.sf.freecol.common.model.DiplomaticTrade)object).setRecipient((net.sf.freecol.common.model.Player)params[0]); return null;
  }
  return common_model_FreeColGameObject.invokeMethod(object, method, params);
}
};
names.put("common.model.DiplomaticTrade", net.sf.freecol.common.model.DiplomaticTrade.class);
metas.put(net.sf.freecol.common.model.DiplomaticTrade.class, common_model_DiplomaticTrade);
// net.sf.freecol.common.model.AbstractUnit
final Meta common_model_AbstractUnit = new Meta() {
net.sf.freecol.common.model.AbstractUnit newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (types.length == 0)
    return new net.sf.freecol.common.model.AbstractUnit();
  if (areSame(types, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.model.AbstractUnit((net.sf.freecol.common.io.FreeColXMLReader)params[0]);
  if (areSame(types, net.sf.freecol.common.model.UnitType.class, java.lang.String.class, int.class))
    return new net.sf.freecol.common.model.AbstractUnit((net.sf.freecol.common.model.UnitType)params[0], (java.lang.String)params[1], (int)params[2]);
  if (areSame(types, java.lang.String.class, java.lang.String.class, int.class))
    return new net.sf.freecol.common.model.AbstractUnit((java.lang.String)params[0], (java.lang.String)params[0], (int)params[2]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getNumber": return ((net.sf.freecol.common.model.AbstractUnit)object).getNumber();
  case "getLabel": return ((net.sf.freecol.common.model.AbstractUnit)object).getLabel();
  case "getDescription": return ((net.sf.freecol.common.model.AbstractUnit)object).getDescription();
  case "setNumber": ((net.sf.freecol.common.model.AbstractUnit)object).setNumber((int)params[0]); return null;
  case "getRoleId": return ((net.sf.freecol.common.model.AbstractUnit)object).getRoleId();
  case "setRoleId": ((net.sf.freecol.common.model.AbstractUnit)object).setRoleId((java.lang.String)params[0]); return null;
  case "getSingleLabel": return ((net.sf.freecol.common.model.AbstractUnit)object).getSingleLabel();
  }
  return common_model_FreeColObject.invokeMethod(object, method, params);
}
};
names.put("common.model.AbstractUnit", net.sf.freecol.common.model.AbstractUnit.class);
metas.put(net.sf.freecol.common.model.AbstractUnit.class, common_model_AbstractUnit);
// net.sf.freecol.common.model.NationType
final Meta common_model_NationType = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "isEuropean": return ((net.sf.freecol.common.model.NationType)object).isEuropean();
  case "isIndian": return ((net.sf.freecol.common.model.NationType)object).isIndian();
  case "isREF": return ((net.sf.freecol.common.model.NationType)object).isREF();
  case "getNumberOfSettlements": return ((net.sf.freecol.common.model.NationType)object).getNumberOfSettlements();
  case "getSettlementTypes": return ((net.sf.freecol.common.model.NationType)object).getSettlementTypes();
  case "setSettlementTypes": ((net.sf.freecol.common.model.NationType)object).setSettlementTypes((java.util.List)params[0]); return null;
  case "getCapitalType": return ((net.sf.freecol.common.model.NationType)object).getCapitalType();
  case "getAggression": return ((net.sf.freecol.common.model.NationType)object).getAggression();
  }
  return common_model_FreeColSpecObjectType.invokeMethod(object, method, params);
}
};
names.put("common.model.NationType", net.sf.freecol.common.model.NationType.class);
metas.put(net.sf.freecol.common.model.NationType.class, common_model_NationType);
// net.sf.freecol.common.model.IndianNationType
final Meta common_model_IndianNationType = new Meta() {
net.sf.freecol.common.model.IndianNationType newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.IndianNationType((java.lang.String)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getRegions": return ((net.sf.freecol.common.model.IndianNationType)object).getRegions();
  case "getSkills": return ((net.sf.freecol.common.model.IndianNationType)object).getSkills();
  }
  return common_model_NationType.invokeMethod(object, method, params);
}
};
names.put("common.model.IndianNationType", net.sf.freecol.common.model.IndianNationType.class);
metas.put(net.sf.freecol.common.model.IndianNationType.class, common_model_IndianNationType);
// net.sf.freecol.common.model.InciteTradeItem
final Meta common_model_InciteTradeItem = new Meta() {
net.sf.freecol.common.model.InciteTradeItem newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.model.InciteTradeItem((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.Player.class))
    return new net.sf.freecol.common.model.InciteTradeItem((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Player)params[1], (net.sf.freecol.common.model.Player)params[1], (net.sf.freecol.common.model.Player)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_model_TradeItem.invokeMethod(object, method, params);
}
};
names.put("common.model.InciteTradeItem", net.sf.freecol.common.model.InciteTradeItem.class);
metas.put(net.sf.freecol.common.model.InciteTradeItem.class, common_model_InciteTradeItem);
// net.sf.freecol.common.model.EuropeanNationType
final Meta common_model_EuropeanNationType = new Meta() {
net.sf.freecol.common.model.EuropeanNationType newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.EuropeanNationType((java.lang.String)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getStartingUnits": return ((net.sf.freecol.common.model.EuropeanNationType)object).getStartingUnits();
  }
  return common_model_NationType.invokeMethod(object, method, params);
}
};
names.put("common.model.EuropeanNationType", net.sf.freecol.common.model.EuropeanNationType.class);
metas.put(net.sf.freecol.common.model.EuropeanNationType.class, common_model_EuropeanNationType);
// net.sf.freecol.common.model.GoldTradeItem
final Meta common_model_GoldTradeItem = new Meta() {
net.sf.freecol.common.model.GoldTradeItem newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.model.GoldTradeItem((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.Player.class, int.class))
    return new net.sf.freecol.common.model.GoldTradeItem((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Player)params[1], (net.sf.freecol.common.model.Player)params[1], (int)params[3]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_model_TradeItem.invokeMethod(object, method, params);
}
};
names.put("common.model.GoldTradeItem", net.sf.freecol.common.model.GoldTradeItem.class);
metas.put(net.sf.freecol.common.model.GoldTradeItem.class, common_model_GoldTradeItem);
// net.sf.freecol.common.model.TradeRouteStop
final Meta common_model_TradeRouteStop = new Meta() {
net.sf.freecol.common.model.TradeRouteStop newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.TradeRouteStop.class))
    return new net.sf.freecol.common.model.TradeRouteStop((net.sf.freecol.common.model.TradeRouteStop)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.model.TradeRouteStop((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Location.class))
    return new net.sf.freecol.common.model.TradeRouteStop((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Location)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class))
    return new net.sf.freecol.common.model.TradeRouteStop((net.sf.freecol.common.model.Game)params[0]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getLocation": return ((net.sf.freecol.common.model.TradeRouteStop)object).getLocation();
  case "getTradeLocation": return ((net.sf.freecol.common.model.TradeRouteStop)object).getTradeLocation();
  case "getCompactCargo": return ((net.sf.freecol.common.model.TradeRouteStop)object).getCompactCargo();
  case "getCargo": return ((net.sf.freecol.common.model.TradeRouteStop)object).getCargo();
  case "setCargo": ((net.sf.freecol.common.model.TradeRouteStop)object).setCargo((java.util.List)params[0]); return null;
  }
  return common_model_FreeColGameObject.invokeMethod(object, method, params);
}
};
names.put("common.model.TradeRouteStop", net.sf.freecol.common.model.TradeRouteStop.class);
metas.put(net.sf.freecol.common.model.TradeRouteStop.class, common_model_TradeRouteStop);
// net.sf.freecol.common.model.TileItemContainer
final Meta common_model_TileItemContainer = new Meta() {
net.sf.freecol.common.model.TileItemContainer newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Tile.class))
    return new net.sf.freecol.common.model.TileItemContainer((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Tile)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.TileItemContainer((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getResource": return ((net.sf.freecol.common.model.TileItemContainer)object).getResource();
  case "getTile": return ((net.sf.freecol.common.model.TileItemContainer)object).getTile();
  case "getLostCityRumour": return ((net.sf.freecol.common.model.TileItemContainer)object).getLostCityRumour();
  case "getCompleteItems": return ((net.sf.freecol.common.model.TileItemContainer)object).getCompleteItems();
  case "getImprovements": return ((net.sf.freecol.common.model.TileItemContainer)object).getImprovements();
  case "getCompleteImprovements": return ((net.sf.freecol.common.model.TileItemContainer)object).getCompleteImprovements();
  case "getRiver": return ((net.sf.freecol.common.model.TileItemContainer)object).getRiver();
  case "removeIncompatibleImprovements": ((net.sf.freecol.common.model.TileItemContainer)object).removeIncompatibleImprovements(); return null;
  case "getRoad": return ((net.sf.freecol.common.model.TileItemContainer)object).getRoad();
  case "setTileItems": ((net.sf.freecol.common.model.TileItemContainer)object).setTileItems((java.util.List)params[0]); return null;
  }
  return common_model_FreeColGameObject.invokeMethod(object, method, params);
}
};
names.put("common.model.TileItemContainer", net.sf.freecol.common.model.TileItemContainer.class);
metas.put(net.sf.freecol.common.model.TileItemContainer.class, common_model_TileItemContainer);
// net.sf.freecol.common.model.ResourceType
final Meta common_model_ResourceType = new Meta() {
net.sf.freecol.common.model.ResourceType newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.ResourceType((java.lang.String)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getMinValue": return ((net.sf.freecol.common.model.ResourceType)object).getMinValue();
  case "getMaxValue": return ((net.sf.freecol.common.model.ResourceType)object).getMaxValue();
  case "getBestGoodsType": return ((net.sf.freecol.common.model.ResourceType)object).getBestGoodsType();
  }
  return common_model_FreeColSpecObjectType.invokeMethod(object, method, params);
}
};
names.put("common.model.ResourceType", net.sf.freecol.common.model.ResourceType.class);
metas.put(net.sf.freecol.common.model.ResourceType.class, common_model_ResourceType);
// net.sf.freecol.common.model.FoundingFather
final Meta common_model_FoundingFather = new Meta() {
net.sf.freecol.common.model.FoundingFather newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.FoundingFather((java.lang.String)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getType": return ((net.sf.freecol.common.model.FoundingFather)object).getType();
  case "setType": ((net.sf.freecol.common.model.FoundingFather)object).setType((net.sf.freecol.common.model.FoundingFather.FoundingFatherType)params[0]); return null;
  case "getUnitList": return ((net.sf.freecol.common.model.FoundingFather)object).getUnitList();
  case "getEvents": return ((net.sf.freecol.common.model.FoundingFather)object).getEvents();
  case "getTypeKey": return ((net.sf.freecol.common.model.FoundingFather)object).getTypeKey();
  case "setEvents": ((net.sf.freecol.common.model.FoundingFather)object).setEvents((java.util.List)params[0]); return null;
  case "setUnits": ((net.sf.freecol.common.model.FoundingFather)object).setUnits((java.util.List)params[0]); return null;
  }
  return common_model_FreeColSpecObjectType.invokeMethod(object, method, params);
}
};
names.put("common.model.FoundingFather", net.sf.freecol.common.model.FoundingFather.class);
metas.put(net.sf.freecol.common.model.FoundingFather.class, common_model_FoundingFather);
// net.sf.freecol.common.model.HighScore
final Meta common_model_HighScore = new Meta() {
net.sf.freecol.common.model.HighScore newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Player.class))
    return new net.sf.freecol.common.model.HighScore((net.sf.freecol.common.model.Player)params[0]);
  if (types.length == 0)
    return new net.sf.freecol.common.model.HighScore();
  if (areSame(types, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.model.HighScore((net.sf.freecol.common.io.FreeColXMLReader)params[0]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getLevel": return ((net.sf.freecol.common.model.HighScore)object).getLevel();
  case "getDate": return ((net.sf.freecol.common.model.HighScore)object).getDate();
  case "getNationId": return ((net.sf.freecol.common.model.HighScore)object).getNationId();
  case "getUnitCount": return ((net.sf.freecol.common.model.HighScore)object).getUnitCount();
  case "getScore": return ((net.sf.freecol.common.model.HighScore)object).getScore();
  case "getNewLandName": return ((net.sf.freecol.common.model.HighScore)object).getNewLandName();
  case "loadHighScores": return ((net.sf.freecol.common.model.HighScore)object).loadHighScores();
  case "getIndependenceTurn": return ((net.sf.freecol.common.model.HighScore)object).getIndependenceTurn();
  case "getRetirementTurn": return ((net.sf.freecol.common.model.HighScore)object).getRetirementTurn();
  case "getPlayerName": return ((net.sf.freecol.common.model.HighScore)object).getPlayerName();
  case "getNationTypeId": return ((net.sf.freecol.common.model.HighScore)object).getNationTypeId();
  case "getGameUUID": return ((net.sf.freecol.common.model.HighScore)object).getGameUUID();
  case "getOldNationNameKey": return ((net.sf.freecol.common.model.HighScore)object).getOldNationNameKey();
  case "getNationName": return ((net.sf.freecol.common.model.HighScore)object).getNationName();
  case "getDifficulty": return ((net.sf.freecol.common.model.HighScore)object).getDifficulty();
  case "getColonyCount": return ((net.sf.freecol.common.model.HighScore)object).getColonyCount();
  case "getDateString": return ((net.sf.freecol.common.model.HighScore)object).getDateString();
  }
  return common_model_FreeColObject.invokeMethod(object, method, params);
}
};
names.put("common.model.HighScore", net.sf.freecol.common.model.HighScore.class);
metas.put(net.sf.freecol.common.model.HighScore.class, common_model_HighScore);
// net.sf.freecol.common.model.UnitTypeChange
final Meta common_model_UnitTypeChange = new Meta() {
net.sf.freecol.common.model.UnitTypeChange newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.UnitTypeChange((java.lang.String)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  if (areSame(types, net.sf.freecol.common.io.FreeColXMLReader.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.UnitTypeChange((net.sf.freecol.common.io.FreeColXMLReader)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_model_FreeColSpecObjectType.invokeMethod(object, method, params);
}
};
names.put("common.model.UnitTypeChange", net.sf.freecol.common.model.UnitTypeChange.class);
metas.put(net.sf.freecol.common.model.UnitTypeChange.class, common_model_UnitTypeChange);
// net.sf.freecol.common.model.Map
final Meta common_model_Map = new Meta() {
net.sf.freecol.common.model.Map newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.Map((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, int.class, int.class))
    return new net.sf.freecol.common.model.Map((net.sf.freecol.common.model.Game)params[0], (int)params[1], (int)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.model.Map((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "up": return ((net.sf.freecol.common.model.Map)object).up();
  case "getUnits": return ((net.sf.freecol.common.model.Map)object).getUnits();
  case "getLayer": return ((net.sf.freecol.common.model.Map)object).getLayer();
  case "toShortString": return ((net.sf.freecol.common.model.Map)object).toShortString();
  case "getUnitCount": return ((net.sf.freecol.common.model.Map)object).getUnitCount();
  case "getWidth": return ((net.sf.freecol.common.model.Map)object).getWidth();
  case "getHeight": return ((net.sf.freecol.common.model.Map)object).getHeight();
  case "resetContiguity": ((net.sf.freecol.common.model.Map)object).resetContiguity(); return null;
  case "getTile": return ((net.sf.freecol.common.model.Map)object).getTile();
  case "getColony": return ((net.sf.freecol.common.model.Map)object).getColony();
  case "getUnitList": return ((net.sf.freecol.common.model.Map)object).getUnitList();
  case "getSettlement": return ((net.sf.freecol.common.model.Map)object).getSettlement();
  case "getGoodsContainer": return ((net.sf.freecol.common.model.Map)object).getGoodsContainer();
  case "getLocationLabel": return ((net.sf.freecol.common.model.Map)object).getLocationLabel();
  case "getIndianSettlement": return ((net.sf.freecol.common.model.Map)object).getIndianSettlement();
  case "getRank": return ((net.sf.freecol.common.model.Map)object).getRank();
  case "setLayer": ((net.sf.freecol.common.model.Map)object).setLayer((net.sf.freecol.common.model.Map.Layer)params[0]); return null;
  case "getMinimumLatitude": return ((net.sf.freecol.common.model.Map)object).getMinimumLatitude();
  case "setMinimumLatitude": ((net.sf.freecol.common.model.Map)object).setMinimumLatitude((int)params[0]); return null;
  case "getMaximumLatitude": return ((net.sf.freecol.common.model.Map)object).getMaximumLatitude();
  case "setMaximumLatitude": ((net.sf.freecol.common.model.Map)object).setMaximumLatitude((int)params[0]); return null;
  case "getLatitudePerRow": return ((net.sf.freecol.common.model.Map)object).getLatitudePerRow();
  case "getRegions": return ((net.sf.freecol.common.model.Map)object).getRegions();
  case "clearRegions": ((net.sf.freecol.common.model.Map)object).clearRegions(); return null;
  case "getFixedRegions": return ((net.sf.freecol.common.model.Map)object).getFixedRegions();
  case "getSearchTrace": return ((net.sf.freecol.common.model.Map)object).getSearchTrace();
  case "setSearchTrace": return ((net.sf.freecol.common.model.Map)object).setSearchTrace((boolean)params[0]);
  case "resetHighSeasCount": ((net.sf.freecol.common.model.Map)object).resetHighSeasCount(); return null;
  case "resetLayers": ((net.sf.freecol.common.model.Map)object).resetLayers(); return null;
  case "fixupRegions": ((net.sf.freecol.common.model.Map)object).fixupRegions(); return null;
  }
  return common_model_FreeColGameObject.invokeMethod(object, method, params);
}
};
names.put("common.model.Map", net.sf.freecol.common.model.Map.class);
metas.put(net.sf.freecol.common.model.Map.class, common_model_Map);
// net.sf.freecol.common.model.Specification.Source
final Meta common_model_Specification$Source = new Meta() {
net.sf.freecol.common.model.Specification.Source newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class))
    return new net.sf.freecol.common.model.Specification.Source((java.lang.String)params[0]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_model_FreeColSpecObjectType.invokeMethod(object, method, params);
}
};
names.put("common.model.Specification$Source", net.sf.freecol.common.model.Specification.Source.class);
metas.put(net.sf.freecol.common.model.Specification.Source.class, common_model_Specification$Source);
// net.sf.freecol.common.model.UnitTradeItem
final Meta common_model_UnitTradeItem = new Meta() {
net.sf.freecol.common.model.UnitTradeItem newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.model.UnitTradeItem((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.Unit.class))
    return new net.sf.freecol.common.model.UnitTradeItem((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Player)params[1], (net.sf.freecol.common.model.Player)params[1], (net.sf.freecol.common.model.Unit)params[3]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_model_TradeItem.invokeMethod(object, method, params);
}
};
names.put("common.model.UnitTradeItem", net.sf.freecol.common.model.UnitTradeItem.class);
metas.put(net.sf.freecol.common.model.UnitTradeItem.class, common_model_UnitTradeItem);
// net.sf.freecol.common.model.ColonyTile
final Meta common_model_ColonyTile = new Meta() {
net.sf.freecol.common.model.ColonyTile newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.ColonyTile((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getBasicProductionInfo": return ((net.sf.freecol.common.model.ColonyTile)object).getBasicProductionInfo();
  case "getOccupyingUnit": return ((net.sf.freecol.common.model.ColonyTile)object).getOccupyingUnit();
  case "isOccupied": return ((net.sf.freecol.common.model.ColonyTile)object).isOccupied();
  case "isColonyCenterTile": return ((net.sf.freecol.common.model.ColonyTile)object).isColonyCenterTile();
  case "setWorkTile": ((net.sf.freecol.common.model.ColonyTile)object).setWorkTile((net.sf.freecol.common.model.Tile)params[0]); return null;
  }
  return common_model_WorkLocation.invokeMethod(object, method, params);
}
};
names.put("common.model.ColonyTile", net.sf.freecol.common.model.ColonyTile.class);
metas.put(net.sf.freecol.common.model.ColonyTile.class, common_model_ColonyTile);
// net.sf.freecol.common.model.Monarch
final Meta common_model_Monarch = new Meta() {
net.sf.freecol.common.model.Monarch newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.Monarch((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Player.class))
    return new net.sf.freecol.common.model.Monarch((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Player)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "setDispleasure": ((net.sf.freecol.common.model.Monarch)object).setDispleasure((boolean)params[0]); return null;
  case "getInterventionForce": return ((net.sf.freecol.common.model.Monarch)object).getInterventionForce();
  case "getExpeditionaryForce": return ((net.sf.freecol.common.model.Monarch)object).getExpeditionaryForce();
  case "getNavalREFUnitType": return ((net.sf.freecol.common.model.Monarch)object).getNavalREFUnitType();
  case "getNameKey": return ((net.sf.freecol.common.model.Monarch)object).getNameKey();
  case "collectPotentialFriends": return ((net.sf.freecol.common.model.Monarch)object).collectPotentialFriends();
  case "collectPotentialEnemies": return ((net.sf.freecol.common.model.Monarch)object).collectPotentialEnemies();
  case "updateInterventionForce": ((net.sf.freecol.common.model.Monarch)object).updateInterventionForce(); return null;
  case "getActionChoices": return ((net.sf.freecol.common.model.Monarch)object).getActionChoices();
  case "getMercenaryForce": return ((net.sf.freecol.common.model.Monarch)object).getMercenaryForce();
  case "getWarSupportForce": return ((net.sf.freecol.common.model.Monarch)object).getWarSupportForce();
  case "getSupportSea": return ((net.sf.freecol.common.model.Monarch)object).getSupportSea();
  case "setSupportSea": ((net.sf.freecol.common.model.Monarch)object).setSupportSea((boolean)params[0]); return null;
  case "getDispleasure": return ((net.sf.freecol.common.model.Monarch)object).getDispleasure();
  case "shouldAddNavalUnit": return ((net.sf.freecol.common.model.Monarch)object).shouldAddNavalUnit();
  }
  return common_model_FreeColGameObject.invokeMethod(object, method, params);
}
};
names.put("common.model.Monarch", net.sf.freecol.common.model.Monarch.class);
metas.put(net.sf.freecol.common.model.Monarch.class, common_model_Monarch);
// net.sf.freecol.common.model.TileType
final Meta common_model_TileType = new Meta() {
net.sf.freecol.common.model.TileType newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.TileType((java.lang.String)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getDisasterChoices": return ((net.sf.freecol.common.model.TileType)object).getDisasterChoices();
  case "isDirectlyHighSeasConnected": return ((net.sf.freecol.common.model.TileType)object).isDirectlyHighSeasConnected();
  case "canSettle": return ((net.sf.freecol.common.model.TileType)object).canSettle();
  case "getBasicMoveCost": return ((net.sf.freecol.common.model.TileType)object).getBasicMoveCost();
  case "isWater": return ((net.sf.freecol.common.model.TileType)object).isWater();
  case "isForested": return ((net.sf.freecol.common.model.TileType)object).isForested();
  case "getBasicWorkTurns": return ((net.sf.freecol.common.model.TileType)object).getBasicWorkTurns();
  case "isElevation": return ((net.sf.freecol.common.model.TileType)object).isElevation();
  case "isHighSeasConnected": return ((net.sf.freecol.common.model.TileType)object).isHighSeasConnected();
  case "getResourceTypes": return ((net.sf.freecol.common.model.TileType)object).getResourceTypes();
  case "getResourceTypeValues": return ((net.sf.freecol.common.model.TileType)object).getResourceTypeValues();
  }
  return common_model_FreeColSpecObjectType.invokeMethod(object, method, params);
}
};
names.put("common.model.TileType", net.sf.freecol.common.model.TileType.class);
metas.put(net.sf.freecol.common.model.TileType.class, common_model_TileType);
// net.sf.freecol.common.model.TileTypeChange
final Meta common_model_TileTypeChange = new Meta() {
net.sf.freecol.common.model.TileTypeChange newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.io.FreeColXMLReader.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.TileTypeChange((net.sf.freecol.common.io.FreeColXMLReader)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.TileTypeChange((net.sf.freecol.common.model.Specification)params[0]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getFrom": return ((net.sf.freecol.common.model.TileTypeChange)object).getFrom();
  case "getProduction": return ((net.sf.freecol.common.model.TileTypeChange)object).getProduction();
  case "getTo": return ((net.sf.freecol.common.model.TileTypeChange)object).getTo();
  }
  return common_model_FreeColSpecObjectType.invokeMethod(object, method, params);
}
};
names.put("common.model.TileTypeChange", net.sf.freecol.common.model.TileTypeChange.class);
metas.put(net.sf.freecol.common.model.TileTypeChange.class, common_model_TileTypeChange);
// net.sf.freecol.common.model.NativeTrade
final Meta common_model_NativeTrade = new Meta() {
net.sf.freecol.common.model.NativeTrade newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Unit.class, net.sf.freecol.common.model.IndianSettlement.class))
    return new net.sf.freecol.common.model.NativeTrade((net.sf.freecol.common.model.Unit)params[0], (net.sf.freecol.common.model.IndianSettlement)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.NativeTrade((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getCount": return ((net.sf.freecol.common.model.NativeTrade)object).getCount();
  case "initialize": ((net.sf.freecol.common.model.NativeTrade)object).initialize(); return null;
  case "getKey": return ((net.sf.freecol.common.model.NativeTrade)object).getKey();
  case "getUnit": return ((net.sf.freecol.common.model.NativeTrade)object).getUnit();
  case "getIndianSettlement": return ((net.sf.freecol.common.model.NativeTrade)object).getIndianSettlement();
  case "getItem": return ((net.sf.freecol.common.model.NativeTrade)object).getItem();
  case "canBuy": return ((net.sf.freecol.common.model.NativeTrade)object).canBuy();
  case "canSell": return ((net.sf.freecol.common.model.NativeTrade)object).canSell();
  case "canGift": return ((net.sf.freecol.common.model.NativeTrade)object).canGift();
  case "getSettlementToUnit": return ((net.sf.freecol.common.model.NativeTrade)object).getSettlementToUnit();
  case "setItem": ((net.sf.freecol.common.model.NativeTrade)object).setItem((net.sf.freecol.common.model.NativeTradeItem)params[0]); return null;
  case "getUnitToSettlement": return ((net.sf.freecol.common.model.NativeTrade)object).getUnitToSettlement();
  case "getDone": return ((net.sf.freecol.common.model.NativeTrade)object).getDone();
  case "getGift": return ((net.sf.freecol.common.model.NativeTrade)object).getGift();
  case "setGift": ((net.sf.freecol.common.model.NativeTrade)object).setGift((boolean)params[0]); return null;
  case "setBuy": ((net.sf.freecol.common.model.NativeTrade)object).setBuy((boolean)params[0]); return null;
  case "setSell": ((net.sf.freecol.common.model.NativeTrade)object).setSell((boolean)params[0]); return null;
  case "getBuy": return ((net.sf.freecol.common.model.NativeTrade)object).getBuy();
  case "getSell": return ((net.sf.freecol.common.model.NativeTrade)object).getSell();
  case "hasNotTraded": return ((net.sf.freecol.common.model.NativeTrade)object).hasNotTraded();
  case "setCount": ((net.sf.freecol.common.model.NativeTrade)object).setCount((int)params[0]); return null;
  }
  return common_model_FreeColGameObject.invokeMethod(object, method, params);
}
};
names.put("common.model.NativeTrade", net.sf.freecol.common.model.NativeTrade.class);
metas.put(net.sf.freecol.common.model.NativeTrade.class, common_model_NativeTrade);
// net.sf.freecol.common.model.StanceTradeItem
final Meta common_model_StanceTradeItem = new Meta() {
net.sf.freecol.common.model.StanceTradeItem newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.model.StanceTradeItem((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.Stance.class))
    return new net.sf.freecol.common.model.StanceTradeItem((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Player)params[1], (net.sf.freecol.common.model.Player)params[1], (net.sf.freecol.common.model.Stance)params[3]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_model_TradeItem.invokeMethod(object, method, params);
}
};
names.put("common.model.StanceTradeItem", net.sf.freecol.common.model.StanceTradeItem.class);
metas.put(net.sf.freecol.common.model.StanceTradeItem.class, common_model_StanceTradeItem);
// net.sf.freecol.common.model.Nation
final Meta common_model_Nation = new Meta() {
net.sf.freecol.common.model.Nation newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.Nation((java.lang.String)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getType": return ((net.sf.freecol.common.model.Nation)object).getType();
  case "setType": ((net.sf.freecol.common.model.Nation)object).setType((net.sf.freecol.common.model.NationType)params[0]); return null;
  case "isUnknownEnemy": return ((net.sf.freecol.common.model.Nation)object).isUnknownEnemy();
  case "getRulerName": return ((net.sf.freecol.common.model.Nation)object).getRulerName();
  case "getRulerNameKey": return ((net.sf.freecol.common.model.Nation)object).getRulerNameKey();
  case "getREFNation": return ((net.sf.freecol.common.model.Nation)object).getREFNation();
  case "getColor": return ((net.sf.freecol.common.model.Nation)object).getColor();
  case "setColor": ((net.sf.freecol.common.model.Nation)object).setColor((java.awt.Color)params[0]); return null;
  case "isSelectable": return ((net.sf.freecol.common.model.Nation)object).isSelectable();
  case "getRebelNation": return ((net.sf.freecol.common.model.Nation)object).getRebelNation();
  case "getPreferredLatitude": return ((net.sf.freecol.common.model.Nation)object).getPreferredLatitude();
  case "getStartsOnEastCoast": return ((net.sf.freecol.common.model.Nation)object).getStartsOnEastCoast();
  }
  return common_model_FreeColSpecObjectType.invokeMethod(object, method, params);
}
};
names.put("common.model.Nation", net.sf.freecol.common.model.Nation.class);
metas.put(net.sf.freecol.common.model.Nation.class, common_model_Nation);
// net.sf.freecol.common.model.ColonyTradeItem
final Meta common_model_ColonyTradeItem = new Meta() {
net.sf.freecol.common.model.ColonyTradeItem newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.Colony.class))
    return new net.sf.freecol.common.model.ColonyTradeItem((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Player)params[1], (net.sf.freecol.common.model.Player)params[1], (net.sf.freecol.common.model.Colony)params[3]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.model.ColonyTradeItem((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_model_TradeItem.invokeMethod(object, method, params);
}
};
names.put("common.model.ColonyTradeItem", net.sf.freecol.common.model.ColonyTradeItem.class);
metas.put(net.sf.freecol.common.model.ColonyTradeItem.class, common_model_ColonyTradeItem);
// net.sf.freecol.common.model.Resource
final Meta common_model_Resource = new Meta() {
net.sf.freecol.common.model.Resource newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.Resource((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Tile.class, net.sf.freecol.common.model.ResourceType.class))
    return new net.sf.freecol.common.model.Resource((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Tile)params[1], (net.sf.freecol.common.model.ResourceType)params[2]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Tile.class, net.sf.freecol.common.model.ResourceType.class, int.class))
    return new net.sf.freecol.common.model.Resource((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Tile)params[1], (net.sf.freecol.common.model.ResourceType)params[2], (int)params[3]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getType": return ((net.sf.freecol.common.model.Resource)object).getType();
  case "getQuantity": return ((net.sf.freecol.common.model.Resource)object).getQuantity();
  case "isUnlimited": return ((net.sf.freecol.common.model.Resource)object).isUnlimited();
  case "setQuantity": ((net.sf.freecol.common.model.Resource)object).setQuantity((int)params[0]); return null;
  case "getBestGoodsType": return ((net.sf.freecol.common.model.Resource)object).getBestGoodsType();
  }
  return common_model_TileItem.invokeMethod(object, method, params);
}
};
names.put("common.model.Resource", net.sf.freecol.common.model.Resource.class);
metas.put(net.sf.freecol.common.model.Resource.class, common_model_Resource);
// net.sf.freecol.common.model.HistoryEvent
final Meta common_model_HistoryEvent = new Meta() {
net.sf.freecol.common.model.HistoryEvent newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (types.length == 0)
    return new net.sf.freecol.common.model.HistoryEvent();
  if (areSame(types, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.model.HistoryEvent((net.sf.freecol.common.io.FreeColXMLReader)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Turn.class, net.sf.freecol.common.model.HistoryEvent.HistoryEventType.class, net.sf.freecol.common.model.Player.class))
    return new net.sf.freecol.common.model.HistoryEvent((net.sf.freecol.common.model.Turn)params[0], (net.sf.freecol.common.model.HistoryEvent.HistoryEventType)params[1], (net.sf.freecol.common.model.Player)params[2]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getEventType": return ((net.sf.freecol.common.model.HistoryEvent)object).getEventType();
  case "getTurn": return ((net.sf.freecol.common.model.HistoryEvent)object).getTurn();
  case "getScore": return ((net.sf.freecol.common.model.HistoryEvent)object).getScore();
  case "setScore": ((net.sf.freecol.common.model.HistoryEvent)object).setScore((int)params[0]); return null;
  case "getPlayerId": return ((net.sf.freecol.common.model.HistoryEvent)object).getPlayerId();
  case "setPlayerId": ((net.sf.freecol.common.model.HistoryEvent)object).setPlayerId((java.lang.String)params[0]); return null;
  }
  return common_model_StringTemplate.invokeMethod(object, method, params);
}
};
names.put("common.model.HistoryEvent", net.sf.freecol.common.model.HistoryEvent.class);
metas.put(net.sf.freecol.common.model.HistoryEvent.class, common_model_HistoryEvent);
// net.sf.freecol.common.model.LostCityRumour
final Meta common_model_LostCityRumour = new Meta() {
net.sf.freecol.common.model.LostCityRumour newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.LostCityRumour((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Tile.class, net.sf.freecol.common.model.LostCityRumour.RumourType.class, java.lang.String.class))
    return new net.sf.freecol.common.model.LostCityRumour((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Tile)params[1], (net.sf.freecol.common.model.LostCityRumour.RumourType)params[2], (java.lang.String)params[3]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Tile.class))
    return new net.sf.freecol.common.model.LostCityRumour((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Tile)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getName": return ((net.sf.freecol.common.model.LostCityRumour)object).getName();
  case "getType": return ((net.sf.freecol.common.model.LostCityRumour)object).getType();
  case "setType": ((net.sf.freecol.common.model.LostCityRumour)object).setType((net.sf.freecol.common.model.LostCityRumour.RumourType)params[0]); return null;
  }
  return common_model_TileItem.invokeMethod(object, method, params);
}
};
names.put("common.model.LostCityRumour", net.sf.freecol.common.model.LostCityRumour.class);
metas.put(net.sf.freecol.common.model.LostCityRumour.class, common_model_LostCityRumour);
// net.sf.freecol.common.model.Europe
final Meta common_model_Europe = new Meta() {
net.sf.freecol.common.model.Europe newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.Europe((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "setOwner": ((net.sf.freecol.common.model.Europe)object).setOwner((net.sf.freecol.common.model.Player)params[0]); return null;
  case "getOwner": return ((net.sf.freecol.common.model.Europe)object).getOwner();
  case "getCurrentRecruitPrice": return ((net.sf.freecol.common.model.Europe)object).getCurrentRecruitPrice();
  case "getNameKey": return ((net.sf.freecol.common.model.Europe)object).getNameKey();
  case "canBeInput": return ((net.sf.freecol.common.model.Europe)object).canBeInput();
  }
  return common_model_UnitLocation.invokeMethod(object, method, params);
}
};
names.put("common.model.Europe", net.sf.freecol.common.model.Europe.class);
metas.put(net.sf.freecol.common.model.Europe.class, common_model_Europe);
// net.sf.freecol.common.model.Ability
final Meta common_model_Ability = new Meta() {
net.sf.freecol.common.model.Ability newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Ability.class))
    return new net.sf.freecol.common.model.Ability((net.sf.freecol.common.model.Ability)params[0]);
  if (areSame(types, net.sf.freecol.common.io.FreeColXMLReader.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.Ability((net.sf.freecol.common.io.FreeColXMLReader)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.Ability((net.sf.freecol.common.model.Specification)params[0]);
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.FreeColSpecObjectType.class, boolean.class))
    return new net.sf.freecol.common.model.Ability((java.lang.String)params[0], (net.sf.freecol.common.model.FreeColSpecObjectType)params[1], (boolean)params[2]);
  if (areSame(types, java.lang.String.class))
    return new net.sf.freecol.common.model.Ability((java.lang.String)params[0]);
  if (areSame(types, java.lang.String.class, boolean.class))
    return new net.sf.freecol.common.model.Ability((java.lang.String)params[0], (boolean)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getValue": return ((net.sf.freecol.common.model.Ability)object).getValue();
  case "setValue": ((net.sf.freecol.common.model.Ability)object).setValue((boolean)params[0]); return null;
  }
  return common_model_Feature.invokeMethod(object, method, params);
}
};
names.put("common.model.Ability", net.sf.freecol.common.model.Ability.class);
metas.put(net.sf.freecol.common.model.Ability.class, common_model_Ability);
// net.sf.freecol.common.model.Game
final Meta common_model_Game = new Meta() {
net.sf.freecol.common.model.Game newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.model.Game((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (types.length == 0)
    return new net.sf.freecol.common.model.Game();
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "setMap": return ((net.sf.freecol.common.model.Game)object).setMap((net.sf.freecol.common.model.Map)params[0]);
  case "getMap": return ((net.sf.freecol.common.model.Game)object).getMap();
  case "getDifficultyOptionGroup": return ((net.sf.freecol.common.model.Game)object).getDifficultyOptionGroup();
  case "getGameOptions": return ((net.sf.freecol.common.model.Game)object).getGameOptions();
  case "setGameOptions": ((net.sf.freecol.common.model.Game)object).setGameOptions((net.sf.freecol.common.option.OptionGroup)params[0]); return null;
  case "getMapGeneratorOptions": return ((net.sf.freecol.common.model.Game)object).getMapGeneratorOptions();
  case "setMapGeneratorOptions": ((net.sf.freecol.common.model.Game)object).setMapGeneratorOptions((net.sf.freecol.common.option.OptionGroup)params[0]); return null;
  case "getNextId": return ((net.sf.freecol.common.model.Game)object).getNextId();
  case "getFreeColGameObjectList": return ((net.sf.freecol.common.model.Game)object).getFreeColGameObjectList();
  case "getUUID": return ((net.sf.freecol.common.model.Game)object).getUUID();
  case "getFirstPlayer": return ((net.sf.freecol.common.model.Game)object).getFirstPlayer();
  case "getNextPlayer": return ((net.sf.freecol.common.model.Game)object).getNextPlayer();
  case "getUnknownEnemy": return ((net.sf.freecol.common.model.Game)object).getUnknownEnemy();
  case "setUnknownEnemy": ((net.sf.freecol.common.model.Game)object).setUnknownEnemy((net.sf.freecol.common.model.Player)params[0]); return null;
  case "getClientUserName": return ((net.sf.freecol.common.model.Game)object).getClientUserName();
  case "isInClient": return ((net.sf.freecol.common.model.Game)object).isInClient();
  case "isInServer": return ((net.sf.freecol.common.model.Game)object).isInServer();
  case "getClientPlayer": return ((net.sf.freecol.common.model.Game)object).getClientPlayer();
  case "isInRevengeMode": return ((net.sf.freecol.common.model.Game)object).isInRevengeMode();
  case "getCurrentPlayer": return ((net.sf.freecol.common.model.Game)object).getCurrentPlayer();
  case "setCurrentPlayer": ((net.sf.freecol.common.model.Game)object).setCurrentPlayer((net.sf.freecol.common.model.Player)params[0]); return null;
  case "getNationOptions": return ((net.sf.freecol.common.model.Game)object).getNationOptions();
  case "setNationOptions": ((net.sf.freecol.common.model.Game)object).setNationOptions((net.sf.freecol.common.model.NationOptions)params[0]); return null;
  case "getVacantNation": return ((net.sf.freecol.common.model.Game)object).getVacantNation();
  case "getVacantNations": return ((net.sf.freecol.common.model.Game)object).getVacantNations();
  case "canAddNewPlayer": return ((net.sf.freecol.common.model.Game)object).canAddNewPlayer();
  case "getTurn": return ((net.sf.freecol.common.model.Game)object).getTurn();
  case "setTurn": ((net.sf.freecol.common.model.Game)object).setTurn((net.sf.freecol.common.model.Turn)params[0]); return null;
  case "getAge": return ((net.sf.freecol.common.model.Game)object).getAge();
  case "getCombatModel": return ((net.sf.freecol.common.model.Game)object).getCombatModel();
  case "setCombatModel": ((net.sf.freecol.common.model.Game)object).setCombatModel((net.sf.freecol.common.model.CombatModel)params[0]); return null;
  case "getSpanishSuccession": return ((net.sf.freecol.common.model.Game)object).getSpanishSuccession();
  case "setSpanishSuccession": ((net.sf.freecol.common.model.Game)object).setSpanishSuccession((boolean)params[0]); return null;
  case "getInitialActiveUnitId": return ((net.sf.freecol.common.model.Game)object).getInitialActiveUnitId();
  case "getInitialActiveUnit": return ((net.sf.freecol.common.model.Game)object).getInitialActiveUnit();
  case "setInitialActiveUnitId": ((net.sf.freecol.common.model.Game)object).setInitialActiveUnitId((java.lang.String)params[0]); return null;
  case "setFreeColGameObjectListener": ((net.sf.freecol.common.model.Game)object).setFreeColGameObjectListener((net.sf.freecol.common.model.FreeColGameObjectListener)params[0]); return null;
  case "allPlayersReadyToLaunch": return ((net.sf.freecol.common.model.Game)object).allPlayersReadyToLaunch();
  case "getStatistics": return ((net.sf.freecol.common.model.Game)object).getStatistics();
  }
  return common_model_FreeColGameObject.invokeMethod(object, method, params);
}
};
names.put("common.model.Game", net.sf.freecol.common.model.Game.class);
metas.put(net.sf.freecol.common.model.Game.class, common_model_Game);
// net.sf.freecol.common.model.Colony
final Meta common_model_Colony = new Meta() {
net.sf.freecol.common.model.Colony newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.Colony((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "updateProductionTypes": ((net.sf.freecol.common.model.Colony)object).updateProductionTypes(); return null;
  case "isUndead": return ((net.sf.freecol.common.model.Colony)object).isUndead();
  case "getDisasterChoices": return ((net.sf.freecol.common.model.Colony)object).getDisasterChoices();
  case "getLootableGoodsList": return ((net.sf.freecol.common.model.Colony)object).getLootableGoodsList();
  case "getBurnableBuildings": return ((net.sf.freecol.common.model.Colony)object).getBurnableBuildings();
  case "setDisplayUnitCount": ((net.sf.freecol.common.model.Colony)object).setDisplayUnitCount((int)params[0]); return null;
  case "getStockade": return ((net.sf.freecol.common.model.Colony)object).getStockade();
  case "canBePlundered": return ((net.sf.freecol.common.model.Colony)object).canBePlundered();
  case "getAllWorkLocations": return ((net.sf.freecol.common.model.Colony)object).getAllWorkLocations();
  case "canPayToFinishBuilding": return ((net.sf.freecol.common.model.Colony)object).canPayToFinishBuilding();
  case "getPriceForBuilding": return ((net.sf.freecol.common.model.Colony)object).getPriceForBuilding();
  case "setBuildQueue": ((net.sf.freecol.common.model.Colony)object).setBuildQueue((java.util.List)params[0]); return null;
  case "getBuildings": return ((net.sf.freecol.common.model.Colony)object).getBuildings();
  case "getColonyTiles": return ((net.sf.freecol.common.model.Colony)object).getColonyTiles();
  case "getProductionBonus": return ((net.sf.freecol.common.model.Colony)object).getProductionBonus();
  case "setProductionBonus": ((net.sf.freecol.common.model.Colony)object).setProductionBonus((int)params[0]); return null;
  case "getEstablished": return ((net.sf.freecol.common.model.Colony)object).getEstablished();
  case "setEstablished": ((net.sf.freecol.common.model.Colony)object).setEstablished((net.sf.freecol.common.model.Turn)params[0]); return null;
  case "getBuildQueue": return ((net.sf.freecol.common.model.Colony)object).getBuildQueue();
  case "getPopulationQueue": return ((net.sf.freecol.common.model.Colony)object).getPopulationQueue();
  case "setPopulationQueue": ((net.sf.freecol.common.model.Colony)object).setPopulationQueue((java.util.List)params[0]); return null;
  case "getDisplayUnitCount": return ((net.sf.freecol.common.model.Colony)object).getDisplayUnitCount();
  case "getOccupationTrace": return ((net.sf.freecol.common.model.Colony)object).getOccupationTrace();
  case "setOccupationTrace": return ((net.sf.freecol.common.model.Colony)object).setOccupationTrace((boolean)params[0]);
  case "getCurrentlyBuilding": return ((net.sf.freecol.common.model.Colony)object).getCurrentlyBuilding();
  case "setExportData": ((net.sf.freecol.common.model.Colony)object).setExportData((net.sf.freecol.common.model.ExportData)params[0]); return null;
  case "getCurrentWorkLocationsList": return ((net.sf.freecol.common.model.Colony)object).getCurrentWorkLocationsList();
  case "getAllWorkLocationsList": return ((net.sf.freecol.common.model.Colony)object).getAllWorkLocationsList();
  case "getAvailableWorkLocationsList": return ((net.sf.freecol.common.model.Colony)object).getAvailableWorkLocationsList();
  case "getAvailableWorkLocations": return ((net.sf.freecol.common.model.Colony)object).getAvailableWorkLocations();
  case "getCurrentWorkLocations": return ((net.sf.freecol.common.model.Colony)object).getCurrentWorkLocations();
  case "getWarehouse": return ((net.sf.freecol.common.model.Colony)object).getWarehouse();
  case "hasStockade": return ((net.sf.freecol.common.model.Colony)object).hasStockade();
  case "getStockadeKey": return ((net.sf.freecol.common.model.Colony)object).getStockadeKey();
  case "canBuild": return ((net.sf.freecol.common.model.Colony)object).canBuild();
  case "getBuildableUnits": return ((net.sf.freecol.common.model.Colony)object).getBuildableUnits();
  case "setCurrentlyBuilding": ((net.sf.freecol.common.model.Colony)object).setCurrentlyBuilding((net.sf.freecol.common.model.BuildableType)params[0]); return null;
  case "updateSoL": ((net.sf.freecol.common.model.Colony)object).updateSoL(); return null;
  case "getPreferredSizeChange": return ((net.sf.freecol.common.model.Colony)object).getPreferredSizeChange();
  case "getUnitsToRemove": return ((net.sf.freecol.common.model.Colony)object).getUnitsToRemove();
  case "getUnitsToAdd": return ((net.sf.freecol.common.model.Colony)object).getUnitsToAdd();
  case "canReducePopulation": return ((net.sf.freecol.common.model.Colony)object).canReducePopulation();
  case "getReducePopulationMessage": return ((net.sf.freecol.common.model.Colony)object).getReducePopulationMessage();
  case "checkForGovMgtChangeMessage": return ((net.sf.freecol.common.model.Colony)object).checkForGovMgtChangeMessage();
  case "updatePopulation": ((net.sf.freecol.common.model.Colony)object).updatePopulation(); return null;
  case "getApparentUnitCount": return ((net.sf.freecol.common.model.Colony)object).getApparentUnitCount();
  case "getBestDefenderType": return ((net.sf.freecol.common.model.Colony)object).getBestDefenderType();
  case "getTotalDefencePower": return ((net.sf.freecol.common.model.Colony)object).getTotalDefencePower();
  case "isUnderSiege": return ((net.sf.freecol.common.model.Colony)object).isUnderSiege();
  case "getTeachers": return ((net.sf.freecol.common.model.Colony)object).getTeachers();
  case "getConsumers": return ((net.sf.freecol.common.model.Colony)object).getConsumers();
  case "getFoodProduction": return ((net.sf.freecol.common.model.Colony)object).getFoodProduction();
  case "getStarvationTurns": return ((net.sf.freecol.common.model.Colony)object).getStarvationTurns();
  case "getNewColonistTurns": return ((net.sf.freecol.common.model.Colony)object).getNewColonistTurns();
  case "getTileImprovementSuggestions": return ((net.sf.freecol.common.model.Colony)object).getTileImprovementSuggestions();
  case "copyColony": return ((net.sf.freecol.common.model.Colony)object).copyColony();
  case "canBeInput": return ((net.sf.freecol.common.model.Colony)object).canBeInput();
  }
  return common_model_Settlement.invokeMethod(object, method, params);
}
};
names.put("common.model.Colony", net.sf.freecol.common.model.Colony.class);
metas.put(net.sf.freecol.common.model.Colony.class, common_model_Colony);
// net.sf.freecol.common.model.UnitType
final Meta common_model_UnitType = new Meta() {
net.sf.freecol.common.model.UnitType newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.UnitType((java.lang.String)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getSpace": return ((net.sf.freecol.common.model.UnitType)object).getSpace();
  case "getPriority": return ((net.sf.freecol.common.model.UnitType)object).getPriority();
  case "isDefaultUnitType": return ((net.sf.freecol.common.model.UnitType)object).isDefaultUnitType();
  case "isNaval": return ((net.sf.freecol.common.model.UnitType)object).isNaval();
  case "getSpaceTaken": return ((net.sf.freecol.common.model.UnitType)object).getSpaceTaken();
  case "getLineOfSight": return ((net.sf.freecol.common.model.UnitType)object).getLineOfSight();
  case "getDefaultRole": return ((net.sf.freecol.common.model.UnitType)object).getDefaultRole();
  case "getOffence": return ((net.sf.freecol.common.model.UnitType)object).getOffence();
  case "getScoreValue": return ((net.sf.freecol.common.model.UnitType)object).getScoreValue();
  case "canCarryUnits": return ((net.sf.freecol.common.model.UnitType)object).canCarryUnits();
  case "canBuildColony": return ((net.sf.freecol.common.model.UnitType)object).canBuildColony();
  case "canCarryTreasure": return ((net.sf.freecol.common.model.UnitType)object).canCarryTreasure();
  case "getPrice": return ((net.sf.freecol.common.model.UnitType)object).getPrice();
  case "hasPrice": return ((net.sf.freecol.common.model.UnitType)object).hasPrice();
  case "getMercenaryPrice": return ((net.sf.freecol.common.model.UnitType)object).getMercenaryPrice();
  case "isDefensive": return ((net.sf.freecol.common.model.UnitType)object).isDefensive();
  case "isOffensive": return ((net.sf.freecol.common.model.UnitType)object).isOffensive();
  case "getMovement": return ((net.sf.freecol.common.model.UnitType)object).getMovement();
  case "hasSkill": return ((net.sf.freecol.common.model.UnitType)object).hasSkill();
  case "getSkill": return ((net.sf.freecol.common.model.UnitType)object).getSkill();
  case "getConsumedGoods": return ((net.sf.freecol.common.model.UnitType)object).getConsumedGoods();
  case "getExpertProduction": return ((net.sf.freecol.common.model.UnitType)object).getExpertProduction();
  case "canMoveToHighSeas": return ((net.sf.freecol.common.model.UnitType)object).canMoveToHighSeas();
  case "canCarryGoods": return ((net.sf.freecol.common.model.UnitType)object).canCarryGoods();
  case "getDefence": return ((net.sf.freecol.common.model.UnitType)object).getDefence();
  case "isPerson": return ((net.sf.freecol.common.model.UnitType)object).isPerson();
  case "getExpertRoles": return ((net.sf.freecol.common.model.UnitType)object).getExpertRoles();
  case "getHitPoints": return ((net.sf.freecol.common.model.UnitType)object).getHitPoints();
  case "getMaximumExperience": return ((net.sf.freecol.common.model.UnitType)object).getMaximumExperience();
  case "getSkillTaught": return ((net.sf.freecol.common.model.UnitType)object).getSkillTaught();
  case "setMercenaryPrice": ((net.sf.freecol.common.model.UnitType)object).setMercenaryPrice((int)params[0]); return null;
  case "hasMaximumAttrition": return ((net.sf.freecol.common.model.UnitType)object).hasMaximumAttrition();
  case "getMaximumAttrition": return ((net.sf.freecol.common.model.UnitType)object).getMaximumAttrition();
  case "getWorkingAsKey": return ((net.sf.freecol.common.model.UnitType)object).getWorkingAsKey();
  case "getBaseOffence": return ((net.sf.freecol.common.model.UnitType)object).getBaseOffence();
  case "getBaseDefence": return ((net.sf.freecol.common.model.UnitType)object).getBaseDefence();
  case "setSpace": ((net.sf.freecol.common.model.UnitType)object).setSpace((int)params[0]); return null;
  case "setSpaceTaken": ((net.sf.freecol.common.model.UnitType)object).setSpaceTaken((int)params[0]); return null;
  case "isRecruitable": return ((net.sf.freecol.common.model.UnitType)object).isRecruitable();
  case "getRecruitProbability": return ((net.sf.freecol.common.model.UnitType)object).getRecruitProbability();
  case "setSkill": ((net.sf.freecol.common.model.UnitType)object).setSkill((int)params[0]); return null;
  case "getDisplayRoleId": return ((net.sf.freecol.common.model.UnitType)object).getDisplayRoleId();
  }
  return common_model_BuildableType.invokeMethod(object, method, params);
}
};
names.put("common.model.UnitType", net.sf.freecol.common.model.UnitType.class);
metas.put(net.sf.freecol.common.model.UnitType.class, common_model_UnitType);
// net.sf.freecol.common.model.TradeRoute
final Meta common_model_TradeRoute = new Meta() {
net.sf.freecol.common.model.TradeRoute newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class, net.sf.freecol.common.model.Player.class))
    return new net.sf.freecol.common.model.TradeRoute((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1], (net.sf.freecol.common.model.Player)params[2]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.TradeRoute((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "setOwner": ((net.sf.freecol.common.model.TradeRoute)object).setOwner((net.sf.freecol.common.model.Player)params[0]); return null;
  case "getName": return ((net.sf.freecol.common.model.TradeRoute)object).getName();
  case "setName": ((net.sf.freecol.common.model.TradeRoute)object).setName((java.lang.String)params[0]); return null;
  case "verify": return ((net.sf.freecol.common.model.TradeRoute)object).verify();
  case "getOwner": return ((net.sf.freecol.common.model.TradeRoute)object).getOwner();
  case "getAssignedUnits": return ((net.sf.freecol.common.model.TradeRoute)object).getAssignedUnits();
  case "isSilent": return ((net.sf.freecol.common.model.TradeRoute)object).isSilent();
  case "getStopList": return ((net.sf.freecol.common.model.TradeRoute)object).getStopList();
  case "getStopCount": return ((net.sf.freecol.common.model.TradeRoute)object).getStopCount();
  case "setSilent": ((net.sf.freecol.common.model.TradeRoute)object).setSilent((boolean)params[0]); return null;
  case "clearStops": ((net.sf.freecol.common.model.TradeRoute)object).clearStops(); return null;
  case "verifyUniqueName": return ((net.sf.freecol.common.model.TradeRoute)object).verifyUniqueName();
  }
  return common_model_FreeColGameObject.invokeMethod(object, method, params);
}
};
names.put("common.model.TradeRoute", net.sf.freecol.common.model.TradeRoute.class);
metas.put(net.sf.freecol.common.model.TradeRoute.class, common_model_TradeRoute);
// net.sf.freecol.common.model.Event
final Meta common_model_Event = new Meta() {
net.sf.freecol.common.model.Event newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.Event((java.lang.String)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  if (areSame(types, net.sf.freecol.common.io.FreeColXMLReader.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.Event((net.sf.freecol.common.io.FreeColXMLReader)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getValue": return ((net.sf.freecol.common.model.Event)object).getValue();
  case "setValue": ((net.sf.freecol.common.model.Event)object).setValue((java.lang.String)params[0]); return null;
  case "getScoreValue": return ((net.sf.freecol.common.model.Event)object).getScoreValue();
  case "getLimitValues": return ((net.sf.freecol.common.model.Event)object).getLimitValues();
  case "setScoreValue": ((net.sf.freecol.common.model.Event)object).setScoreValue((int)params[0]); return null;
  }
  return common_model_FreeColSpecObjectType.invokeMethod(object, method, params);
}
};
names.put("common.model.Event", net.sf.freecol.common.model.Event.class);
metas.put(net.sf.freecol.common.model.Event.class, common_model_Event);
// net.sf.freecol.common.model.Force
final Meta common_model_Force = new Meta() {
net.sf.freecol.common.model.Force newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.Force((net.sf.freecol.common.model.Specification)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Specification.class, java.util.List.class, java.lang.String.class))
    return new net.sf.freecol.common.model.Force((net.sf.freecol.common.model.Specification)params[0], (java.util.List)params[1], (java.lang.String)params[2]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "isEmpty": return ((net.sf.freecol.common.model.Force)object).isEmpty();
  case "getUnitList": return ((net.sf.freecol.common.model.Force)object).getUnitList();
  case "getLandUnitsList": return ((net.sf.freecol.common.model.Force)object).getLandUnitsList();
  case "getNavalUnitsList": return ((net.sf.freecol.common.model.Force)object).getNavalUnitsList();
  case "getCapacity": return ((net.sf.freecol.common.model.Force)object).getCapacity();
  case "getSpaceRequired": return ((net.sf.freecol.common.model.Force)object).getSpaceRequired();
  case "clearLandUnits": ((net.sf.freecol.common.model.Force)object).clearLandUnits(); return null;
  case "clearNavalUnits": ((net.sf.freecol.common.model.Force)object).clearNavalUnits(); return null;
  }
  return common_model_FreeColSpecObject.invokeMethod(object, method, params);
}
};
names.put("common.model.Force", net.sf.freecol.common.model.Force.class);
metas.put(net.sf.freecol.common.model.Force.class, common_model_Force);
// net.sf.freecol.common.model.GoodsType
final Meta common_model_GoodsType = new Meta() {
net.sf.freecol.common.model.GoodsType newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.GoodsType((java.lang.String)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "setDerivedAttributes": ((net.sf.freecol.common.model.GoodsType)object).setDerivedAttributes((net.sf.freecol.common.model.Specification)params[0]); return null;
  case "isRawMaterialForUnstorableBuildingMaterial": return ((net.sf.freecol.common.model.GoodsType)object).isRawMaterialForUnstorableBuildingMaterial();
  case "getLabel": return ((net.sf.freecol.common.model.GoodsType)object).getLabel();
  case "isStorable": return ((net.sf.freecol.common.model.GoodsType)object).isStorable();
  case "getInitialAmount": return ((net.sf.freecol.common.model.GoodsType)object).getInitialAmount();
  case "setPrice": ((net.sf.freecol.common.model.GoodsType)object).setPrice((int)params[0]); return null;
  case "getPrice": return ((net.sf.freecol.common.model.GoodsType)object).getPrice();
  case "getProductionWeight": return ((net.sf.freecol.common.model.GoodsType)object).getProductionWeight();
  case "isFoodType": return ((net.sf.freecol.common.model.GoodsType)object).isFoodType();
  case "getLowProductionThreshold": return ((net.sf.freecol.common.model.GoodsType)object).getLowProductionThreshold();
  case "getZeroProductionFactor": return ((net.sf.freecol.common.model.GoodsType)object).getZeroProductionFactor();
  case "isBuildingMaterial": return ((net.sf.freecol.common.model.GoodsType)object).isBuildingMaterial();
  case "isRefined": return ((net.sf.freecol.common.model.GoodsType)object).isRefined();
  case "isFarmed": return ((net.sf.freecol.common.model.GoodsType)object).isFarmed();
  case "getEquivalentTypes": return ((net.sf.freecol.common.model.GoodsType)object).getEquivalentTypes();
  case "getBreedingNumber": return ((net.sf.freecol.common.model.GoodsType)object).getBreedingNumber();
  case "getInputType": return ((net.sf.freecol.common.model.GoodsType)object).getInputType();
  case "isBreedable": return ((net.sf.freecol.common.model.GoodsType)object).isBreedable();
  case "limitIgnored": return ((net.sf.freecol.common.model.GoodsType)object).limitIgnored();
  case "isLibertyType": return ((net.sf.freecol.common.model.GoodsType)object).isLibertyType();
  case "isImmigrationType": return ((net.sf.freecol.common.model.GoodsType)object).isImmigrationType();
  case "getMilitary": return ((net.sf.freecol.common.model.GoodsType)object).getMilitary();
  case "isTradeGoods": return ((net.sf.freecol.common.model.GoodsType)object).isTradeGoods();
  case "isRawBuildingMaterial": return ((net.sf.freecol.common.model.GoodsType)object).isRawBuildingMaterial();
  case "isNewWorldLuxuryType": return ((net.sf.freecol.common.model.GoodsType)object).isNewWorldLuxuryType();
  case "getStoredAs": return ((net.sf.freecol.common.model.GoodsType)object).getStoredAs();
  case "isNewWorldGoodsType": return ((net.sf.freecol.common.model.GoodsType)object).isNewWorldGoodsType();
  case "isRawMaterial": return ((net.sf.freecol.common.model.GoodsType)object).isRawMaterial();
  case "getOutputType": return ((net.sf.freecol.common.model.GoodsType)object).getOutputType();
  case "isStoredAs": return ((net.sf.freecol.common.model.GoodsType)object).isStoredAs();
  case "getWorkingAsKey": return ((net.sf.freecol.common.model.GoodsType)object).getWorkingAsKey();
  case "getProductionChain": return ((net.sf.freecol.common.model.GoodsType)object).getProductionChain();
  }
  return common_model_FreeColSpecObjectType.invokeMethod(object, method, params);
}
};
names.put("common.model.GoodsType", net.sf.freecol.common.model.GoodsType.class);
metas.put(net.sf.freecol.common.model.GoodsType.class, common_model_GoodsType);
// net.sf.freecol.common.model.LastSale
final Meta common_model_LastSale = new Meta() {
net.sf.freecol.common.model.LastSale newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.model.LastSale((net.sf.freecol.common.io.FreeColXMLReader)params[0]);
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.Turn.class, int.class))
    return new net.sf.freecol.common.model.LastSale((java.lang.String)params[0], (net.sf.freecol.common.model.Turn)params[1], (int)params[2]);
  if (areSame(types, net.sf.freecol.common.model.Location.class, net.sf.freecol.common.model.GoodsType.class, net.sf.freecol.common.model.Turn.class, int.class))
    return new net.sf.freecol.common.model.LastSale((net.sf.freecol.common.model.Location)params[0], (net.sf.freecol.common.model.GoodsType)params[1], (net.sf.freecol.common.model.Turn)params[2], (int)params[3]);
  if (types.length == 0)
    return new net.sf.freecol.common.model.LastSale();
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getPrice": return ((net.sf.freecol.common.model.LastSale)object).getPrice();
  case "getWhen": return ((net.sf.freecol.common.model.LastSale)object).getWhen();
  }
  return common_model_FreeColObject.invokeMethod(object, method, params);
}
};
names.put("common.model.LastSale", net.sf.freecol.common.model.LastSale.class);
metas.put(net.sf.freecol.common.model.LastSale.class, common_model_LastSale);
// net.sf.freecol.common.model.GoodsContainer
final Meta common_model_GoodsContainer = new Meta() {
net.sf.freecol.common.model.GoodsContainer newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.GoodsContainer((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Location.class))
    return new net.sf.freecol.common.model.GoodsContainer((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Location)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "setOwner": ((net.sf.freecol.common.model.GoodsContainer)object).setOwner((net.sf.freecol.common.model.Player)params[0]); return null;
  case "removeAll": ((net.sf.freecol.common.model.GoodsContainer)object).removeAll(); return null;
  case "getOwner": return ((net.sf.freecol.common.model.GoodsContainer)object).getOwner();
  case "getSpaceTaken": return ((net.sf.freecol.common.model.GoodsContainer)object).getSpaceTaken();
  case "setLocation": ((net.sf.freecol.common.model.GoodsContainer)object).setLocation((net.sf.freecol.common.model.Location)params[0]); return null;
  case "getCompactGoodsList": return ((net.sf.freecol.common.model.GoodsContainer)object).getCompactGoodsList();
  case "getGoodsList": return ((net.sf.freecol.common.model.GoodsContainer)object).getGoodsList();
  case "saveState": ((net.sf.freecol.common.model.GoodsContainer)object).saveState(); return null;
  case "fireChanges": return ((net.sf.freecol.common.model.GoodsContainer)object).fireChanges();
  case "restoreState": ((net.sf.freecol.common.model.GoodsContainer)object).restoreState(); return null;
  case "hasChanged": return ((net.sf.freecol.common.model.GoodsContainer)object).hasChanged();
  }
  return common_model_FreeColGameObject.invokeMethod(object, method, params);
}
};
names.put("common.model.GoodsContainer", net.sf.freecol.common.model.GoodsContainer.class);
metas.put(net.sf.freecol.common.model.GoodsContainer.class, common_model_GoodsContainer);
// net.sf.freecol.common.model.ExportData
final Meta common_model_ExportData = new Meta() {
net.sf.freecol.common.model.ExportData newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (types.length == 0)
    return new net.sf.freecol.common.model.ExportData();
  if (areSame(types, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.common.model.ExportData((net.sf.freecol.common.io.FreeColXMLReader)params[0]);
  if (areSame(types, net.sf.freecol.common.model.GoodsType.class, int.class))
    return new net.sf.freecol.common.model.ExportData((net.sf.freecol.common.model.GoodsType)params[0], (int)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "setImportLevel": return ((net.sf.freecol.common.model.ExportData)object).setImportLevel((int)params[0]);
  case "getHighLevel": return ((net.sf.freecol.common.model.ExportData)object).getHighLevel();
  case "setHighLevel": return ((net.sf.freecol.common.model.ExportData)object).setHighLevel((int)params[0]);
  case "getLowLevel": return ((net.sf.freecol.common.model.ExportData)object).getLowLevel();
  case "setLowLevel": return ((net.sf.freecol.common.model.ExportData)object).setLowLevel((int)params[0]);
  case "getImportLevel": return ((net.sf.freecol.common.model.ExportData)object).getImportLevel();
  case "getExportLevel": return ((net.sf.freecol.common.model.ExportData)object).getExportLevel();
  case "setExportLevel": return ((net.sf.freecol.common.model.ExportData)object).setExportLevel((int)params[0]);
  case "getExported": return ((net.sf.freecol.common.model.ExportData)object).getExported();
  case "setExported": ((net.sf.freecol.common.model.ExportData)object).setExported((boolean)params[0]); return null;
  }
  return common_model_FreeColObject.invokeMethod(object, method, params);
}
};
names.put("common.model.ExportData", net.sf.freecol.common.model.ExportData.class);
metas.put(net.sf.freecol.common.model.ExportData.class, common_model_ExportData);
// net.sf.freecol.common.model.NationOptions
final Meta common_model_NationOptions = new Meta() {
net.sf.freecol.common.model.NationOptions newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.io.FreeColXMLReader.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.NationOptions((net.sf.freecol.common.io.FreeColXMLReader)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.NationOptions((net.sf.freecol.common.model.Specification)params[0]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getNations": return ((net.sf.freecol.common.model.NationOptions)object).getNations();
  case "getNationalAdvantages": return ((net.sf.freecol.common.model.NationOptions)object).getNationalAdvantages();
  }
  return common_model_FreeColSpecObject.invokeMethod(object, method, params);
}
};
names.put("common.model.NationOptions", net.sf.freecol.common.model.NationOptions.class);
metas.put(net.sf.freecol.common.model.NationOptions.class, common_model_NationOptions);
// net.sf.freecol.common.model.Effect
final Meta common_model_Effect = new Meta() {
net.sf.freecol.common.model.Effect newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Effect.class))
    return new net.sf.freecol.common.model.Effect((net.sf.freecol.common.model.Effect)params[0]);
  if (areSame(types, net.sf.freecol.common.io.FreeColXMLReader.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.Effect((net.sf.freecol.common.io.FreeColXMLReader)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getProbability": return ((net.sf.freecol.common.model.Effect)object).getProbability();
  }
  return common_model_FreeColSpecObjectType.invokeMethod(object, method, params);
}
};
names.put("common.model.Effect", net.sf.freecol.common.model.Effect.class);
metas.put(net.sf.freecol.common.model.Effect.class, common_model_Effect);
// net.sf.freecol.common.model.Player
final Meta common_model_Player = new Meta() {
net.sf.freecol.common.model.Player newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.Player((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getUnits": return ((net.sf.freecol.common.model.Player)object).getUnits();
  case "getName": return ((net.sf.freecol.common.model.Player)object).getName();
  case "setName": ((net.sf.freecol.common.model.Player)object).setName((java.lang.String)params[0]); return null;
  case "isAdmin": return ((net.sf.freecol.common.model.Player)object).isAdmin();
  case "isUnknownEnemy": return ((net.sf.freecol.common.model.Player)object).isUnknownEnemy();
  case "isDead": return ((net.sf.freecol.common.model.Player)object).isDead();
  case "getNationId": return ((net.sf.freecol.common.model.Player)object).getNationId();
  case "getNation": return ((net.sf.freecol.common.model.Player)object).getNation();
  case "invalidateCanSeeTiles": ((net.sf.freecol.common.model.Player)object).invalidateCanSeeTiles(); return null;
  case "isEuropean": return ((net.sf.freecol.common.model.Player)object).isEuropean();
  case "isIndian": return ((net.sf.freecol.common.model.Player)object).isIndian();
  case "isUndead": return ((net.sf.freecol.common.model.Player)object).isUndead();
  case "getHighSeas": return ((net.sf.freecol.common.model.Player)object).getHighSeas();
  case "isReady": return ((net.sf.freecol.common.model.Player)object).isReady();
  case "getColonies": return ((net.sf.freecol.common.model.Player)object).getColonies();
  case "getSettlements": return ((net.sf.freecol.common.model.Player)object).getSettlements();
  case "initializeHighSeas": ((net.sf.freecol.common.model.Player)object).initializeHighSeas(); return null;
  case "setCurrentFather": ((net.sf.freecol.common.model.Player)object).setCurrentFather((net.sf.freecol.common.model.FoundingFather)params[0]); return null;
  case "clearOfferedFathers": ((net.sf.freecol.common.model.Player)object).clearOfferedFathers(); return null;
  case "getNameForTradeRoute": return ((net.sf.freecol.common.model.Player)object).getNameForTradeRoute();
  case "getEurope": return ((net.sf.freecol.common.model.Player)object).getEurope();
  case "getPlayerType": return ((net.sf.freecol.common.model.Player)object).getPlayerType();
  case "getUnitCount": return ((net.sf.freecol.common.model.Player)object).getUnitCount();
  case "getNumberOfPorts": return ((net.sf.freecol.common.model.Player)object).getNumberOfPorts();
  case "getRebels": return ((net.sf.freecol.common.model.Player)object).getRebels();
  case "hasSettlements": return ((net.sf.freecol.common.model.Player)object).hasSettlements();
  case "setDead": ((net.sf.freecol.common.model.Player)object).setDead((boolean)params[0]); return null;
  case "getSettlementList": return ((net.sf.freecol.common.model.Player)object).getSettlementList();
  case "getNationLabel": return ((net.sf.freecol.common.model.Player)object).getNationLabel();
  case "getRemainingFoundingFatherCost": return ((net.sf.freecol.common.model.Player)object).getRemainingFoundingFatherCost();
  case "setLiberty": ((net.sf.freecol.common.model.Player)object).setLiberty((int)params[0]); return null;
  case "getFatherCount": return ((net.sf.freecol.common.model.Player)object).getFatherCount();
  case "getFoundingFathers": return ((net.sf.freecol.common.model.Player)object).getFoundingFathers();
  case "canHaveFoundingFathers": return ((net.sf.freecol.common.model.Player)object).canHaveFoundingFathers();
  case "getDebugName": return ((net.sf.freecol.common.model.Player)object).getDebugName();
  case "getGold": return ((net.sf.freecol.common.model.Player)object).getGold();
  case "getHistory": return ((net.sf.freecol.common.model.Player)object).getHistory();
  case "getScore": return ((net.sf.freecol.common.model.Player)object).getScore();
  case "getVisibleTileSet": return ((net.sf.freecol.common.model.Player)object).getVisibleTileSet();
  case "getNationType": return ((net.sf.freecol.common.model.Player)object).getNationType();
  case "getUnitSet": return ((net.sf.freecol.common.model.Player)object).getUnitSet();
  case "getMarket": return ((net.sf.freecol.common.model.Player)object).getMarket();
  case "getConnection": return ((net.sf.freecol.common.model.Player)object).getConnection();
  case "setConnection": ((net.sf.freecol.common.model.Player)object).setConnection((net.sf.freecol.common.networking.Connection)params[0]); return null;
  case "isAI": return ((net.sf.freecol.common.model.Player)object).isAI();
  case "getIndianSettlementList": return ((net.sf.freecol.common.model.Player)object).getIndianSettlementList();
  case "setAI": ((net.sf.freecol.common.model.Player)object).setAI((boolean)params[0]); return null;
  case "setReady": ((net.sf.freecol.common.model.Player)object).setReady((boolean)params[0]); return null;
  case "isREF": return ((net.sf.freecol.common.model.Player)object).isREF();
  case "isConnected": return ((net.sf.freecol.common.model.Player)object).isConnected();
  case "restoreActiveUnit": return ((net.sf.freecol.common.model.Player)object).restoreActiveUnit();
  case "getFallbackTile": return ((net.sf.freecol.common.model.Player)object).getFallbackTile();
  case "setColonyComparator": ((net.sf.freecol.common.model.Player)object).setColonyComparator((java.util.Comparator)params[0]); return null;
  case "getTax": return ((net.sf.freecol.common.model.Player)object).getTax();
  case "getIndianSettlements": return ((net.sf.freecol.common.model.Player)object).getIndianSettlements();
  case "getBankrupt": return ((net.sf.freecol.common.model.Player)object).getBankrupt();
  case "setBankrupt": ((net.sf.freecol.common.model.Player)object).setBankrupt((boolean)params[0]); return null;
  case "getColonyList": return ((net.sf.freecol.common.model.Player)object).getColonyList();
  case "getLabel": return ((net.sf.freecol.common.model.Player)object).getLabel();
  case "getOfferedFathers": return ((net.sf.freecol.common.model.Player)object).getOfferedFathers();
  case "setOfferedFathers": ((net.sf.freecol.common.model.Player)object).setOfferedFathers((java.util.List)params[0]); return null;
  case "reduceImmigration": ((net.sf.freecol.common.model.Player)object).reduceImmigration(); return null;
  case "updateImmigrationRequired": ((net.sf.freecol.common.model.Player)object).updateImmigrationRequired(); return null;
  case "getImmigration": return ((net.sf.freecol.common.model.Player)object).getImmigration();
  case "getImmigrationRequired": return ((net.sf.freecol.common.model.Player)object).getImmigrationRequired();
  case "getAttackedByPrivateers": return ((net.sf.freecol.common.model.Player)object).getAttackedByPrivateers();
  case "setAttackedByPrivateers": ((net.sf.freecol.common.model.Player)object).setAttackedByPrivateers((boolean)params[0]); return null;
  case "setScore": ((net.sf.freecol.common.model.Player)object).setScore((int)params[0]); return null;
  case "getTradeRoutes": return ((net.sf.freecol.common.model.Player)object).getTradeRoutes();
  case "setTax": ((net.sf.freecol.common.model.Player)object).setTax((int)params[0]); return null;
  case "getEntryTile": return ((net.sf.freecol.common.model.Player)object).getEntryTile();
  case "getMonarch": return ((net.sf.freecol.common.model.Player)object).getMonarch();
  case "getLiberty": return ((net.sf.freecol.common.model.Player)object).getLiberty();
  case "checkEmigrate": return ((net.sf.freecol.common.model.Player)object).checkEmigrate();
  case "isRebel": return ((net.sf.freecol.common.model.Player)object).isRebel();
  case "getConnectedPortList": return ((net.sf.freecol.common.model.Player)object).getConnectedPortList();
  case "getRulerNameKey": return ((net.sf.freecol.common.model.Player)object).getRulerNameKey();
  case "getIndependentNationName": return ((net.sf.freecol.common.model.Player)object).getIndependentNationName();
  case "setIndependentNationName": ((net.sf.freecol.common.model.Player)object).setIndependentNationName((java.lang.String)params[0]); return null;
  case "getNewLandName": return ((net.sf.freecol.common.model.Player)object).getNewLandName();
  case "isNewLandNamed": return ((net.sf.freecol.common.model.Player)object).isNewLandNamed();
  case "setNewLandName": ((net.sf.freecol.common.model.Player)object).setNewLandName((java.lang.String)params[0]); return null;
  case "getNameForNewLand": return ((net.sf.freecol.common.model.Player)object).getNameForNewLand();
  case "getEuropeNameKey": return ((net.sf.freecol.common.model.Player)object).getEuropeNameKey();
  case "getNationResourceKey": return ((net.sf.freecol.common.model.Player)object).getNationResourceKey();
  case "getCountryLabel": return ((net.sf.freecol.common.model.Player)object).getCountryLabel();
  case "getForcesLabel": return ((net.sf.freecol.common.model.Player)object).getForcesLabel();
  case "getWaitingLabel": return ((net.sf.freecol.common.model.Player)object).getWaitingLabel();
  case "getMarketName": return ((net.sf.freecol.common.model.Player)object).getMarketName();
  case "isColonial": return ((net.sf.freecol.common.model.Player)object).isColonial();
  case "getREFPlayer": return ((net.sf.freecol.common.model.Player)object).getREFPlayer();
  case "setNationType": ((net.sf.freecol.common.model.Player)object).setNationType((net.sf.freecol.common.model.NationType)params[0]); return null;
  case "canBuildColonies": return ((net.sf.freecol.common.model.Player)object).canBuildColonies();
  case "setNation": ((net.sf.freecol.common.model.Player)object).setNation((net.sf.freecol.common.model.Nation)params[0]); return null;
  case "getReady": return ((net.sf.freecol.common.model.Player)object).getReady();
  case "getDead": return ((net.sf.freecol.common.model.Player)object).getDead();
  case "isWorkForREF": return ((net.sf.freecol.common.model.Player)object).isWorkForREF();
  case "getNationColor": return ((net.sf.freecol.common.model.Player)object).getNationColor();
  case "getRank": return ((net.sf.freecol.common.model.Player)object).getRank();
  case "getSpanishSuccessionScore": return ((net.sf.freecol.common.model.Player)object).getSpanishSuccessionScore();
  case "setGold": ((net.sf.freecol.common.model.Player)object).setGold((int)params[0]); return null;
  case "setImmigration": ((net.sf.freecol.common.model.Player)object).setImmigration((int)params[0]); return null;
  case "setImmigrationRequired": ((net.sf.freecol.common.model.Player)object).setImmigrationRequired((int)params[0]); return null;
  case "getTotalImmigrationProduction": return ((net.sf.freecol.common.model.Player)object).getTotalImmigrationProduction();
  case "getLibertyProductionNextTurn": return ((net.sf.freecol.common.model.Player)object).getLibertyProductionNextTurn();
  case "getSoL": return ((net.sf.freecol.common.model.Player)object).getSoL();
  case "getCurrentFather": return ((net.sf.freecol.common.model.Player)object).getCurrentFather();
  case "getTotalFoundingFatherCost": return ((net.sf.freecol.common.model.Player)object).getTotalFoundingFatherCost();
  case "getElectionTurns": return ((net.sf.freecol.common.model.Player)object).getElectionTurns();
  case "checkDeclareIndependence": return ((net.sf.freecol.common.model.Player)object).checkDeclareIndependence();
  case "getREFUnits": return ((net.sf.freecol.common.model.Player)object).getREFUnits();
  case "getMilitaryUnits": return ((net.sf.freecol.common.model.Player)object).getMilitaryUnits();
  case "reinitialiseMarket": ((net.sf.freecol.common.model.Player)object).reinitialiseMarket(); return null;
  case "getMostValuableGoods": return ((net.sf.freecol.common.model.Player)object).getMostValuableGoods();
  case "setEurope": ((net.sf.freecol.common.model.Player)object).setEurope((net.sf.freecol.common.model.Europe)params[0]); return null;
  case "canMoveToEurope": return ((net.sf.freecol.common.model.Player)object).canMoveToEurope();
  case "getEuropeanRecruitPrice": return ((net.sf.freecol.common.model.Player)object).getEuropeanRecruitPrice();
  case "setMonarch": ((net.sf.freecol.common.model.Player)object).setMonarch((net.sf.freecol.common.model.Monarch)params[0]); return null;
  case "getNumberOfKingLandUnits": return ((net.sf.freecol.common.model.Player)object).getNumberOfKingLandUnits();
  case "resetIterators": ((net.sf.freecol.common.model.Player)object).resetIterators(); return null;
  case "getNextActiveUnit": return ((net.sf.freecol.common.model.Player)object).getNextActiveUnit();
  case "hasNextActiveUnit": return ((net.sf.freecol.common.model.Player)object).hasNextActiveUnit();
  case "getNextGoingToUnit": return ((net.sf.freecol.common.model.Player)object).getNextGoingToUnit();
  case "setNextGoingToUnit": return ((net.sf.freecol.common.model.Player)object).setNextGoingToUnit((net.sf.freecol.common.model.Unit)params[0]);
  case "hasNextGoingToUnit": return ((net.sf.freecol.common.model.Player)object).hasNextGoingToUnit();
  case "getTradeRouteCount": return ((net.sf.freecol.common.model.Player)object).getTradeRouteCount();
  case "getNewestTradeRoute": return ((net.sf.freecol.common.model.Player)object).getNewestTradeRoute();
  case "getSettlementCount": return ((net.sf.freecol.common.model.Player)object).getSettlementCount();
  case "getConnectedPorts": return ((net.sf.freecol.common.model.Player)object).getConnectedPorts();
  case "getColoniesPopulation": return ((net.sf.freecol.common.model.Player)object).getColoniesPopulation();
  case "getClosestPortForEurope": return ((net.sf.freecol.common.model.Player)object).getClosestPortForEurope();
  case "getModelMessages": return ((net.sf.freecol.common.model.Player)object).getModelMessages();
  case "getNewModelMessages": return ((net.sf.freecol.common.model.Player)object).getNewModelMessages();
  case "removeDisplayedModelMessages": ((net.sf.freecol.common.model.Player)object).removeDisplayedModelMessages(); return null;
  case "clearModelMessages": ((net.sf.freecol.common.model.Player)object).clearModelMessages(); return null;
  case "addStartGameMessage": ((net.sf.freecol.common.model.Player)object).addStartGameMessage(); return null;
  case "setEntryTile": ((net.sf.freecol.common.model.Player)object).setEntryTile((net.sf.freecol.common.model.Tile)params[0]); return null;
  case "isAtWar": return ((net.sf.freecol.common.model.Player)object).isAtWar();
  case "hasContactedEuropeans": return ((net.sf.freecol.common.model.Player)object).hasContactedEuropeans();
  case "hasContactedIndians": return ((net.sf.freecol.common.model.Player)object).hasContactedIndians();
  case "clearNationCache": ((net.sf.freecol.common.model.Player)object).clearNationCache(); return null;
  case "getMaximumFoodConsumption": return ((net.sf.freecol.common.model.Player)object).getMaximumFoodConsumption();
  }
  return common_model_FreeColGameObject.invokeMethod(object, method, params);
}
};
names.put("common.model.Player", net.sf.freecol.common.model.Player.class);
metas.put(net.sf.freecol.common.model.Player.class, common_model_Player);
// net.sf.freecol.common.model.BuildingType
final Meta common_model_BuildingType = new Meta() {
net.sf.freecol.common.model.BuildingType newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, java.lang.String.class, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.common.model.BuildingType((java.lang.String)params[0], (net.sf.freecol.common.model.Specification)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getLevel": return ((net.sf.freecol.common.model.BuildingType)object).getLevel();
  case "getPriority": return ((net.sf.freecol.common.model.BuildingType)object).getPriority();
  case "getType": return ((net.sf.freecol.common.model.BuildingType)object).getType();
  case "getUpgradesFrom": return ((net.sf.freecol.common.model.BuildingType)object).getUpgradesFrom();
  case "isDefenceType": return ((net.sf.freecol.common.model.BuildingType)object).isDefenceType();
  case "getUpkeep": return ((net.sf.freecol.common.model.BuildingType)object).getUpkeep();
  case "getFirstLevel": return ((net.sf.freecol.common.model.BuildingType)object).getFirstLevel();
  case "isAutomaticBuild": return ((net.sf.freecol.common.model.BuildingType)object).isAutomaticBuild();
  case "getRebelFactor": return ((net.sf.freecol.common.model.BuildingType)object).getRebelFactor();
  case "getCompetenceFactor": return ((net.sf.freecol.common.model.BuildingType)object).getCompetenceFactor();
  case "getUpgradesTo": return ((net.sf.freecol.common.model.BuildingType)object).getUpgradesTo();
  case "getWorkPlaces": return ((net.sf.freecol.common.model.BuildingType)object).getWorkPlaces();
  case "getMinimumSkill": return ((net.sf.freecol.common.model.BuildingType)object).getMinimumSkill();
  case "getMaximumSkill": return ((net.sf.freecol.common.model.BuildingType)object).getMaximumSkill();
  case "getExpertConnectionProduction": return ((net.sf.freecol.common.model.BuildingType)object).getExpertConnectionProduction();
  case "getProducedGoodsType": return ((net.sf.freecol.common.model.BuildingType)object).getProducedGoodsType();
  }
  return common_model_BuildableType.invokeMethod(object, method, params);
}
};
names.put("common.model.BuildingType", net.sf.freecol.common.model.BuildingType.class);
metas.put(net.sf.freecol.common.model.BuildingType.class, common_model_BuildingType);
// net.sf.freecol.common.model.TileImprovement
final Meta common_model_TileImprovement = new Meta() {
net.sf.freecol.common.model.TileImprovement newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Tile.class, net.sf.freecol.common.model.TileImprovementType.class, net.sf.freecol.common.model.TileImprovementStyle.class))
    return new net.sf.freecol.common.model.TileImprovement((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Tile)params[1], (net.sf.freecol.common.model.TileImprovementType)params[2], (net.sf.freecol.common.model.TileImprovementStyle)params[3]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.TileImprovement((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getType": return ((net.sf.freecol.common.model.TileImprovement)object).getType();
  case "getDisasterChoices": return ((net.sf.freecol.common.model.TileImprovement)object).getDisasterChoices();
  case "getStyle": return ((net.sf.freecol.common.model.TileImprovement)object).getStyle();
  case "setStyle": ((net.sf.freecol.common.model.TileImprovement)object).setStyle((net.sf.freecol.common.model.TileImprovementStyle)params[0]); return null;
  case "setMagnitude": ((net.sf.freecol.common.model.TileImprovement)object).setMagnitude((int)params[0]); return null;
  case "getTurnsToComplete": return ((net.sf.freecol.common.model.TileImprovement)object).getTurnsToComplete();
  case "setTurnsToComplete": ((net.sf.freecol.common.model.TileImprovement)object).setTurnsToComplete((int)params[0]); return null;
  case "setVirtual": ((net.sf.freecol.common.model.TileImprovement)object).setVirtual((boolean)params[0]); return null;
  case "getVirtual": return ((net.sf.freecol.common.model.TileImprovement)object).getVirtual();
  case "isRoad": return ((net.sf.freecol.common.model.TileImprovement)object).isRoad();
  case "getMagnitude": return ((net.sf.freecol.common.model.TileImprovement)object).getMagnitude();
  case "isRiver": return ((net.sf.freecol.common.model.TileImprovement)object).isRiver();
  case "getConnectionDirections": return ((net.sf.freecol.common.model.TileImprovement)object).getConnectionDirections();
  case "getConnections": return ((net.sf.freecol.common.model.TileImprovement)object).getConnections();
  case "getConnectionsFromStyle": return ((net.sf.freecol.common.model.TileImprovement)object).getConnectionsFromStyle();
  case "setRiverStyle": ((net.sf.freecol.common.model.TileImprovement)object).setRiverStyle((java.lang.String)params[0]); return null;
  }
  return common_model_TileItem.invokeMethod(object, method, params);
}
};
names.put("common.model.TileImprovement", net.sf.freecol.common.model.TileImprovement.class);
metas.put(net.sf.freecol.common.model.TileImprovement.class, common_model_TileImprovement);
// net.sf.freecol.common.model.HighSeas
final Meta common_model_HighSeas = new Meta() {
net.sf.freecol.common.model.HighSeas newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.common.model.HighSeas((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class))
    return new net.sf.freecol.common.model.HighSeas((net.sf.freecol.common.model.Game)params[0]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getDestinations": return ((net.sf.freecol.common.model.HighSeas)object).getDestinations();
  case "destinationsToString": return ((net.sf.freecol.common.model.HighSeas)object).destinationsToString();
  }
  return common_model_UnitLocation.invokeMethod(object, method, params);
}
};
names.put("common.model.HighSeas", net.sf.freecol.common.model.HighSeas.class);
metas.put(net.sf.freecol.common.model.HighSeas.class, common_model_HighSeas);
// net.sf.freecol.common.model.NationSummary
final Meta common_model_NationSummary = new Meta() {
net.sf.freecol.common.model.NationSummary newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (types.length == 0)
    return new net.sf.freecol.common.model.NationSummary();
  if (areSame(types, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.Player.class))
    return new net.sf.freecol.common.model.NationSummary((net.sf.freecol.common.model.Player)params[0], (net.sf.freecol.common.model.Player)params[0]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getFoundingFathers": return ((net.sf.freecol.common.model.NationSummary)object).getFoundingFathers();
  case "getGold": return ((net.sf.freecol.common.model.NationSummary)object).getGold();
  case "getStance": return ((net.sf.freecol.common.model.NationSummary)object).getStance();
  case "getTax": return ((net.sf.freecol.common.model.NationSummary)object).getTax();
  case "getNumberOfSettlements": return ((net.sf.freecol.common.model.NationSummary)object).getNumberOfSettlements();
  case "getSoL": return ((net.sf.freecol.common.model.NationSummary)object).getSoL();
  case "getMilitaryStrength": return ((net.sf.freecol.common.model.NationSummary)object).getMilitaryStrength();
  case "getNumberOfUnits": return ((net.sf.freecol.common.model.NationSummary)object).getNumberOfUnits();
  case "getNavalStrength": return ((net.sf.freecol.common.model.NationSummary)object).getNavalStrength();
  }
  return common_model_FreeColObject.invokeMethod(object, method, params);
}
};
names.put("common.model.NationSummary", net.sf.freecol.common.model.NationSummary.class);
metas.put(net.sf.freecol.common.model.NationSummary.class, common_model_NationSummary);
// net.sf.freecol.server.model.ServerGame
final Meta server_model_ServerGame = new Meta() {
net.sf.freecol.server.model.ServerGame newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Specification.class, java.util.Random.class))
    return new net.sf.freecol.server.model.ServerGame((net.sf.freecol.common.model.Specification)params[0], (java.util.Random)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Specification.class))
    return new net.sf.freecol.server.model.ServerGame((net.sf.freecol.common.model.Specification)params[0]);
  if (areSame(types, net.sf.freecol.common.model.Specification.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.server.model.ServerGame((net.sf.freecol.common.model.Specification)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "establishUnknownEnemy": return ((net.sf.freecol.server.model.ServerGame)object).establishUnknownEnemy();
  case "checkForWinner": return ((net.sf.freecol.server.model.ServerGame)object).checkForWinner();
  case "isNextPlayerInNewTurn": return ((net.sf.freecol.server.model.ServerGame)object).isNextPlayerInNewTurn();
  }
  return common_model_Game.invokeMethod(object, method, params);
}
};
names.put("server.model.ServerGame", net.sf.freecol.server.model.ServerGame.class);
metas.put(net.sf.freecol.server.model.ServerGame.class, server_model_ServerGame);
// net.sf.freecol.server.model.ServerEurope
final Meta server_model_ServerEurope = new Meta() {
net.sf.freecol.server.model.ServerEurope newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Player.class))
    return new net.sf.freecol.server.model.ServerEurope((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Player)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.server.model.ServerEurope((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "increaseRecruitmentDifficulty": ((net.sf.freecol.server.model.ServerEurope)object).increaseRecruitmentDifficulty(); return null;
  }
  return common_model_Europe.invokeMethod(object, method, params);
}
};
names.put("server.model.ServerEurope", net.sf.freecol.server.model.ServerEurope.class);
metas.put(net.sf.freecol.server.model.ServerEurope.class, server_model_ServerEurope);
// net.sf.freecol.server.model.ServerColonyTile
final Meta server_model_ServerColonyTile = new Meta() {
net.sf.freecol.server.model.ServerColonyTile newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Colony.class, net.sf.freecol.common.model.Tile.class))
    return new net.sf.freecol.server.model.ServerColonyTile((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Colony)params[1], (net.sf.freecol.common.model.Tile)params[2]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.server.model.ServerColonyTile((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_model_ColonyTile.invokeMethod(object, method, params);
}
};
names.put("server.model.ServerColonyTile", net.sf.freecol.server.model.ServerColonyTile.class);
metas.put(net.sf.freecol.server.model.ServerColonyTile.class, server_model_ServerColonyTile);
// net.sf.freecol.server.model.ServerRegion
final Meta server_model_ServerRegion = new Meta() {
net.sf.freecol.server.model.ServerRegion newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.server.model.ServerRegion((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Region.RegionType.class))
    return new net.sf.freecol.server.model.ServerRegion((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Region.RegionType)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Region.class))
    return new net.sf.freecol.server.model.ServerRegion((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Region)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "setSize": ((net.sf.freecol.server.model.ServerRegion)object).setSize((int)params[0]); return null;
  case "getSize": return ((net.sf.freecol.server.model.ServerRegion)object).getSize();
  case "getBounds": return ((net.sf.freecol.server.model.ServerRegion)object).getBounds();
  case "isGeographic": return ((net.sf.freecol.server.model.ServerRegion)object).isGeographic();
  case "getCenter": return ((net.sf.freecol.server.model.ServerRegion)object).getCenter();
  }
  return common_model_Region.invokeMethod(object, method, params);
}
};
names.put("server.model.ServerRegion", net.sf.freecol.server.model.ServerRegion.class);
metas.put(net.sf.freecol.server.model.ServerRegion.class, server_model_ServerRegion);
// net.sf.freecol.server.model.ServerColony
final Meta server_model_ServerColony = new Meta() {
net.sf.freecol.server.model.ServerColony newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Player.class, java.lang.String.class, net.sf.freecol.common.model.Tile.class))
    return new net.sf.freecol.server.model.ServerColony((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Player)params[1], (java.lang.String)params[2], (net.sf.freecol.common.model.Tile)params[3]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.server.model.ServerColony((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_model_Colony.invokeMethod(object, method, params);
}
};
names.put("server.model.ServerColony", net.sf.freecol.server.model.ServerColony.class);
metas.put(net.sf.freecol.server.model.ServerColony.class, server_model_ServerColony);
// net.sf.freecol.server.model.ServerBuilding
final Meta server_model_ServerBuilding = new Meta() {
net.sf.freecol.server.model.ServerBuilding newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Colony.class, net.sf.freecol.common.model.BuildingType.class))
    return new net.sf.freecol.server.model.ServerBuilding((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Colony)params[1], (net.sf.freecol.common.model.BuildingType)params[2]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.server.model.ServerBuilding((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_model_Building.invokeMethod(object, method, params);
}
};
names.put("server.model.ServerBuilding", net.sf.freecol.server.model.ServerBuilding.class);
metas.put(net.sf.freecol.server.model.ServerBuilding.class, server_model_ServerBuilding);
// net.sf.freecol.server.model.ServerUnit
final Meta server_model_ServerUnit = new Meta() {
net.sf.freecol.server.model.ServerUnit newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Location.class, net.sf.freecol.common.model.Unit.class))
    return new net.sf.freecol.server.model.ServerUnit((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Location)params[1], (net.sf.freecol.common.model.Unit)params[2]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Location.class, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.UnitType.class))
    return new net.sf.freecol.server.model.ServerUnit((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Location)params[1], (net.sf.freecol.common.model.Player)params[2], (net.sf.freecol.common.model.UnitType)params[3]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.server.model.ServerUnit((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Location.class, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.UnitType.class, net.sf.freecol.common.model.Role.class))
    return new net.sf.freecol.server.model.ServerUnit((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Location)params[1], (net.sf.freecol.common.model.Player)params[2], (net.sf.freecol.common.model.UnitType)params[3], (net.sf.freecol.common.model.Role)params[4]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_model_Unit.invokeMethod(object, method, params);
}
};
names.put("server.model.ServerUnit", net.sf.freecol.server.model.ServerUnit.class);
metas.put(net.sf.freecol.server.model.ServerUnit.class, server_model_ServerUnit);
// net.sf.freecol.server.model.ServerPlayer
final Meta server_model_ServerPlayer = new Meta() {
net.sf.freecol.server.model.ServerPlayer newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.networking.Connection.class))
    return new net.sf.freecol.server.model.ServerPlayer((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.networking.Connection)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.server.model.ServerPlayer((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, boolean.class, net.sf.freecol.common.model.Nation.class))
    return new net.sf.freecol.server.model.ServerPlayer((net.sf.freecol.common.model.Game)params[0], (boolean)params[1], (net.sf.freecol.common.model.Nation)params[2]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "newTradeRoute": return ((net.sf.freecol.server.model.ServerPlayer)object).newTradeRoute();
  case "checkForDeath": return ((net.sf.freecol.server.model.ServerPlayer)object).checkForDeath();
  case "getRemainingEmigrants": return ((net.sf.freecol.server.model.ServerPlayer)object).getRemainingEmigrants();
  case "setRemainingEmigrants": ((net.sf.freecol.server.model.ServerPlayer)object).setRemainingEmigrants((int)params[0]); return null;
  case "canRecruitFoundingFather": return ((net.sf.freecol.server.model.ServerPlayer)object).canRecruitFoundingFather();
  case "getFreeBuildingTypes": return ((net.sf.freecol.server.model.ServerPlayer)object).getFreeBuildingTypes();
  case "makeTeaPartyModifier": return ((net.sf.freecol.server.model.ServerPlayer)object).makeTeaPartyModifier();
  }
  return common_model_Player.invokeMethod(object, method, params);
}
};
names.put("server.model.ServerPlayer", net.sf.freecol.server.model.ServerPlayer.class);
metas.put(net.sf.freecol.server.model.ServerPlayer.class, server_model_ServerPlayer);
// net.sf.freecol.server.model.ServerIndianSettlement
final Meta server_model_ServerIndianSettlement = new Meta() {
net.sf.freecol.server.model.ServerIndianSettlement newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Player.class, java.lang.String.class, net.sf.freecol.common.model.Tile.class, boolean.class, net.sf.freecol.common.model.UnitType.class, net.sf.freecol.common.model.Unit.class))
    return new net.sf.freecol.server.model.ServerIndianSettlement((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Player)params[1], (java.lang.String)params[2], (net.sf.freecol.common.model.Tile)params[3], (boolean)params[4], (net.sf.freecol.common.model.UnitType)params[5], (net.sf.freecol.common.model.Unit)params[6]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, java.lang.String.class))
    return new net.sf.freecol.server.model.ServerIndianSettlement((net.sf.freecol.common.model.Game)params[0], (java.lang.String)params[1]);
  if (areSame(types, net.sf.freecol.common.model.Game.class, net.sf.freecol.common.model.Player.class, net.sf.freecol.common.model.Tile.class, net.sf.freecol.common.model.IndianSettlement.class))
    return new net.sf.freecol.server.model.ServerIndianSettlement((net.sf.freecol.common.model.Game)params[0], (net.sf.freecol.common.model.Player)params[1], (net.sf.freecol.common.model.Tile)params[2], (net.sf.freecol.common.model.IndianSettlement)params[3]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return common_model_IndianSettlement.invokeMethod(object, method, params);
}
};
names.put("server.model.ServerIndianSettlement", net.sf.freecol.server.model.ServerIndianSettlement.class);
metas.put(net.sf.freecol.server.model.ServerIndianSettlement.class, server_model_ServerIndianSettlement);
// net.sf.freecol.server.ai.AIObject
final Meta server_ai_AIObject = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "dispose": ((net.sf.freecol.server.ai.AIObject)object).dispose(); return null;
  case "setSpecification": ((net.sf.freecol.server.ai.AIObject)object).setSpecification((net.sf.freecol.common.model.Specification)params[0]); return null;
  case "getAIMain": return ((net.sf.freecol.server.ai.AIObject)object).getAIMain();
  case "isDisposed": return ((net.sf.freecol.server.ai.AIObject)object).isDisposed();
  }
  return common_model_FreeColObject.invokeMethod(object, method, params);
}
};
names.put("server.ai.AIObject", net.sf.freecol.server.ai.AIObject.class);
metas.put(net.sf.freecol.server.ai.AIObject.class, server_ai_AIObject);
// net.sf.freecol.server.ai.AIPlayer
final Meta server_ai_AIPlayer = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "reconnectHandler": ((net.sf.freecol.server.ai.AIPlayer)object).reconnectHandler(); return null;
  case "getPlayer": return ((net.sf.freecol.server.ai.AIPlayer)object).getPlayer();
  case "getAIRandom": return ((net.sf.freecol.server.ai.AIPlayer)object).getAIRandom();
  case "askServer": return ((net.sf.freecol.server.ai.AIPlayer)object).askServer();
  case "getAIColonies": return ((net.sf.freecol.server.ai.AIPlayer)object).getAIColonies();
  case "acceptMercenaries": return ((net.sf.freecol.server.ai.AIPlayer)object).acceptMercenaries();
  case "setCurrentPlayerHandler": ((net.sf.freecol.server.ai.AIPlayer)object).setCurrentPlayerHandler((net.sf.freecol.common.model.Player)params[0]); return null;
  case "startWorking": ((net.sf.freecol.server.ai.AIPlayer)object).startWorking(); return null;
  case "pioneersNeeded": return ((net.sf.freecol.server.ai.AIPlayer)object).pioneersNeeded();
  case "scoutsNeeded": return ((net.sf.freecol.server.ai.AIPlayer)object).scoutsNeeded();
  case "getConnection": return ((net.sf.freecol.server.ai.AIPlayer)object).getConnection();
  }
  return server_ai_AIObject.invokeMethod(object, method, params);
}
};
names.put("server.ai.AIPlayer", net.sf.freecol.server.ai.AIPlayer.class);
metas.put(net.sf.freecol.server.ai.AIPlayer.class, server_ai_AIPlayer);
// net.sf.freecol.server.ai.MissionAIPlayer
final Meta server_ai_MissionAIPlayer = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return server_ai_AIPlayer.invokeMethod(object, method, params);
}
};
names.put("server.ai.MissionAIPlayer", net.sf.freecol.server.ai.MissionAIPlayer.class);
metas.put(net.sf.freecol.server.ai.MissionAIPlayer.class, server_ai_MissionAIPlayer);
// net.sf.freecol.server.ai.EuropeanAIPlayer
final Meta server_ai_EuropeanAIPlayer = new Meta() {
net.sf.freecol.server.ai.EuropeanAIPlayer newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.server.ai.EuropeanAIPlayer((net.sf.freecol.server.ai.AIMain)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, net.sf.freecol.common.model.Player.class))
    return new net.sf.freecol.server.ai.EuropeanAIPlayer((net.sf.freecol.server.ai.AIMain)params[0], (net.sf.freecol.common.model.Player)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getWishes": return ((net.sf.freecol.server.ai.EuropeanAIPlayer)object).getWishes();
  case "getUrgentTransportables": return ((net.sf.freecol.server.ai.EuropeanAIPlayer)object).getUrgentTransportables();
  }
  return server_ai_MissionAIPlayer.invokeMethod(object, method, params);
}
};
names.put("server.ai.EuropeanAIPlayer", net.sf.freecol.server.ai.EuropeanAIPlayer.class);
metas.put(net.sf.freecol.server.ai.EuropeanAIPlayer.class, server_ai_EuropeanAIPlayer);
// net.sf.freecol.server.ai.ValuedAIObject
final Meta server_ai_ValuedAIObject = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getValue": return ((net.sf.freecol.server.ai.ValuedAIObject)object).getValue();
  case "setValue": ((net.sf.freecol.server.ai.ValuedAIObject)object).setValue((int)params[0]); return null;
  }
  return server_ai_AIObject.invokeMethod(object, method, params);
}
};
names.put("server.ai.ValuedAIObject", net.sf.freecol.server.ai.ValuedAIObject.class);
metas.put(net.sf.freecol.server.ai.ValuedAIObject.class, server_ai_ValuedAIObject);
// net.sf.freecol.server.ai.TransportableAIObject
final Meta server_ai_TransportableAIObject = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getLocation": return ((net.sf.freecol.server.ai.TransportableAIObject)object).getLocation();
  case "getSpaceTaken": return ((net.sf.freecol.server.ai.TransportableAIObject)object).getSpaceTaken();
  case "setTransportPriority": ((net.sf.freecol.server.ai.TransportableAIObject)object).setTransportPriority((int)params[0]); return null;
  case "setTransport": ((net.sf.freecol.server.ai.TransportableAIObject)object).setTransport((net.sf.freecol.server.ai.AIUnit)params[0]); return null;
  case "leaveTransport": return ((net.sf.freecol.server.ai.TransportableAIObject)object).leaveTransport();
  case "canMove": return ((net.sf.freecol.server.ai.TransportableAIObject)object).canMove();
  case "getTransportPriority": return ((net.sf.freecol.server.ai.TransportableAIObject)object).getTransportPriority();
  case "getTransport": return ((net.sf.freecol.server.ai.TransportableAIObject)object).getTransport();
  case "dropTransport": return ((net.sf.freecol.server.ai.TransportableAIObject)object).dropTransport();
  case "getTransportDestination": return ((net.sf.freecol.server.ai.TransportableAIObject)object).getTransportDestination();
  case "getTransportSource": return ((net.sf.freecol.server.ai.TransportableAIObject)object).getTransportSource();
  case "incrementTransportPriority": ((net.sf.freecol.server.ai.TransportableAIObject)object).incrementTransportPriority(); return null;
  case "setTransportDestination": ((net.sf.freecol.server.ai.TransportableAIObject)object).setTransportDestination((net.sf.freecol.common.model.Location)params[0]); return null;
  case "invalidReason": return ((net.sf.freecol.server.ai.TransportableAIObject)object).invalidReason();
  case "getTransportLocatable": return ((net.sf.freecol.server.ai.TransportableAIObject)object).getTransportLocatable();
  }
  return server_ai_ValuedAIObject.invokeMethod(object, method, params);
}
};
names.put("server.ai.TransportableAIObject", net.sf.freecol.server.ai.TransportableAIObject.class);
metas.put(net.sf.freecol.server.ai.TransportableAIObject.class, server_ai_TransportableAIObject);
// net.sf.freecol.server.ai.AIGoods
final Meta server_ai_AIGoods = new Meta() {
net.sf.freecol.server.ai.AIGoods newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.server.ai.AIGoods((net.sf.freecol.server.ai.AIMain)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, net.sf.freecol.common.model.Location.class, net.sf.freecol.common.model.GoodsType.class, int.class, net.sf.freecol.common.model.Location.class))
    return new net.sf.freecol.server.ai.AIGoods((net.sf.freecol.server.ai.AIMain)params[0], (net.sf.freecol.common.model.Location)params[1], (net.sf.freecol.common.model.GoodsType)params[2], (int)params[3], (net.sf.freecol.common.model.Location)params[1]);
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, java.lang.String.class))
    return new net.sf.freecol.server.ai.AIGoods((net.sf.freecol.server.ai.AIMain)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getGoods": return ((net.sf.freecol.server.ai.AIGoods)object).getGoods();
  case "getGoodsType": return ((net.sf.freecol.server.ai.AIGoods)object).getGoodsType();
  case "setGoods": ((net.sf.freecol.server.ai.AIGoods)object).setGoods((net.sf.freecol.common.model.Goods)params[0]); return null;
  case "getGoodsAmount": return ((net.sf.freecol.server.ai.AIGoods)object).getGoodsAmount();
  case "setGoodsAmount": ((net.sf.freecol.server.ai.AIGoods)object).setGoodsAmount((int)params[0]); return null;
  }
  return server_ai_TransportableAIObject.invokeMethod(object, method, params);
}
};
names.put("server.ai.AIGoods", net.sf.freecol.server.ai.AIGoods.class);
metas.put(net.sf.freecol.server.ai.AIGoods.class, server_ai_AIGoods);
// net.sf.freecol.server.ai.Wish
final Meta server_ai_Wish = new Meta() {
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getDestination": return ((net.sf.freecol.server.ai.Wish)object).getDestination();
  case "getDestinationAIColony": return ((net.sf.freecol.server.ai.Wish)object).getDestinationAIColony();
  case "shouldBeStored": return ((net.sf.freecol.server.ai.Wish)object).shouldBeStored();
  case "getTransportable": return ((net.sf.freecol.server.ai.Wish)object).getTransportable();
  case "setTransportable": ((net.sf.freecol.server.ai.Wish)object).setTransportable((net.sf.freecol.server.ai.TransportableAIObject)params[0]); return null;
  }
  return server_ai_ValuedAIObject.invokeMethod(object, method, params);
}
};
names.put("server.ai.Wish", net.sf.freecol.server.ai.Wish.class);
metas.put(net.sf.freecol.server.ai.Wish.class, server_ai_Wish);
// net.sf.freecol.server.ai.GoodsWish
final Meta server_ai_GoodsWish = new Meta() {
net.sf.freecol.server.ai.GoodsWish newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.server.ai.GoodsWish((net.sf.freecol.server.ai.AIMain)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, net.sf.freecol.common.model.Location.class, int.class, int.class, net.sf.freecol.common.model.GoodsType.class))
    return new net.sf.freecol.server.ai.GoodsWish((net.sf.freecol.server.ai.AIMain)params[0], (net.sf.freecol.common.model.Location)params[1], (int)params[2], (int)params[2], (net.sf.freecol.common.model.GoodsType)params[4]);
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, java.lang.String.class))
    return new net.sf.freecol.server.ai.GoodsWish((net.sf.freecol.server.ai.AIMain)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getGoodsType": return ((net.sf.freecol.server.ai.GoodsWish)object).getGoodsType();
  case "getGoodsAmount": return ((net.sf.freecol.server.ai.GoodsWish)object).getGoodsAmount();
  case "setGoodsAmount": ((net.sf.freecol.server.ai.GoodsWish)object).setGoodsAmount((int)params[0]); return null;
  }
  return server_ai_Wish.invokeMethod(object, method, params);
}
};
names.put("server.ai.GoodsWish", net.sf.freecol.server.ai.GoodsWish.class);
metas.put(net.sf.freecol.server.ai.GoodsWish.class, server_ai_GoodsWish);
// net.sf.freecol.server.ai.AIMain
final Meta server_ai_AIMain = new Meta() {
net.sf.freecol.server.ai.AIMain newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.server.FreeColServer.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.server.ai.AIMain((net.sf.freecol.server.FreeColServer)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, net.sf.freecol.server.FreeColServer.class))
    return new net.sf.freecol.server.ai.AIMain((net.sf.freecol.server.FreeColServer)params[0]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getNextId": return ((net.sf.freecol.server.ai.AIMain)object).getNextId();
  case "getFreeColServer": return ((net.sf.freecol.server.ai.AIMain)object).getFreeColServer();
  case "getAIStatistics": return ((net.sf.freecol.server.ai.AIMain)object).getAIStatistics();
  case "checkSortConsistency": return ((net.sf.freecol.server.ai.AIMain)object).checkSortConsistency();
  }
  return common_model_FreeColObject.invokeMethod(object, method, params);
}
};
names.put("server.ai.AIMain", net.sf.freecol.server.ai.AIMain.class);
metas.put(net.sf.freecol.server.ai.AIMain.class, server_ai_AIMain);
// net.sf.freecol.server.ai.TileImprovementPlan
final Meta server_ai_TileImprovementPlan = new Meta() {
net.sf.freecol.server.ai.TileImprovementPlan newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.server.ai.TileImprovementPlan((net.sf.freecol.server.ai.AIMain)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, net.sf.freecol.common.model.Tile.class, net.sf.freecol.common.model.TileImprovementType.class, int.class))
    return new net.sf.freecol.server.ai.TileImprovementPlan((net.sf.freecol.server.ai.AIMain)params[0], (net.sf.freecol.common.model.Tile)params[1], (net.sf.freecol.common.model.TileImprovementType)params[2], (int)params[3]);
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, java.lang.String.class))
    return new net.sf.freecol.server.ai.TileImprovementPlan((net.sf.freecol.server.ai.AIMain)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "validate": return ((net.sf.freecol.server.ai.TileImprovementPlan)object).validate();
  case "getType": return ((net.sf.freecol.server.ai.TileImprovementPlan)object).getType();
  case "getTarget": return ((net.sf.freecol.server.ai.TileImprovementPlan)object).getTarget();
  case "setType": ((net.sf.freecol.server.ai.TileImprovementPlan)object).setType((net.sf.freecol.common.model.TileImprovementType)params[0]); return null;
  case "isComplete": return ((net.sf.freecol.server.ai.TileImprovementPlan)object).isComplete();
  case "setPioneer": ((net.sf.freecol.server.ai.TileImprovementPlan)object).setPioneer((net.sf.freecol.server.ai.AIUnit)params[0]); return null;
  case "getPioneer": return ((net.sf.freecol.server.ai.TileImprovementPlan)object).getPioneer();
  }
  return server_ai_ValuedAIObject.invokeMethod(object, method, params);
}
};
names.put("server.ai.TileImprovementPlan", net.sf.freecol.server.ai.TileImprovementPlan.class);
metas.put(net.sf.freecol.server.ai.TileImprovementPlan.class, server_ai_TileImprovementPlan);
// net.sf.freecol.server.ai.AIColony
final Meta server_ai_AIColony = new Meta() {
net.sf.freecol.server.ai.AIColony newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.server.ai.AIColony((net.sf.freecol.server.ai.AIMain)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, net.sf.freecol.common.model.Colony.class))
    return new net.sf.freecol.server.ai.AIColony((net.sf.freecol.server.ai.AIMain)params[0], (net.sf.freecol.common.model.Colony)params[1]);
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, java.lang.String.class))
    return new net.sf.freecol.server.ai.AIColony((net.sf.freecol.server.ai.AIMain)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getColony": return ((net.sf.freecol.server.ai.AIColony)object).getColony();
  case "isBadlyDefended": return ((net.sf.freecol.server.ai.AIColony)object).isBadlyDefended();
  case "getExportGoods": return ((net.sf.freecol.server.ai.AIColony)object).getExportGoods();
  case "getWishes": return ((net.sf.freecol.server.ai.AIColony)object).getWishes();
  case "requestRearrange": ((net.sf.freecol.server.ai.AIColony)object).requestRearrange(); return null;
  case "getGoodsWishes": return ((net.sf.freecol.server.ai.AIColony)object).getGoodsWishes();
  case "getWorkerWishes": return ((net.sf.freecol.server.ai.AIColony)object).getWorkerWishes();
  case "getPlannedBuildableTypes": return ((net.sf.freecol.server.ai.AIColony)object).getPlannedBuildableTypes();
  case "planToString": return ((net.sf.freecol.server.ai.AIColony)object).planToString();
  case "getTileImprovementPlans": return ((net.sf.freecol.server.ai.AIColony)object).getTileImprovementPlans();
  }
  return server_ai_AIObject.invokeMethod(object, method, params);
}
};
names.put("server.ai.AIColony", net.sf.freecol.server.ai.AIColony.class);
metas.put(net.sf.freecol.server.ai.AIColony.class, server_ai_AIColony);
// net.sf.freecol.server.ai.AIUnit
final Meta server_ai_AIUnit = new Meta() {
net.sf.freecol.server.ai.AIUnit newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.server.ai.AIUnit((net.sf.freecol.server.ai.AIMain)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, net.sf.freecol.common.model.Unit.class))
    return new net.sf.freecol.server.ai.AIUnit((net.sf.freecol.server.ai.AIMain)params[0], (net.sf.freecol.common.model.Unit)params[1]);
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, java.lang.String.class))
    return new net.sf.freecol.server.ai.AIUnit((net.sf.freecol.server.ai.AIMain)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getOwner": return ((net.sf.freecol.server.ai.AIUnit)object).getOwner();
  case "getAIRandom": return ((net.sf.freecol.server.ai.AIUnit)object).getAIRandom();
  case "getUnit": return ((net.sf.freecol.server.ai.AIUnit)object).getUnit();
  case "hasCargo": return ((net.sf.freecol.server.ai.AIUnit)object).hasCargo();
  case "getPioneerScore": return ((net.sf.freecol.server.ai.AIUnit)object).getPioneerScore();
  case "getScoutScore": return ((net.sf.freecol.server.ai.AIUnit)object).getScoutScore();
  case "moveToEurope": return ((net.sf.freecol.server.ai.AIUnit)object).moveToEurope();
  case "getMission": return ((net.sf.freecol.server.ai.AIUnit)object).getMission();
  case "setMission": ((net.sf.freecol.server.ai.AIUnit)object).setMission((net.sf.freecol.server.ai.mission.Mission)params[0]); return null;
  case "getTrivialTarget": return ((net.sf.freecol.server.ai.AIUnit)object).getTrivialTarget();
  case "removeMission": ((net.sf.freecol.server.ai.AIUnit)object).removeMission(); return null;
  case "hasDefendSettlementMission": return ((net.sf.freecol.server.ai.AIUnit)object).hasDefendSettlementMission();
  case "moveToAmerica": return ((net.sf.freecol.server.ai.AIUnit)object).moveToAmerica();
  case "hasMission": return ((net.sf.freecol.server.ai.AIUnit)object).hasMission();
  case "getBuilderScore": return ((net.sf.freecol.server.ai.AIUnit)object).getBuilderScore();
  case "getAIOwner": return ((net.sf.freecol.server.ai.AIUnit)object).getAIOwner();
  }
  return server_ai_TransportableAIObject.invokeMethod(object, method, params);
}
};
names.put("server.ai.AIUnit", net.sf.freecol.server.ai.AIUnit.class);
metas.put(net.sf.freecol.server.ai.AIUnit.class, server_ai_AIUnit);
// net.sf.freecol.server.ai.REFAIPlayer
final Meta server_ai_REFAIPlayer = new Meta() {
net.sf.freecol.server.ai.REFAIPlayer newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.server.ai.REFAIPlayer((net.sf.freecol.server.ai.AIMain)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, net.sf.freecol.common.model.Player.class))
    return new net.sf.freecol.server.ai.REFAIPlayer((net.sf.freecol.server.ai.AIMain)params[0], (net.sf.freecol.common.model.Player)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  return server_ai_EuropeanAIPlayer.invokeMethod(object, method, params);
}
};
names.put("server.ai.REFAIPlayer", net.sf.freecol.server.ai.REFAIPlayer.class);
metas.put(net.sf.freecol.server.ai.REFAIPlayer.class, server_ai_REFAIPlayer);
// net.sf.freecol.server.ai.WorkLocationPlan
final Meta server_ai_WorkLocationPlan = new Meta() {
net.sf.freecol.server.ai.WorkLocationPlan newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, net.sf.freecol.common.model.WorkLocation.class, net.sf.freecol.common.model.GoodsType.class))
    return new net.sf.freecol.server.ai.WorkLocationPlan((net.sf.freecol.server.ai.AIMain)params[0], (net.sf.freecol.common.model.WorkLocation)params[1], (net.sf.freecol.common.model.GoodsType)params[2]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getGoodsType": return ((net.sf.freecol.server.ai.WorkLocationPlan)object).getGoodsType();
  case "getWorkLocation": return ((net.sf.freecol.server.ai.WorkLocationPlan)object).getWorkLocation();
  case "setGoodsType": ((net.sf.freecol.server.ai.WorkLocationPlan)object).setGoodsType((net.sf.freecol.common.model.GoodsType)params[0]); return null;
  case "isFoodPlan": return ((net.sf.freecol.server.ai.WorkLocationPlan)object).isFoodPlan();
  }
  return server_ai_AIObject.invokeMethod(object, method, params);
}
};
names.put("server.ai.WorkLocationPlan", net.sf.freecol.server.ai.WorkLocationPlan.class);
metas.put(net.sf.freecol.server.ai.WorkLocationPlan.class, server_ai_WorkLocationPlan);
// net.sf.freecol.server.ai.NativeAIPlayer
final Meta server_ai_NativeAIPlayer = new Meta() {
net.sf.freecol.server.ai.NativeAIPlayer newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.server.ai.NativeAIPlayer((net.sf.freecol.server.ai.AIMain)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, net.sf.freecol.common.model.Player.class))
    return new net.sf.freecol.server.ai.NativeAIPlayer((net.sf.freecol.server.ai.AIMain)params[0], (net.sf.freecol.common.model.Player)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "abortInvalidMissions": ((net.sf.freecol.server.ai.NativeAIPlayer)object).abortInvalidMissions(); return null;
  }
  return server_ai_MissionAIPlayer.invokeMethod(object, method, params);
}
};
names.put("server.ai.NativeAIPlayer", net.sf.freecol.server.ai.NativeAIPlayer.class);
metas.put(net.sf.freecol.server.ai.NativeAIPlayer.class, server_ai_NativeAIPlayer);
// net.sf.freecol.server.ai.WorkerWish
final Meta server_ai_WorkerWish = new Meta() {
net.sf.freecol.server.ai.WorkerWish newInstance(Class<?>[] types, Object[] params) throws Exception {
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, net.sf.freecol.common.io.FreeColXMLReader.class))
    return new net.sf.freecol.server.ai.WorkerWish((net.sf.freecol.server.ai.AIMain)params[0], (net.sf.freecol.common.io.FreeColXMLReader)params[1]);
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, net.sf.freecol.common.model.Location.class, int.class, net.sf.freecol.common.model.UnitType.class, boolean.class))
    return new net.sf.freecol.server.ai.WorkerWish((net.sf.freecol.server.ai.AIMain)params[0], (net.sf.freecol.common.model.Location)params[1], (int)params[2], (net.sf.freecol.common.model.UnitType)params[3], (boolean)params[4]);
  if (areSame(types, net.sf.freecol.server.ai.AIMain.class, java.lang.String.class))
    return new net.sf.freecol.server.ai.WorkerWish((net.sf.freecol.server.ai.AIMain)params[0], (java.lang.String)params[1]);
  throw new IllegalArgumentException();
}
Object invokeMethod(Object object, String method, Object... params) throws Exception {
  switch (method) {
  case "getUnitType": return ((net.sf.freecol.server.ai.WorkerWish)object).getUnitType();
  }
  return server_ai_Wish.invokeMethod(object, method, params);
}
};
names.put("server.ai.WorkerWish", net.sf.freecol.server.ai.WorkerWish.class);
metas.put(net.sf.freecol.server.ai.WorkerWish.class, server_ai_WorkerWish);
}
}
